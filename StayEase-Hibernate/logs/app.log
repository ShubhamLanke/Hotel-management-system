2025-04-22 11:18:44 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 11:18:44 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 11:18:44 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 11:18:44 DEBUG HikariConfig - autoCommit......................true
2025-04-22 11:18:44 DEBUG HikariConfig - catalog.........................none
2025-04-22 11:18:44 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 11:18:44 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 11:18:44 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 11:18:44 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@2fb0623e
2025-04-22 11:18:44 DEBUG HikariConfig - dataSource......................none
2025-04-22 11:18:44 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 11:18:44 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 11:18:44 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 11:18:44 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 11:18:44 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 11:18:44 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 11:18:44 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 11:18:44 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 11:18:44 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 11:18:44 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 11:18:44 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 11:18:44 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 11:18:44 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 11:18:44 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 11:18:44 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 11:18:44 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 11:18:44 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 11:18:44 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 11:18:44 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 11:18:44 DEBUG HikariConfig - password........................<masked>
2025-04-22 11:18:44 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 11:18:44 DEBUG HikariConfig - readOnly........................false
2025-04-22 11:18:44 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 11:18:44 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 11:18:44 DEBUG HikariConfig - schema..........................none
2025-04-22 11:18:44 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 11:18:44 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 11:18:44 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 11:18:44 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 11:18:44 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 11:18:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9a656484-1425-4162-b2c3-0132f13b26aa)
2025-04-22 11:18:44 DEBUG PoolBase - HikariPool-1 - Established new connection (9a656484-1425-4162-b2c3-0132f13b26aa)
2025-04-22 11:18:44 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3f270e0a
2025-04-22 11:18:44 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 11:18:44 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 11:18:44 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 11:18:44 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 11:18:44 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 11:18:44 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 11:18:44 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 11:18:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 11:18:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (093bc7f4-fd87-4323-9292-8af5e0a44038)
2025-04-22 11:18:44 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 11:18:44 DEBUG PoolBase - HikariPool-1 - Established new connection (093bc7f4-fd87-4323-9292-8af5e0a44038)
2025-04-22 11:18:44 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@dc4af7c
2025-04-22 11:18:44 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 11:18:44 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 11:18:44 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 11:18:44 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 11:18:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (77885a67-4f66-4334-8ad9-00c78ed971db)
2025-04-22 11:18:44 DEBUG PoolBase - HikariPool-1 - Established new connection (77885a67-4f66-4334-8ad9-00c78ed971db)
2025-04-22 11:18:44 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@73cc40c
2025-04-22 11:18:44 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 11:18:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (82f39183-2eb6-43f1-ad62-2aee5814e3eb)
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70d2e40b
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70d2e40b
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2449cff7
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-22 11:18:44 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-22 11:18:44 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@66238be2] into BootstrapContext; was [null]
2025-04-22 11:18:44 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1c25b8a7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@200606de]
2025-04-22 11:18:44 DEBUG PoolBase - HikariPool-1 - Established new connection (82f39183-2eb6-43f1-ad62-2aee5814e3eb)
2025-04-22 11:18:44 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@423e5a8f
2025-04-22 11:18:44 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 11:18:44 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 11:18:44 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 11:18:44 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 11:18:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9a958e5c-0fc5-41ff-bdb9-87c6ab7eac60)
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Established new connection (9a958e5c-0fc5-41ff-bdb9-87c6ab7eac60)
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6aa9b2fb
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1e96ea68-f52a-45f6-857f-039e7621b7dd)
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Established new connection (1e96ea68-f52a-45f6-857f-039e7621b7dd)
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@73b6d9ea
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=5/10, active=1, waiting=0)
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (57a1dd48-9479-4b24-8965-6fed1bf8024d)
2025-04-22 11:18:45 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 11:18:45 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 11:18:45 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Established new connection (57a1dd48-9479-4b24-8965-6fed1bf8024d)
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@12cb6f34
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3d93d561-4049-4626-8fa9-0750c1f7599e)
2025-04-22 11:18:45 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 11:18:45 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 11:18:45 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Established new connection (3d93d561-4049-4626-8fa9-0750c1f7599e)
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2211a5c0
2025-04-22 11:18:45 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1f966492) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@63fdffcd)
2025-04-22 11:18:45 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7428de63) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66f659e6)
2025-04-22 11:18:45 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 11:18:45 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@345cf395
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@345cf395
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70d2e40b`
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df1e553c-14a0-4551-b1b9-8787a1c494be)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:18:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Established new connection (df1e553c-14a0-4551-b1b9-8787a1c494be)
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@588f513
2025-04-22 11:18:45 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 11:18:45 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@418c020b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51351f28]
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (97209a1b-3ba8-4491-8a29-8a096f01dcff)
2025-04-22 11:18:45 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 11:18:45 DEBUG PoolBase - HikariPool-1 - Established new connection (97209a1b-3ba8-4491-8a29-8a096f01dcff)
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@403415c1
2025-04-22 11:18:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 11:18:45 DEBUG EntityBinder - Import with entity name User
2025-04-22 11:18:45 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:18:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property userID
2025-04-22 11:18:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property email
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property isActive
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property name
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property password
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property userRole
2025-04-22 11:18:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 11:18:45 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 11:18:45 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property guestId
2025-04-22 11:18:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property age
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property name
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property user
2025-04-22 11:18:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 11:18:45 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 11:18:45 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property bookingId
2025-04-22 11:18:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property checkIn
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property checkOut
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property room
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property status
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property user
2025-04-22 11:18:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 11:18:45 DEBUG EntityBinder - Import with entity name Room
2025-04-22 11:18:45 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property roomID
2025-04-22 11:18:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property price
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property roomType
2025-04-22 11:18:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 11:18:45 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 11:18:45 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 11:18:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property amount
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property booking
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property issueDate
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 11:18:45 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 11:18:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 11:18:45 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 11:18:45 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:18:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:18:45 DEBUG PropertyBinder - Building property user
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 11:18:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 11:18:45 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 11:18:45 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 11:18:45 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 11:18:45 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 11:18:45 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 11:18:45 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 11:18:45 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 11:18:45 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3451f01d, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 11:18:45 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1bf14704] under count; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14c93774] under every; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@62a68bcb] under any; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb] under sinh; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f654cee] under cosh; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e1fd62b] under tanh; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6] under pi; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942] under log; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3ba3d4b6] under position; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1163a27] under overlay; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@64e1377c] under trim; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@e280403] under cast; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4] under collate; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6968c1d6] under extract; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2ceee4b6] under ifnull; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@e784320] under pad; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4cad79bc] under str; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7885776b] under format; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3a3ed300] under timestampadd; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@31a2a9fa] under timestampdiff; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46dcbeab] under current_date; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36e43829] under current_time; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@152c4495] under current_timestamp; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under local_date; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dcb42a9] under local_time; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6af90849] under local_datetime; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1d06f16f] under offset_datetime; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under instant; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@80b122b] under sql; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e1fd62b
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f654cee
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@f9cab00] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7dcb42a9
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6af90849
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7c5d1d25] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@550e9be6] under bit_length; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3f96f020] under octet_length; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32eae6f2] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3ba3d4b6
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ca61bf] under bitand; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73a0f2b] under bitor; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under bitxor; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d526c] under bitnot; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f2f0109] under median; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293] under insert; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4debbf0] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1163a27
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6a5e167a] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@7e4579c7] under listagg; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6274670b] under array; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@53ce2392] under array_list; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@7f7b6639] under array_agg; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@3ddb774f] under array_position; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@af7e376] under array_positions; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@25a7fedf] under array_positions_list; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6361b799] under array_length; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@29be997f] under array_concat; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@45545e7a] under array_prepend; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@9f674ac] under array_append; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@54c622a7] under array_contains; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@37348491] under array_contains_nullable; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@630bf683] under array_overlaps; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@22d322f5] under array_overlaps_nullable; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60df7989] under array_get; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3520963d] under array_set; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@68b366e2] under array_remove_index; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d74c81b] under array_slice; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10b687f2] under array_trim; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@568750b7] under array_fill; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3e28fee1] under array_fill_list; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@2e7bf7b7] under array_to_string; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3596b249] under mode; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7237f3c1] under percentile_cont; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@781711b7] under percentile_disc; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@69909c14] under rank; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5d3b58ca] under dense_rank; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4e224df5] under percent_rank; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@32456db0] under cume_dist; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@1d02af26] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3fa7df1] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dd90166] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@f438904] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@32118208] under trunc; prior registration was null
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 11:18:45 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@414f87a9] under date_trunc; prior registration was null
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 11:18:45 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 11:18:45 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 11:18:45 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 11:18:45 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 11:18:45 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:18:45 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 11:18:45 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 11:18:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 11:18:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:18:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:18:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:18:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:18:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:18:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 11:18:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 11:18:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 11:18:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:18:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:18:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 11:18:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 11:18:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 11:18:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 11:18:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 11:18:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 11:18:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 11:18:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 11:18:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 11:18:46 DEBUG creation - Starting post-init callbacks
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 11:18:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 11:18:46 DEBUG create - Created new SQL alias : g1_0
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@56c0a61e] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 11:18:46 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:18:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 11:18:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 11:18:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 11:18:46 DEBUG create - Created new SQL alias : b1_0
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a55fb81] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 11:18:46 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7272ee51] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 11:18:46 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:18:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 11:18:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 11:18:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 11:18:46 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:18:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 11:18:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:18:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 11:18:46 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 11:18:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 11:18:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 11:18:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 11:18:46 DEBUG create - Created new SQL alias : i1_0
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a45afd4] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 11:18:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52f9e8bb] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 11:18:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 11:18:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 11:18:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 11:18:46 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 11:18:46 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 11:18:46 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 11:18:46 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 11:18:46 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 11:18:46 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@418c020b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@63485d7]
2025-04-22 11:18:46 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 11:18:46 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 11:18:46 DEBUG Table - No alter strings for table : bookings
2025-04-22 11:18:46 DEBUG Table - No alter strings for table : guests
2025-04-22 11:18:46 DEBUG Table - No alter strings for table : invoices
2025-04-22 11:18:46 DEBUG Table - No alter strings for table : rooms
2025-04-22 11:18:46 DEBUG Table - No alter strings for table : users
2025-04-22 11:18:46 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7493d937
2025-04-22 11:18:46 DEBUG SessionFactoryRegistry - Registering SessionFactory: 6898942e-1a5c-430d-9f34-7a06021a13fa (my-persistence-unit)
2025-04-22 11:18:46 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 11:18:46 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 11:18:46 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 11:18:46 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 11:18:46 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 11:18:46 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:18:47 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:18:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 11:18:47 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 11:18:47 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 11:18:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 11:18:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 11:18:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:18:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2130299045 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:18:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:18:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 11:18:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1252333507
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 11:18:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 11:18:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6651efa4
2025-04-22 11:18:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:18:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:18:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:18:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1315078366 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:18:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:18:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 11:18:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 7881234
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:18:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 11:18:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 11:18:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ac646b3
2025-04-22 11:18:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:18:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:18:47 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-22 11:18:47 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-22 11:19:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:19:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:19:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:19:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:20:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:20:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:20:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:20:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@403415c1 is alive
2025-04-22 11:20:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73b6d9ea is alive
2025-04-22 11:20:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588f513 is alive
2025-04-22 11:20:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f270e0a is alive
2025-04-22 11:20:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73cc40c is alive
2025-04-22 11:20:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@dc4af7c is alive
2025-04-22 11:20:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12cb6f34 is alive
2025-04-22 11:20:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211a5c0 is alive
2025-04-22 11:20:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6aa9b2fb is alive
2025-04-22 11:20:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:20:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:21:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:21:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:21:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:21:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:22:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:22:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@403415c1 is alive
2025-04-22 11:22:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73b6d9ea is alive
2025-04-22 11:22:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588f513 is alive
2025-04-22 11:22:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:22:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:22:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f270e0a is alive
2025-04-22 11:22:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73cc40c is alive
2025-04-22 11:22:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@dc4af7c is alive
2025-04-22 11:22:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12cb6f34 is alive
2025-04-22 11:22:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211a5c0 is alive
2025-04-22 11:22:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6aa9b2fb is alive
2025-04-22 11:22:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:22:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:23:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:23:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:23:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:23:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:23:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:23:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@403415c1 is alive
2025-04-22 11:23:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73b6d9ea is alive
2025-04-22 11:23:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588f513 is alive
2025-04-22 11:24:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f270e0a is alive
2025-04-22 11:24:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:24:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:24:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73cc40c is alive
2025-04-22 11:24:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@dc4af7c is alive
2025-04-22 11:24:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12cb6f34 is alive
2025-04-22 11:24:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211a5c0 is alive
2025-04-22 11:24:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6aa9b2fb is alive
2025-04-22 11:24:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:24:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:25:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:25:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:25:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:25:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@403415c1 is alive
2025-04-22 11:25:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73b6d9ea is alive
2025-04-22 11:25:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588f513 is alive
2025-04-22 11:25:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:25:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:25:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f270e0a is alive
2025-04-22 11:26:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73cc40c is alive
2025-04-22 11:26:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:26:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:26:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@dc4af7c is alive
2025-04-22 11:26:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12cb6f34 is alive
2025-04-22 11:26:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211a5c0 is alive
2025-04-22 11:26:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6aa9b2fb is alive
2025-04-22 11:26:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:26:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:27:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:27:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:27:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:27:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@403415c1 is alive
2025-04-22 11:27:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73b6d9ea is alive
2025-04-22 11:27:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588f513 is alive
2025-04-22 11:27:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f270e0a is alive
2025-04-22 11:27:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:27:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:27:50 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-22 11:27:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:27:54 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@517653428 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:27:54 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:27:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:27:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:27:54 ERROR UserDaoImpl - Error fetching user by email SAURAV@GMAIL.COM: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.searchUserDetails(StaffMenuUI.java:556) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:74) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:100) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-22 11:28:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73cc40c is alive
2025-04-22 11:28:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:28:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:28:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@dc4af7c is alive
2025-04-22 11:28:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12cb6f34 is alive
2025-04-22 11:28:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211a5c0 is alive
2025-04-22 11:28:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6aa9b2fb is alive
2025-04-22 11:28:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:28:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:28:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:29:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@403415c1 is alive
2025-04-22 11:29:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73b6d9ea is alive
2025-04-22 11:29:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588f513 is alive
2025-04-22 11:29:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:29:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:29:17 ERROR StaffMenuUI - InputMismatchException: Invalid input by user SHUBHAM LANKE in staff menu
2025-04-22 11:29:23 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-22 11:29:23 INFO  StaffMenuUI - Booking room for a user.
2025-04-22 11:29:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:29:27 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@974220454 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:29:27 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 543615127
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1123d461
2025-04-22 11:29:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:29:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:29:27 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 11:29:27 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:29:27 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:29:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:29:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 11:29:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 11:29:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:29:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:29:27 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1080517451 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:29:27 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1205343271
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1871846962
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 835006543
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1138692983
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 485375493
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1676857380
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 2066600797
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1079124964
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 757150717
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1487381901
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1300570879
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 479819176
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 948110109
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1567441485
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 958071237
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1853364091
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 11:29:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:29:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 11:29:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5db04bd2
2025-04-22 11:29:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:29:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:29:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f270e0a is alive
2025-04-22 11:29:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:29:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:29:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73cc40c is alive
2025-04-22 11:30:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:30:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:30:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:30:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@dc4af7c is alive
2025-04-22 11:30:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12cb6f34 is alive
2025-04-22 11:30:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211a5c0 is alive
2025-04-22 11:30:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6aa9b2fb is alive
2025-04-22 11:30:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:30:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:30:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@403415c1 is alive
2025-04-22 11:30:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73b6d9ea is alive
2025-04-22 11:30:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588f513 is alive
2025-04-22 11:31:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:31:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:31:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f270e0a is alive
2025-04-22 11:31:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73cc40c is alive
2025-04-22 11:31:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:31:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:32:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:32:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:32:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:32:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@403415c1 is alive
2025-04-22 11:32:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73b6d9ea is alive
2025-04-22 11:32:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@dc4af7c is alive
2025-04-22 11:32:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12cb6f34 is alive
2025-04-22 11:32:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211a5c0 is alive
2025-04-22 11:32:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6aa9b2fb is alive
2025-04-22 11:32:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588f513 is alive
2025-04-22 11:32:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:32:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:33:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f270e0a is alive
2025-04-22 11:33:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:33:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:33:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73cc40c is alive
2025-04-22 11:33:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:33:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:33:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:34:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@403415c1 is alive
2025-04-22 11:34:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:34:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:34:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73b6d9ea is alive
2025-04-22 11:34:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588f513 is alive
2025-04-22 11:34:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@dc4af7c is alive
2025-04-22 11:34:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12cb6f34 is alive
2025-04-22 11:34:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211a5c0 is alive
2025-04-22 11:34:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6aa9b2fb is alive
2025-04-22 11:34:43 ERROR StaffMenuUI - Failed to create booking: createBooking returned null.
2025-04-22 11:34:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:34:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:34:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3f270e0a is alive
2025-04-22 11:35:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:35:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:35:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73cc40c is alive
2025-04-22 11:35:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423e5a8f is alive
2025-04-22 11:35:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:35:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:36:49 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 11:36:49 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 11:36:49 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 11:36:49 DEBUG HikariConfig - autoCommit......................true
2025-04-22 11:36:49 DEBUG HikariConfig - catalog.........................none
2025-04-22 11:36:49 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 11:36:49 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 11:36:49 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 11:36:49 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-22 11:36:49 DEBUG HikariConfig - dataSource......................none
2025-04-22 11:36:49 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 11:36:49 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 11:36:49 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 11:36:49 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 11:36:49 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 11:36:49 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 11:36:49 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 11:36:49 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 11:36:49 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 11:36:49 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 11:36:49 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 11:36:49 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 11:36:49 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 11:36:49 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 11:36:49 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 11:36:49 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 11:36:49 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 11:36:49 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 11:36:49 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 11:36:49 DEBUG HikariConfig - password........................<masked>
2025-04-22 11:36:49 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 11:36:49 DEBUG HikariConfig - readOnly........................false
2025-04-22 11:36:49 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 11:36:49 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 11:36:49 DEBUG HikariConfig - schema..........................none
2025-04-22 11:36:49 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 11:36:49 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 11:36:49 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 11:36:49 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 11:36:49 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 11:36:49 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (64cfa757-4830-4da2-b06f-79e5f0e3acbe)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (64cfa757-4830-4da2-b06f-79e5f0e3acbe)
2025-04-22 11:36:50 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1941a8ff
2025-04-22 11:36:50 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 11:36:50 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 11:36:50 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 11:36:50 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 11:36:50 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 11:36:50 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 11:36:50 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0e94d521-9a83-42f3-bc3d-17258f79180a)
2025-04-22 11:36:50 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (0e94d521-9a83-42f3-bc3d-17258f79180a)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58857da8
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 11:36:50 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 11:36:50 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 11:36:50 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a9a99732-fa93-4e3a-bc97-2ae6aec3c5c6)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (a9a99732-fa93-4e3a-bc97-2ae6aec3c5c6)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@527d16d8
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bcda6ca0-de9a-4ec0-97fa-83d7f4982692)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (bcda6ca0-de9a-4ec0-97fa-83d7f4982692)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@177f82f3
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24be2d9c
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5bd73d1a
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@aec50a1
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2555fff0
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@70d2e40b
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-22 11:36:50 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@499b2a5c] into BootstrapContext; was [null]
2025-04-22 11:36:50 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@596df867] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@c1fca1e]
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c9ff0213-f2b8-4a4a-88db-f81bb73255a6)
2025-04-22 11:36:50 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 11:36:50 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 11:36:50 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (c9ff0213-f2b8-4a4a-88db-f81bb73255a6)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6464c589
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a820ee87-6185-4bba-ab6f-f2ecd24560fa)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (a820ee87-6185-4bba-ab6f-f2ecd24560fa)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@26a21505
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (efb4c923-a575-4a96-80c4-96115ae94907)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (efb4c923-a575-4a96-80c4-96115ae94907)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c530cdf
2025-04-22 11:36:50 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 11:36:50 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 11:36:50 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (10924ea4-d992-411c-a432-e767c661b719)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (10924ea4-d992-411c-a432-e767c661b719)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77507dbc
2025-04-22 11:36:50 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 11:36:50 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (51e18c8c-60d2-4d36-9a58-1b63de11e2fc)
2025-04-22 11:36:50 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 11:36:50 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3047254d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6cf31447)
2025-04-22 11:36:50 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e92466a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e8997c)
2025-04-22 11:36:50 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 11:36:50 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (51e18c8c-60d2-4d36-9a58-1b63de11e2fc)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@35dab652
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2970a5bc`
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:36:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d29a9e50-9697-44aa-b954-ad80f908817f)
2025-04-22 11:36:50 DEBUG PoolBase - HikariPool-1 - Established new connection (d29a9e50-9697-44aa-b954-ad80f908817f)
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e697d1
2025-04-22 11:36:50 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 11:36:50 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@474fae39]
2025-04-22 11:36:50 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 11:36:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:36:50 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 11:36:51 DEBUG EntityBinder - Import with entity name User
2025-04-22 11:36:51 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property userID
2025-04-22 11:36:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property email
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property isActive
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property name
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property password
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property userRole
2025-04-22 11:36:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 11:36:51 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 11:36:51 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property guestId
2025-04-22 11:36:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property age
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property name
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property user
2025-04-22 11:36:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 11:36:51 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 11:36:51 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property bookingId
2025-04-22 11:36:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property checkIn
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property checkOut
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property room
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property status
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property user
2025-04-22 11:36:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 11:36:51 DEBUG EntityBinder - Import with entity name Room
2025-04-22 11:36:51 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property roomID
2025-04-22 11:36:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property price
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property roomType
2025-04-22 11:36:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 11:36:51 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 11:36:51 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 11:36:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property amount
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property booking
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property issueDate
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 11:36:51 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 11:36:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 11:36:51 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 11:36:51 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:36:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:36:51 DEBUG PropertyBinder - Building property user
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 11:36:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 11:36:51 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 11:36:51 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 11:36:51 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 11:36:51 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 11:36:51 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 11:36:51 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 11:36:51 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 11:36:51 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77dba4cd, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 11:36:51 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4d84049a] under count; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4cb702ce] under every; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@383caf89] under any; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b74ea] under sinh; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14924f41] under cosh; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@493da830] under tanh; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f939a0f] under pi; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133] under log; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1665fa54] under position; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2262d6d5] under overlay; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@f3560d4] under trim; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1642eeae] under cast; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd] under collate; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@322ba549] under extract; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@b0fd744] under ifnull; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@726934e2] under pad; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@798dad3d] under str; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4bdf] under format; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@78422efb] under timestampadd; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@50eb4a2c] under timestampdiff; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7885776b] under current_date; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@497d4c96] under current_time; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3472947a] under current_timestamp; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69d3cf7e] under local_date; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a3ed300] under local_time; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1984212d] under local_datetime; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39f5b723] under offset_datetime; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4eaa375c] under instant; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@31a2a9fa] under sql; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31b82e0f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@493da830
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b74ea
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14924f41
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f939a0f
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@36e43829] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3a3ed300
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1984212d
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6af90849] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1d06f16f] under bit_length; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4fa4f485] under octet_length; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68dd39d2] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1665fa54
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a44cfc0] under bitand; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e3c26e] under bitor; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80b122b] under bitxor; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under bitnot; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65cf4d6d] under median; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under insert; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@16736040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2262d6d5
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7c5d1d25] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6a1d526c] under listagg; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@e95595b] under array; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5a917723] under array_list; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@cedee22] under array_agg; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1860f3be] under array_position; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12c0c0b3] under array_positions; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6025d790] under array_positions_list; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@af7e376] under array_length; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@889a8a8] under array_concat; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ed2f2f6] under array_prepend; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@fe87ddd] under array_append; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@1da4b3f9] under array_contains; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@23cbbd07] under array_contains_nullable; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@da28d03] under array_overlaps; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ebda593] under array_overlaps_nullable; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37348491] under array_get; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@dab1f89] under array_set; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@640cc04b] under array_remove_index; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@630bf683] under array_slice; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22d322f5] under array_trim; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@388d14e] under array_fill; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@1cd43562] under array_fill_list; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@10b687f2] under array_to_string; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@456bcb74] under mode; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a9c5b75] under percentile_cont; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@dd4aec3] under percentile_disc; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16a2ed51] under rank; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b332962] under dense_rank; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@57ddd45b] under percent_rank; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2e7bf7b7] under cume_dist; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4519f676] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78ec89a6] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3596b249] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80b122b
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@642ee49c] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4ed5a1b0] under trunc; prior registration was null
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 11:36:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d003cd] under date_trunc; prior registration was null
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 11:36:51 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 11:36:51 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 11:36:51 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 11:36:51 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 11:36:51 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:36:51 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 11:36:51 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 11:36:51 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:36:51 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:36:51 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:36:51 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:36:51 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 11:36:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 11:36:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 11:36:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:36:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:36:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 11:36:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 11:36:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 11:36:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 11:36:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 11:36:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 11:36:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 11:36:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 11:36:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 11:36:52 DEBUG creation - Starting post-init callbacks
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 11:36:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 11:36:52 DEBUG create - Created new SQL alias : g1_0
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65036e8d] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 11:36:52 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:36:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 11:36:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 11:36:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 11:36:52 DEBUG create - Created new SQL alias : b1_0
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@19d53ab4] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 11:36:52 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@652e345] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 11:36:52 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:36:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 11:36:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 11:36:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 11:36:52 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:36:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 11:36:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:36:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 11:36:52 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 11:36:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 11:36:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 11:36:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 11:36:52 DEBUG create - Created new SQL alias : i1_0
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27bc1d44] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61911947] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 11:36:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 11:36:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 11:36:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 11:36:52 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 11:36:52 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 11:36:52 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 11:36:52 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 11:36:52 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 11:36:52 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@50dc49e1]
2025-04-22 11:36:52 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 11:36:52 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 11:36:52 DEBUG Table - No alter strings for table : bookings
2025-04-22 11:36:52 DEBUG Table - No alter strings for table : guests
2025-04-22 11:36:52 DEBUG Table - No alter strings for table : invoices
2025-04-22 11:36:52 DEBUG Table - No alter strings for table : rooms
2025-04-22 11:36:52 DEBUG Table - No alter strings for table : users
2025-04-22 11:36:52 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c9e8a67
2025-04-22 11:36:52 DEBUG SessionFactoryRegistry - Registering SessionFactory: 160f635a-54b5-45ab-8241-ff7eb6d200a9 (my-persistence-unit)
2025-04-22 11:36:52 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 11:36:52 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 11:36:52 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 11:36:52 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 11:36:52 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 11:36:52 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:36:52 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:36:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 11:36:52 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 11:36:52 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 11:36:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 11:36:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 11:36:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:36:52 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@841660110 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:36:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:36:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 11:36:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1246215324
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 11:36:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 11:36:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ea9373e
2025-04-22 11:36:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:36:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:36:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:36:52 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2092841477 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:36:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:36:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 11:36:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1969632323
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:36:52 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 11:36:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 11:36:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@780546f8
2025-04-22 11:36:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:36:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:36:52 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-22 11:36:52 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-22 11:36:55 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-22 11:37:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:37:07 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@287096026 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:37:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:37:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 11:37:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1821268676
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 11:37:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 11:37:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1800c1e3
2025-04-22 11:37:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:37:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:37:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:37:07 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1035726142 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:37:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 11:37:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 11:37:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1242321195
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:37:07 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 11:37:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 11:37:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28bc9749
2025-04-22 11:37:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:37:07 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-22 11:37:07 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-22 11:37:07 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:37:07 DEBUG create - Created new SQL alias : b1_0
2025-04-22 11:37:07 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 11:37:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5d68be4f] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 11:37:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57ed02e6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 11:37:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f0ca069] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 11:37:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f0ca069] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@57ed02e6
2025-04-22 11:37:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 11:37:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 11:37:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-22 11:37:07 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-22 11:37:07 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-22 11:37:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:37:07 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@485375493 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1676857380)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@2066600797 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1079124964)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@757150717 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 11:37:07 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-22 11:37:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:37:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:37:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:37:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:37:26 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-22 11:37:26 INFO  StaffMenuUI - Booking room for a user.
2025-04-22 11:37:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:37:31 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@958071237 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:37:31 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 2039166717
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18ff1520
2025-04-22 11:37:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:37:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:37:31 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 11:37:31 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:37:31 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:37:31 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:37:31 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 11:37:31 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 11:37:31 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:37:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:37:31 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@722844186 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:37:31 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 305940688
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1005742096
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 421608052
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 816288166
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1906030093
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1501688518
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1231261976
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1162154803
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1765994056
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1057175140
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1790806989
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 118280482
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2034388773
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1607788159
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1504832939
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 945140350
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 11:37:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:37:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 11:37:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37dec463
2025-04-22 11:37:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:37:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:37:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:37:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:38:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:38:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:38:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e697d1 is alive
2025-04-22 11:38:33 ERROR StaffMenuUI - Failed to create booking: createBooking returned null.
2025-04-22 11:38:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@177f82f3 is alive
2025-04-22 11:38:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c530cdf is alive
2025-04-22 11:38:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77507dbc is alive
2025-04-22 11:38:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@26a21505 is alive
2025-04-22 11:38:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@527d16d8 is alive
2025-04-22 11:38:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6464c589 is alive
2025-04-22 11:38:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35dab652 is alive
2025-04-22 11:38:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 11:38:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58857da8 is alive
2025-04-22 11:39:34 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 11:39:34 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 11:39:34 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 11:39:34 DEBUG HikariConfig - autoCommit......................true
2025-04-22 11:39:34 DEBUG HikariConfig - catalog.........................none
2025-04-22 11:39:34 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 11:39:34 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 11:39:34 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 11:39:34 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-22 11:39:34 DEBUG HikariConfig - dataSource......................none
2025-04-22 11:39:34 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 11:39:34 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 11:39:34 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 11:39:34 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 11:39:34 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 11:39:34 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 11:39:34 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 11:39:34 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 11:39:34 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 11:39:34 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 11:39:34 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 11:39:34 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 11:39:34 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 11:39:34 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 11:39:34 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 11:39:34 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 11:39:34 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 11:39:34 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 11:39:34 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 11:39:34 DEBUG HikariConfig - password........................<masked>
2025-04-22 11:39:34 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 11:39:34 DEBUG HikariConfig - readOnly........................false
2025-04-22 11:39:34 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 11:39:34 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 11:39:34 DEBUG HikariConfig - schema..........................none
2025-04-22 11:39:34 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 11:39:34 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 11:39:34 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 11:39:34 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 11:39:34 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 11:39:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (101eff48-294f-446e-b9d8-e9b45c866e97)
2025-04-22 11:39:34 DEBUG PoolBase - HikariPool-1 - Established new connection (101eff48-294f-446e-b9d8-e9b45c866e97)
2025-04-22 11:39:34 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e3181aa
2025-04-22 11:39:34 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 11:39:34 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 11:39:34 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 11:39:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 11:39:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 11:39:34 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 11:39:34 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 11:39:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 11:39:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d085f890-0d47-4649-8f20-49e185347f82)
2025-04-22 11:39:34 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 11:39:34 DEBUG PoolBase - HikariPool-1 - Established new connection (d085f890-0d47-4649-8f20-49e185347f82)
2025-04-22 11:39:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@423524b
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 11:39:34 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 11:39:34 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 11:39:34 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cd404f2f-0c5b-4c9a-adbb-35193f63235b)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Established new connection (cd404f2f-0c5b-4c9a-adbb-35193f63235b)
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@edb393b
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (550472be-67ab-4f6a-8f0a-e317496e9bb8)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@352c308
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@71e9a896
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43c67247
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@fac80
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@726386ed
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Established new connection (550472be-67ab-4f6a-8f0a-e317496e9bb8)
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4bd9b684
2025-04-22 11:39:35 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24f43aa3] into BootstrapContext; was [null]
2025-04-22 11:39:35 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@63fd4873] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1e11bc55]
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6594b754-d34d-4430-9a3e-00b364a19862)
2025-04-22 11:39:35 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 11:39:35 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 11:39:35 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Established new connection (6594b754-d34d-4430-9a3e-00b364a19862)
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@55f604be
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (30adcce7-c484-485a-a2b6-d6809ceb9783)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Established new connection (30adcce7-c484-485a-a2b6-d6809ceb9783)
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7ad85bfb
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8de4144f-fcd1-4e8a-a848-0e0fa4d3c742)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Established new connection (8de4144f-fcd1-4e8a-a848-0e0fa4d3c742)
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d1db77a
2025-04-22 11:39:35 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 11:39:35 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 11:39:35 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (162b1579-fdbf-42ce-8c83-b318b84e0490)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Established new connection (162b1579-fdbf-42ce-8c83-b318b84e0490)
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2bf649cb
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 11:39:35 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (dc23df2e-3ccc-4f8e-89f8-565121480955)
2025-04-22 11:39:35 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 11:39:35 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Established new connection (dc23df2e-3ccc-4f8e-89f8-565121480955)
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e407bff
2025-04-22 11:39:35 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2063c53e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2a9bc08f)
2025-04-22 11:39:35 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50f40653) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a3d0f6)
2025-04-22 11:39:35 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 11:39:35 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70e29e14`
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:39:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (af4b9171-5b7a-430e-b5d0-5ad5d50a58d3)
2025-04-22 11:39:35 DEBUG PoolBase - HikariPool-1 - Established new connection (af4b9171-5b7a-430e-b5d0-5ad5d50a58d3)
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@767fe64f
2025-04-22 11:39:35 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 11:39:35 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f1ea80d]
2025-04-22 11:39:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:39:35 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 11:39:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 11:39:35 DEBUG EntityBinder - Import with entity name User
2025-04-22 11:39:35 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property userID
2025-04-22 11:39:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property email
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property isActive
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property name
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property password
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property userRole
2025-04-22 11:39:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 11:39:35 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 11:39:35 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property guestId
2025-04-22 11:39:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property age
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property name
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property user
2025-04-22 11:39:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 11:39:35 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 11:39:35 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property bookingId
2025-04-22 11:39:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property checkIn
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property checkOut
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property room
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property status
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property user
2025-04-22 11:39:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 11:39:35 DEBUG EntityBinder - Import with entity name Room
2025-04-22 11:39:35 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property roomID
2025-04-22 11:39:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property price
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property roomType
2025-04-22 11:39:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 11:39:35 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 11:39:35 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 11:39:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property amount
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property booking
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property issueDate
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 11:39:35 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 11:39:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 11:39:35 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 11:39:35 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:39:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:39:35 DEBUG PropertyBinder - Building property user
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 11:39:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 11:39:35 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 11:39:35 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 11:39:35 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 11:39:35 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 11:39:35 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 11:39:36 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 11:39:36 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 11:39:36 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@42cc183e, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 11:39:36 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3ff54f3d] under count; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@430b2699] under every; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67536ae0] under any; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63] under sinh; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7] under cosh; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5] under tanh; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93] under pi; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc] under log; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3440e9cd] under position; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6a1ef65c] under overlay; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@e280403] under trim; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@77f991c] under cast; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7e365] under collate; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5568c66f] under extract; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4bdf] under ifnull; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@78422efb] under pad; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@d48e998] under str; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4eaa375c] under format; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@31a2a9fa] under timestampadd; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5ec1963c] under timestampdiff; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under current_date; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68dd39d2] under current_time; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a44cfc0] under current_timestamp; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e3c26e] under local_date; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@80b122b] under local_time; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@999b951] under local_datetime; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under offset_datetime; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under instant; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@36d33f4] under sql; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@32eae6f2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@80b122b
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@999b951
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6a1d526c] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1f2f0109] under bit_length; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@483b0690] under octet_length; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3440e9cd
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6870c3c2] under bitand; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb0a08c] under bitor; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c] under bitxor; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4debbf0] under bitnot; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a5e167a] under median; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under insert; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a917723] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6a1ef65c
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7e4579c7] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@40c2ce52] under listagg; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3965bdf9] under array; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3c0e00a8] under array_list; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3408f695] under array_agg; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@682abca7] under array_position; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@713ec32d] under array_positions; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@fe87ddd] under array_positions_list; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4eea94a4] under array_length; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@168b4cb0] under array_concat; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@383c3eb3] under array_prepend; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@20ab76ee] under array_append; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3a17b2e3] under array_contains; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5e13f156] under array_contains_nullable; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6e60f18] under array_overlaps; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5cf8676a] under array_overlaps_nullable; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd43562] under array_get; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@55f4887d] under array_set; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@78d71df1] under array_remove_index; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@456bcb74] under array_slice; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a9c5b75] under array_trim; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@de81be1] under array_fill; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@342e690b] under array_fill_list; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@7237f3c1] under array_to_string; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d3b58ca] under mode; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4e224df5] under percentile_cont; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32456db0] under percentile_disc; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1d02af26] under rank; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fa7df1] under dense_rank; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4dd90166] under percent_rank; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@52227eb2] under cume_dist; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4ed5a1b0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@18d003cd] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3135bf25] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@45900b64] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@6e31d989] under trunc; prior registration was null
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 11:39:36 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b01a0d] under date_trunc; prior registration was null
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 11:39:36 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 11:39:36 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 11:39:36 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 11:39:36 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 11:39:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:39:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 11:39:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 11:39:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:39:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:39:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:39:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:39:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 11:39:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 11:39:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:39:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 11:39:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 11:39:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 11:39:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 11:39:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 11:39:36 DEBUG creation - Starting post-init callbacks
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 11:39:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 11:39:36 DEBUG create - Created new SQL alias : g1_0
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@781dac73] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 11:39:36 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:39:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 11:39:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 11:39:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 11:39:36 DEBUG create - Created new SQL alias : b1_0
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7272ee51] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 11:39:36 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@762a10b6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 11:39:36 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:39:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 11:39:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 11:39:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 11:39:36 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:39:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 11:39:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:39:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 11:39:36 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 11:39:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 11:39:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 11:39:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 11:39:36 DEBUG create - Created new SQL alias : i1_0
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2035d65b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 11:39:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72224107] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 11:39:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 11:39:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 11:39:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 11:39:36 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 11:39:36 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 11:39:36 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 11:39:36 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 11:39:36 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 11:39:36 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@56d6a1b1]
2025-04-22 11:39:36 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 11:39:36 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 11:39:36 DEBUG Table - No alter strings for table : bookings
2025-04-22 11:39:36 DEBUG Table - No alter strings for table : guests
2025-04-22 11:39:36 DEBUG Table - No alter strings for table : invoices
2025-04-22 11:39:36 DEBUG Table - No alter strings for table : rooms
2025-04-22 11:39:36 DEBUG Table - No alter strings for table : users
2025-04-22 11:39:37 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2475fba3
2025-04-22 11:39:37 DEBUG SessionFactoryRegistry - Registering SessionFactory: 04c9ff72-652b-4440-a720-b6f1e01dc51b (my-persistence-unit)
2025-04-22 11:39:37 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 11:39:37 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 11:39:37 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 11:39:37 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 11:39:37 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 11:39:37 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:39:37 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:39:37 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 11:39:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 11:39:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 11:39:37 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 11:39:37 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 11:39:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:39:37 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1244989872 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:39:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:39:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 11:39:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1599677423
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 11:39:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 11:39:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40b70f31
2025-04-22 11:39:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:39:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:39:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:39:37 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@517653428 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:39:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:39:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 11:39:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 285646508
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:39:37 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 11:39:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 11:39:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5909285b
2025-04-22 11:39:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:39:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:39:37 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-22 11:39:37 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-22 11:39:48 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-22 11:39:48 INFO  StaffMenuUI - Booking room for a user.
2025-04-22 11:39:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:39:52 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@240673986 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:39:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1765223454
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24842b8e
2025-04-22 11:39:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:39:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:39:52 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 11:39:52 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:39:52 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:39:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:39:52 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 11:39:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 11:39:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:39:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:39:52 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1594663017 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:39:52 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1852224664
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 702218380
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 486575713
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 421217482
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1575109563
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 743241707
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 891684741
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1993877759
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 963138052
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1926240621
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 2010067613
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1080517451
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 996471089
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1225628737
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1205343271
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1012812460
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 11:39:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:39:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 11:39:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b2e1eb
2025-04-22 11:39:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:39:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:40:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:40:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:40:08 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 101 from 2025-04-22T11:40 to 2025-04-23T10:00
2025-04-22 11:40:12 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:40:12 DEBUG TransactionImpl - begin
2025-04-22 11:40:12 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 11:40:12 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 11:40:12 DEBUG results - Initializer list is empty
2025-04-22 11:40:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@52035328
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 11:40:12 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@749ee0e3
2025-04-22 11:40:12 DEBUG TransactionImpl - committing
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:40:12 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:40:12 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-22T11:40, checkOut=2025-04-23T10:00, user=org.example.entity.User#13, bookingId=70, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-22 11:40:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:40:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:40:12 INFO  BookingServiceImpl - Booking created successfully with ID: 70
2025-04-22 11:40:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:40:12 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@237989395 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:40:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:40:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:40:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 647479638
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:40:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:40:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@533d7c61
2025-04-22 11:40:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:40:12 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:40:12 DEBUG TransactionImpl - begin
2025-04-22 11:40:12 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:40:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:40:12 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 11:40:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:40:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:40:12 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1797753623 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:40:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:40:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:40:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2105723478
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:40:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:40:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2aaa89c2
2025-04-22 11:40:12 DEBUG TransactionImpl - committing
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:40:12 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:40:12 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 11:40:12 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 11:40:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:40:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:40:12 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-22 11:40:12 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-22 11:40:12 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:40:12 DEBUG TransactionImpl - begin
2025-04-22 11:40:12 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 11:40:12 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 11:40:12 DEBUG results - Initializer list is empty
2025-04-22 11:40:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6ec2d990
2025-04-22 11:40:12 DEBUG results - Extracted JDBC value [0] - [42]
2025-04-22 11:40:12 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@1cfa7ee0
2025-04-22 11:40:12 DEBUG TransactionImpl - committing
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 11:40:12 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:40:12 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:40:12 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=org.example.entity.Booking#70, invoiceId=42, issueDate=2025-04-22T11:40:12.391542200, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-22 11:40:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:40:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:40:12 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-22 11:40:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:40:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:40:56 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-22 11:41:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:41:00 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@283438643 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:41:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1591791460
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 11:41:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69c227fd
2025-04-22 11:41:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:41:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:41:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:41:00 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@21779075 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:41:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1047634424
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 11:41:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5d4a34ff
2025-04-22 11:41:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:41:00 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-22 11:41:00 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-22 11:41:00 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:41:00 DEBUG create - Created new SQL alias : b1_0
2025-04-22 11:41:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 11:41:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75c15f76] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 11:41:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b10f60e] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 11:41:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7f5e9949] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 11:41:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7f5e9949] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1b10f60e
2025-04-22 11:41:00 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 11:41:00 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 11:41:00 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-22 11:41:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-22 11:41:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-22 11:41:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:41:00 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@567160397 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@958468958)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@975412652 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1973372401)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@628339017 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 11:41:00 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 1026471930
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 11:41:00 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-22 11:41:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:41:00 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1659772041 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:41:00 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 814987775
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:41:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@220be130
2025-04-22 11:41:00 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-22 11:41:00 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-22 11:41:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:41:00 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1598944606 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:41:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1648430623
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 11:41:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5296f00c
2025-04-22 11:41:00 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:41:00 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-22 11:41:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 11:41:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b2ff4df
2025-04-22 11:41:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:41:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:41:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:41:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:41:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@edb393b is alive
2025-04-22 11:41:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ad85bfb is alive
2025-04-22 11:41:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2bf649cb is alive
2025-04-22 11:41:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4bd9b684 is alive
2025-04-22 11:41:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423524b is alive
2025-04-22 11:41:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d1db77a is alive
2025-04-22 11:41:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-22 11:41:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@767fe64f is alive
2025-04-22 11:41:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e407bff is alive
2025-04-22 11:41:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55f604be is alive
2025-04-22 11:41:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:41:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:42:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:42:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:42:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:42:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:42:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@edb393b is alive
2025-04-22 11:42:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ad85bfb is alive
2025-04-22 11:42:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2bf649cb is alive
2025-04-22 11:43:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:43:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:43:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4bd9b684 is alive
2025-04-22 11:43:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@423524b is alive
2025-04-22 11:43:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d1db77a is alive
2025-04-22 11:43:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-22 11:43:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@767fe64f is alive
2025-04-22 11:43:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e407bff is alive
2025-04-22 11:43:29 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-22 11:43:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55f604be is alive
2025-04-22 11:43:34 ERROR StaffMenuUI - InputMismatchException: Invalid input by user SHUBHAM LANKE in staff menu
2025-04-22 11:43:35 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:43:35 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:43:45 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-22 11:43:48 INFO  StaffMenuUI - Cancellation process started for Booking ID: 70
2025-04-22 11:43:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:43:48 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1553886613 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1560327273 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1973372401)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@231767016 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@958468958)

2025-04-22 11:43:48 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:43:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 70
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 204058844
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 36214154
2025-04-22 11:43:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#70] : 130889824
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:43:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#70
2025-04-22 11:43:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-22 11:43:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:43:48 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1138663369 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@759083498 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1973372401)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@2018545259 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@958468958)

2025-04-22 11:43:48 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:43:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 70
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 1956658133
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 142590204
2025-04-22 11:43:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#70] : 1730106459
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:43:48 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:43:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#70
2025-04-22 11:43:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c335b9
2025-04-22 11:43:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:48 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-22 11:43:48 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-22 11:43:48 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:43:48 DEBUG create - Created new SQL alias : i1_0
2025-04-22 11:43:48 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 11:43:48 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7112fa5] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 11:43:48 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@342dc040] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 11:43:48 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a8ead9] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 11:43:48 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a8ead9] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@7112fa5
2025-04-22 11:43:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-22 11:43:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-22 11:43:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-22 11:43:48 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-22 11:43:48 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-22 11:43:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:43:48 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@684195229 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1784938289)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@474654465 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1865819773 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@2022311187)

2025-04-22 11:43:48 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [0] - [42]
2025-04-22 11:43:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 42
2025-04-22 11:43:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#42] : 132886285
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [2] - [70]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [3] - [2025-04-22T11:40:12.391542]
2025-04-22 11:43:48 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-22 11:43:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#42
2025-04-22 11:43:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@446a5aa5
2025-04-22 11:43:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:43:50 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1266033948 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@549618612 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1973372401)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@913001083 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@958468958)

2025-04-22 11:43:50 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 70
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 1147824431
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 675203915
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#70] : 170974144
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#70
2025-04-22 11:43:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@76104df5
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:43:50 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1629774089 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1067354869 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1973372401)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@863811613 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@958468958)

2025-04-22 11:43:50 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 70
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 1318834888
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 418461526
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#70] : 1717257246
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#70
2025-04-22 11:43:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ac3d530
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:43:50 DEBUG TransactionImpl - begin
2025-04-22 11:43:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:43:50 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@979259186 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@721720488 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1973372401)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@398675554 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@958468958)

2025-04-22 11:43:50 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 70
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 564892060
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1591581519
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#70] : 1572407320
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:43:50 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#70
2025-04-22 11:43:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c17794e
2025-04-22 11:43:50 DEBUG TransactionImpl - committing
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:43:50 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:43:50 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-22 11:43:50 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-22T11:40, checkOut=2025-04-23T10:00, user=org.example.entity.User#13, bookingId=70, room=org.example.entity.Room#1, status=CANCELLED}
2025-04-22 11:43:50 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 11:43:50 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 INFO  StaffMenuUI - Booking ID: 70 successfully canceled
2025-04-22 11:43:50 INFO  StaffMenuUI - Attempting to update room availability. Room ID: 1, Availability: true
2025-04-22 11:43:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:43:50 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1240077238 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:43:50 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 768427295
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:43:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@342394b3
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 INFO  RoomServiceImpl - Fetched room with ID 1: Optional[Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}]
2025-04-22 11:43:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:43:50 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@503427477 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:43:50 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 134726120
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:43:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4eb5764d
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:43:50 DEBUG TransactionImpl - begin
2025-04-22 11:43:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:43:50 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1425617516 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:43:50 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1457383927
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:43:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b2acb12
2025-04-22 11:43:50 DEBUG TransactionImpl - committing
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:43:50 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:43:50 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 11:43:50 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-22 11:43:50 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-22 11:43:50 INFO  StaffMenuUI - Room ID: 1 availability successfully updated to: true
2025-04-22 11:43:50 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:43:50 DEBUG TransactionImpl - begin
2025-04-22 11:43:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:43:50 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@161020884 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@2022311187)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@808663361 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1784938289)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@761009678 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-22 11:43:50 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 42
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#42] : 1733439693
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [2] - [70]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [3] - [2025-04-22T11:40:12.391542]
2025-04-22 11:43:50 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-22 11:43:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#42
2025-04-22 11:43:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a73a64f
2025-04-22 11:43:50 DEBUG TransactionImpl - committing
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 11:43:50 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:43:50 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:43:50 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=<uninitialized>, invoiceId=42, issueDate=2025-04-22T11:40:12.391542, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-22 11:43:50 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:43:50 INFO  StaffMenuUI - Room availability updated for Room ID: 1 and payment status set to CANCELED
2025-04-22 11:44:05 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:44:05 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:44:50 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 11:44:50 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 11:44:50 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 11:44:50 DEBUG HikariConfig - autoCommit......................true
2025-04-22 11:44:50 DEBUG HikariConfig - catalog.........................none
2025-04-22 11:44:50 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 11:44:50 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 11:44:50 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 11:44:50 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@29f7cefd
2025-04-22 11:44:50 DEBUG HikariConfig - dataSource......................none
2025-04-22 11:44:50 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 11:44:50 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 11:44:50 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 11:44:50 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 11:44:50 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 11:44:50 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 11:44:50 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 11:44:50 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 11:44:50 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 11:44:50 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 11:44:50 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 11:44:50 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 11:44:50 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 11:44:50 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 11:44:50 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 11:44:50 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 11:44:50 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 11:44:50 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 11:44:50 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 11:44:50 DEBUG HikariConfig - password........................<masked>
2025-04-22 11:44:50 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 11:44:50 DEBUG HikariConfig - readOnly........................false
2025-04-22 11:44:50 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 11:44:50 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 11:44:50 DEBUG HikariConfig - schema..........................none
2025-04-22 11:44:50 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 11:44:50 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 11:44:50 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 11:44:50 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 11:44:50 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b1e6cb9c-dbd5-46f0-8ebc-042eccb7c08f)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Established new connection (b1e6cb9c-dbd5-46f0-8ebc-042eccb7c08f)
2025-04-22 11:44:50 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1a760689
2025-04-22 11:44:50 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 11:44:50 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 11:44:50 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 11:44:50 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 11:44:50 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 11:44:50 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 11:44:50 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (88eab5ec-3317-402e-a6c4-2a9e3981cbba)
2025-04-22 11:44:50 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Established new connection (88eab5ec-3317-402e-a6c4-2a9e3981cbba)
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@35271c35
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 11:44:50 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 11:44:50 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 11:44:50 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1fe1ea23-069e-468c-b922-d5e092833f56)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Established new connection (1fe1ea23-069e-468c-b922-d5e092833f56)
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3fdf7745
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2e19afbc-f6c0-4e0c-b56f-b9f8f6663757)
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@120f38e6
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@120f38e6
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@42a9a63e
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-22 11:44:50 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-22 11:44:50 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1c25b8a7] into BootstrapContext; was [null]
2025-04-22 11:44:50 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@200606de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@750fe12e]
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Established new connection (2e19afbc-f6c0-4e0c-b56f-b9f8f6663757)
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7addfeda
2025-04-22 11:44:50 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 11:44:50 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8ceab6d9-1c47-4f9e-a67a-64af5a9037f9)
2025-04-22 11:44:50 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Established new connection (8ceab6d9-1c47-4f9e-a67a-64af5a9037f9)
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77968300
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3774cf78-e2b7-4c80-b138-c189106a9cde)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Established new connection (3774cf78-e2b7-4c80-b138-c189106a9cde)
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4bed26ef
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2ed333da-0b49-4c1b-a185-f3bc9243c2c4)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Established new connection (2ed333da-0b49-4c1b-a185-f3bc9243c2c4)
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@f4c0588
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ae8c94da-6e16-4cb3-9721-5698535412ff)
2025-04-22 11:44:50 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 11:44:50 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 11:44:50 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Established new connection (ae8c94da-6e16-4cb3-9721-5698535412ff)
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1af20195
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (dc592ca5-6282-4e32-8d3f-c28e6bcba2c9)
2025-04-22 11:44:50 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 11:44:50 DEBUG PoolBase - HikariPool-1 - Established new connection (dc592ca5-6282-4e32-8d3f-c28e6bcba2c9)
2025-04-22 11:44:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@593f1f48
2025-04-22 11:44:50 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 11:44:51 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 11:44:51 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@63fdffcd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7428de63)
2025-04-22 11:44:51 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66f659e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a68135e)
2025-04-22 11:44:51 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 11:44:51 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 11:44:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 11:44:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c818c5c0-29aa-445e-bdf9-cfe1bf1ae325)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@bc4d5e1
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@bc4d5e1
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@120f38e6`
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 11:44:51 DEBUG PoolBase - HikariPool-1 - Established new connection (c818c5c0-29aa-445e-bdf9-cfe1bf1ae325)
2025-04-22 11:44:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b4780de
2025-04-22 11:44:51 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 11:44:51 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51351f28] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21618fa7]
2025-04-22 11:44:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:44:51 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 11:44:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 11:44:51 DEBUG EntityBinder - Import with entity name User
2025-04-22 11:44:51 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property userID
2025-04-22 11:44:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property email
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property isActive
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property name
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property password
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property userRole
2025-04-22 11:44:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 11:44:51 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 11:44:51 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property guestId
2025-04-22 11:44:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property age
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property name
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property user
2025-04-22 11:44:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 11:44:51 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 11:44:51 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property bookingId
2025-04-22 11:44:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property checkIn
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property checkOut
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property room
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property status
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property user
2025-04-22 11:44:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 11:44:51 DEBUG EntityBinder - Import with entity name Room
2025-04-22 11:44:51 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property roomID
2025-04-22 11:44:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property price
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property roomType
2025-04-22 11:44:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 11:44:51 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 11:44:51 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 11:44:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property amount
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property booking
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property issueDate
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 11:44:51 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 11:44:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 11:44:51 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 11:44:51 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 11:44:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 11:44:51 DEBUG PropertyBinder - Building property user
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 11:44:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 11:44:51 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 11:44:51 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 11:44:51 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 11:44:51 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 11:44:51 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 11:44:51 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 11:44:51 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 11:44:51 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@72503b19, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 11:44:51 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5a545b0f] under count; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@62a68bcb] under every; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@18b74ea] under any; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f654cee] under sinh; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e1fd62b] under cosh; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6] under tanh; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942] under pi; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ec7d21] under log; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@51b77cdf] under position; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@322ba549] under overlay; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@b0fd744] under trim; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@42f85fa4] under cast; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@798dad3d] under collate; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7d986d83] under extract; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@12a470dd] under ifnull; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3f6bf8aa] under pad; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2c63762b] under str; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@497d4c96] under format; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1984212d] under timestampadd; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@31b82e0f] under timestampdiff; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36e43829] under current_date; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@152c4495] under current_time; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under current_timestamp; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dcb42a9] under local_date; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6af90849] under local_time; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1d06f16f] under local_datetime; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under offset_datetime; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68dd39d2] under instant; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@999b951] under sql; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ec7d21
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65cf4d6d] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f654cee
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e1fd62b
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@10272bbb] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6af90849
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1d06f16f
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@550e9be6] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@3f96f020] under bit_length; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@32eae6f2] under octet_length; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ca61bf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@51b77cdf
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73a0f2b] under bitand; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under bitor; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d526c] under bitxor; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f2f0109] under bitnot; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483b0690] under median; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6870c3c2] under insert; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6a5e167a] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@322ba549
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@60e06f7d] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@796f632b] under listagg; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@53ce2392] under array; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@32d5279] under array_list; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@16ac5d35] under array_agg; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2582b0ef] under array_position; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5dcd0cdf] under array_positions; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6361b799] under array_positions_list; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b9d9a2b] under array_length; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@33eb6758] under array_concat; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@9f674ac] under array_prepend; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@1da4b3f9] under array_append; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@37348491] under array_contains; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@76e3b45b] under array_contains_nullable; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@22d322f5] under array_overlaps; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@65afeb6d] under array_overlaps_nullable; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ab1127c] under array_get; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@388d14e] under array_set; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@2d74c81b] under array_remove_index; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10b687f2] under array_slice; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55f4887d] under array_trim; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3e28fee1] under array_fill; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@16a2ed51] under array_fill_list; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@2fb25f4c] under array_to_string; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7237f3c1] under mode; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@781711b7] under percentile_cont; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@642a16aa] under percentile_disc; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5d3b58ca] under rank; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4e224df5] under dense_rank; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@32456db0] under percent_rank; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5f5827d0] under cume_dist; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3fa7df1] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4dd90166] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52227eb2] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d526c
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4ed5a1b0] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@414f87a9] under trunc; prior registration was null
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 11:44:51 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ddc6db2] under date_trunc; prior registration was null
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 11:44:51 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 11:44:51 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 11:44:51 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 11:44:51 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 11:44:51 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:44:51 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 11:44:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 11:44:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 11:44:52 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:44:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:44:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:44:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:44:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 11:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 11:44:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 11:44:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:44:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 11:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 11:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 11:44:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 11:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 11:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 11:44:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 11:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 11:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 11:44:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 11:44:52 DEBUG creation - Starting post-init callbacks
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 11:44:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 11:44:52 DEBUG create - Created new SQL alias : g1_0
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35ac9ebd] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 11:44:52 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:44:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 11:44:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 11:44:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 11:44:52 DEBUG create - Created new SQL alias : b1_0
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1af677f8] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 11:44:52 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2dcd0e41] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 11:44:52 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:44:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 11:44:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 11:44:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 11:44:52 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:44:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 11:44:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:44:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 11:44:52 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 11:44:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 11:44:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 11:44:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 11:44:52 DEBUG create - Created new SQL alias : i1_0
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@66d3b881] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e0a9b1d] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 11:44:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 11:44:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 11:44:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 11:44:52 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 11:44:52 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 11:44:52 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 11:44:52 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 11:44:52 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 11:44:52 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51351f28] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b9aeedb]
2025-04-22 11:44:52 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 11:44:52 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 11:44:52 DEBUG Table - No alter strings for table : bookings
2025-04-22 11:44:52 DEBUG Table - No alter strings for table : guests
2025-04-22 11:44:52 DEBUG Table - No alter strings for table : invoices
2025-04-22 11:44:52 DEBUG Table - No alter strings for table : rooms
2025-04-22 11:44:52 DEBUG Table - No alter strings for table : users
2025-04-22 11:44:52 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c497a55
2025-04-22 11:44:52 DEBUG SessionFactoryRegistry - Registering SessionFactory: 051ba4ab-ad0f-435e-9fab-3b08fddcff79 (my-persistence-unit)
2025-04-22 11:44:52 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 11:44:52 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 11:44:52 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 11:44:52 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 11:44:52 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 11:44:52 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:44:52 DEBUG create - Created new SQL alias : u1_0
2025-04-22 11:44:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 11:44:52 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 11:44:52 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 11:44:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 11:44:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 11:44:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:44:52 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1328225951 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:44:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:44:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 11:44:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 299617083
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 11:44:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 11:44:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2762253e
2025-04-22 11:44:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:44:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:44:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:44:52 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1349733610 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:44:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:44:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 11:44:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1244025760
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:44:52 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 11:44:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 11:44:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@784212
2025-04-22 11:44:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:44:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:44:52 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-22 11:44:52 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-22 11:45:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:45:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:45:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:45:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:46:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:46:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:46:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7addfeda is alive
2025-04-22 11:46:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b4780de is alive
2025-04-22 11:46:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77968300 is alive
2025-04-22 11:46:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4bed26ef is alive
2025-04-22 11:46:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1af20195 is alive
2025-04-22 11:46:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f4c0588 is alive
2025-04-22 11:46:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fdf7745 is alive
2025-04-22 11:46:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-22 11:46:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@593f1f48 is alive
2025-04-22 11:46:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35271c35 is alive
2025-04-22 11:46:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:46:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:47:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:47:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:47:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:47:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:48:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7addfeda is alive
2025-04-22 11:48:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b4780de is alive
2025-04-22 11:48:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77968300 is alive
2025-04-22 11:48:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:48:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:48:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4bed26ef is alive
2025-04-22 11:48:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1af20195 is alive
2025-04-22 11:48:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f4c0588 is alive
2025-04-22 11:48:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fdf7745 is alive
2025-04-22 11:48:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@593f1f48 is alive
2025-04-22 11:48:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-22 11:48:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35271c35 is alive
2025-04-22 11:48:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:48:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:49:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:49:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:49:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7addfeda is alive
2025-04-22 11:49:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:49:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:49:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b4780de is alive
2025-04-22 11:49:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77968300 is alive
2025-04-22 11:50:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4bed26ef is alive
2025-04-22 11:50:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:50:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:50:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1af20195 is alive
2025-04-22 11:50:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f4c0588 is alive
2025-04-22 11:50:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fdf7745 is alive
2025-04-22 11:50:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@593f1f48 is alive
2025-04-22 11:50:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-22 11:50:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35271c35 is alive
2025-04-22 11:50:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:50:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:51:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7addfeda is alive
2025-04-22 11:51:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:51:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:51:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b4780de is alive
2025-04-22 11:51:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77968300 is alive
2025-04-22 11:51:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:51:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:52:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4bed26ef is alive
2025-04-22 11:52:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1af20195 is alive
2025-04-22 11:52:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:52:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:52:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f4c0588 is alive
2025-04-22 11:52:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fdf7745 is alive
2025-04-22 11:52:40 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-22 11:52:40 INFO  StaffMenuUI - Booking room for a user.
2025-04-22 11:52:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@593f1f48 is alive
2025-04-22 11:52:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a760689 is alive
2025-04-22 11:52:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35271c35 is alive
2025-04-22 11:52:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:52:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:52:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7addfeda is alive
2025-04-22 11:52:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:52:56 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1321128627 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 11:52:56 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 542766981
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18ca9277
2025-04-22 11:52:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:52:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:52:56 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 11:52:56 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:52:56 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:52:56 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:52:56 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 11:52:56 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 11:52:56 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:52:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:52:56 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@210362979 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:52:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 887840001
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1870436181
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1168882980
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 506594173
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1348064152
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1528045817
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1129243682
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1307131613
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1404232171
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 702218380
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 486575713
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 421217482
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1575109563
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 743241707
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 891684741
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1993877759
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 11:52:56 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 11:52:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 11:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54d35ed5
2025-04-22 11:52:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:52:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:53:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b4780de is alive
2025-04-22 11:53:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@77968300 is alive
2025-04-22 11:53:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:53:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:53:26 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 101 from 2025-04-22T11:53 to 2025-04-23T10:00
2025-04-22 11:53:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:53:28 DEBUG TransactionImpl - begin
2025-04-22 11:53:28 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 11:53:28 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 11:53:28 DEBUG results - Initializer list is empty
2025-04-22 11:53:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@d5a72cd
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 11:53:28 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@12d35bc9
2025-04-22 11:53:28 DEBUG TransactionImpl - committing
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:53:28 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:53:28 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-22T11:53, checkOut=2025-04-23T10:00, user=org.example.entity.User#13, bookingId=71, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-22 11:53:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:53:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:53:28 INFO  BookingServiceImpl - Booking created successfully with ID: 71
2025-04-22 11:53:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:53:28 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@792363366 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:53:28 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:53:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:53:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 36437323
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:53:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:53:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79e16dd9
2025-04-22 11:53:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:53:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:53:28 DEBUG TransactionImpl - begin
2025-04-22 11:53:28 DEBUG create - Created new SQL alias : r1_0
2025-04-22 11:53:28 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 11:53:28 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 11:53:28 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 11:53:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:53:28 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1587586985 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:53:28 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:53:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:53:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 592242687
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:53:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:53:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@780a91d0
2025-04-22 11:53:28 DEBUG TransactionImpl - committing
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:53:28 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:53:28 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 11:53:28 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 11:53:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:53:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:53:28 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-22 11:53:28 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-22 11:53:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:53:28 DEBUG TransactionImpl - begin
2025-04-22 11:53:28 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 11:53:28 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 11:53:28 DEBUG results - Initializer list is empty
2025-04-22 11:53:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5340ccb9
2025-04-22 11:53:28 DEBUG results - Extracted JDBC value [0] - [43]
2025-04-22 11:53:28 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@2bc8caa7
2025-04-22 11:53:28 DEBUG TransactionImpl - committing
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 11:53:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:53:28 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:53:28 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=org.example.entity.Booking#71, invoiceId=43, issueDate=2025-04-22T11:53:28.943693700, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-22 11:53:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:53:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:53:28 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-22 11:53:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4bed26ef is alive
2025-04-22 11:53:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 11:53:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 11:54:01 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-22 11:54:03 INFO  StaffMenuUI - Cancellation process started for Booking ID: 71
2025-04-22 11:54:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:54:03 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@403488991 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1693662702 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1640334112)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@283438643 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1854983880)

2025-04-22 11:54:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:54:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 71
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 515370073
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1182042884
2025-04-22 11:54:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#71] : 1047634424
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:54:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#71
2025-04-22 11:54:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d3d4a54
2025-04-22 11:54:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:54:03 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@723104582 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@935704808 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1640334112)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1886202798 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1854983880)

2025-04-22 11:54:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:54:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 71
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 1316525828
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1464984894
2025-04-22 11:54:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#71] : 1313209296
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:54:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:54:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#71
2025-04-22 11:54:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19ce19b7
2025-04-22 11:54:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:03 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-22 11:54:03 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-22 11:54:03 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 11:54:03 DEBUG create - Created new SQL alias : i1_0
2025-04-22 11:54:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 11:54:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73e93c3a] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 11:54:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1835b783] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 11:54:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2459333a] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 11:54:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2459333a] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@73e93c3a
2025-04-22 11:54:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-22 11:54:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-22 11:54:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-22 11:54:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-22 11:54:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-22 11:54:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 11:54:03 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1597323019 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@382265784)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1882240844 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@668345982 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1361952992)

2025-04-22 11:54:03 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [0] - [43]
2025-04-22 11:54:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 43
2025-04-22 11:54:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#43] : 1338446903
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [2] - [71]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [3] - [2025-04-22T11:53:28.943694]
2025-04-22 11:54:03 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-22 11:54:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#43
2025-04-22 11:54:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@652a1a17
2025-04-22 11:54:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1af20195 is alive
2025-04-22 11:54:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:54:05 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@409821235 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1544474221 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1640334112)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1765907801 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1854983880)

2025-04-22 11:54:05 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 71
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 590855975
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1182356813
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#71] : 1131519640
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#71
2025-04-22 11:54:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49353d43
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:54:05 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1474657733 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1538955593 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1640334112)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@342907384 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1854983880)

2025-04-22 11:54:05 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 71
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 122110358
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 300836639
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#71] : 404787971
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#71
2025-04-22 11:54:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@57df09a7
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:54:05 DEBUG TransactionImpl - begin
2025-04-22 11:54:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:54:05 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1789503803 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@136183278 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1640334112)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@347725669 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1854983880)

2025-04-22 11:54:05 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 71
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 958468958
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 975412652
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#71] : 1973372401
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 11:54:05 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#71
2025-04-22 11:54:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2573b149
2025-04-22 11:54:05 DEBUG TransactionImpl - committing
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:54:05 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:54:05 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-22 11:54:05 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-22T11:53, checkOut=2025-04-23T10:00, user=org.example.entity.User#13, bookingId=71, room=org.example.entity.Room#1, status=CANCELLED}
2025-04-22 11:54:05 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 11:54:05 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 INFO  StaffMenuUI - Booking ID: 71 successfully canceled
2025-04-22 11:54:05 INFO  StaffMenuUI - Attempting to update room availability. Room ID: 1, Availability: true
2025-04-22 11:54:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:54:05 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1579650597 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:54:05 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1386693416
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:54:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3093b9ff
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 INFO  RoomServiceImpl - Fetched room with ID 1: Optional[Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}]
2025-04-22 11:54:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:54:05 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@932925062 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:54:05 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 256089615
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:54:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@62410e1f
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:54:05 DEBUG TransactionImpl - begin
2025-04-22 11:54:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:54:05 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1385623564 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 11:54:05 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1529869535
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 11:54:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23dff243
2025-04-22 11:54:05 DEBUG TransactionImpl - committing
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:54:05 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:54:05 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 11:54:05 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-22 11:54:05 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-22 11:54:05 INFO  StaffMenuUI - Room ID: 1 availability successfully updated to: true
2025-04-22 11:54:05 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 11:54:05 DEBUG TransactionImpl - begin
2025-04-22 11:54:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 11:54:05 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@400280074 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1361952992)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@863395106 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@382265784)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1869081829 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-22 11:54:05 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 43
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#43] : 1560327273
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [2] - [71]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [3] - [2025-04-22T11:53:28.943694]
2025-04-22 11:54:05 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-22 11:54:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#43
2025-04-22 11:54:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dd07be8
2025-04-22 11:54:05 DEBUG TransactionImpl - committing
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 11:54:05 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 11:54:05 DEBUG EntityPrinter - Listing entities:
2025-04-22 11:54:05 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=<uninitialized>, invoiceId=43, issueDate=2025-04-22T11:53:28.943694, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-22 11:54:05 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 11:54:05 INFO  StaffMenuUI - Room availability updated for Room ID: 1 and payment status set to CANCELED
2025-04-22 12:04:44 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 12:04:44 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 12:04:44 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 12:04:44 DEBUG HikariConfig - autoCommit......................true
2025-04-22 12:04:44 DEBUG HikariConfig - catalog.........................none
2025-04-22 12:04:44 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 12:04:44 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 12:04:44 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 12:04:44 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-22 12:04:44 DEBUG HikariConfig - dataSource......................none
2025-04-22 12:04:44 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 12:04:44 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 12:04:44 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 12:04:44 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 12:04:44 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 12:04:44 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 12:04:44 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 12:04:44 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 12:04:44 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 12:04:44 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 12:04:44 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 12:04:44 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 12:04:44 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 12:04:44 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 12:04:44 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 12:04:44 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 12:04:44 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 12:04:44 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 12:04:44 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 12:04:44 DEBUG HikariConfig - password........................<masked>
2025-04-22 12:04:44 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 12:04:44 DEBUG HikariConfig - readOnly........................false
2025-04-22 12:04:44 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 12:04:44 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 12:04:44 DEBUG HikariConfig - schema..........................none
2025-04-22 12:04:44 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 12:04:44 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 12:04:44 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 12:04:44 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 12:04:44 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 12:04:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9cd55557-0c65-4ce8-9f08-6e46e79d2a05)
2025-04-22 12:04:44 DEBUG PoolBase - HikariPool-1 - Established new connection (9cd55557-0c65-4ce8-9f08-6e46e79d2a05)
2025-04-22 12:04:44 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1941a8ff
2025-04-22 12:04:44 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 12:04:44 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 12:04:44 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 12:04:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 12:04:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 12:04:45 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 12:04:45 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c76acf4d-fc6d-4d23-aa56-d1bdd8379910)
2025-04-22 12:04:45 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Established new connection (c76acf4d-fc6d-4d23-aa56-d1bdd8379910)
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7a875df5
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:04:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 12:04:45 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 12:04:45 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e324846a-eaad-4345-8707-06e3843741f0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Established new connection (e324846a-eaad-4345-8707-06e3843741f0)
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@707f3685
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e69ce08f-905f-4ad2-87f1-ee355f25ac06)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24be2d9c
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5bd73d1a
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@aec50a1
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2555fff0
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@70d2e40b
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Established new connection (e69ce08f-905f-4ad2-87f1-ee355f25ac06)
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@357da6ee
2025-04-22 12:04:45 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@499b2a5c] into BootstrapContext; was [null]
2025-04-22 12:04:45 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@596df867] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@c1fca1e]
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a67ee488-ec27-4374-ad84-fc02788c2c74)
2025-04-22 12:04:45 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 12:04:45 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Established new connection (a67ee488-ec27-4374-ad84-fc02788c2c74)
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@75552d41
2025-04-22 12:04:45 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a1194873-2b82-4c19-bd1b-18887b35c892)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Established new connection (a1194873-2b82-4c19-bd1b-18887b35c892)
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@482113a
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3dca5d31-0ace-4121-aef8-35300e438a30)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Established new connection (3dca5d31-0ace-4121-aef8-35300e438a30)
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d40c431
2025-04-22 12:04:45 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 12:04:45 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 12:04:45 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cb633ec8-0158-4acb-b54d-8726e0f138a8)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Established new connection (cb633ec8-0158-4acb-b54d-8726e0f138a8)
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@555259a1
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (81a9dbdf-a58e-416d-917e-9127f7e4f20e)
2025-04-22 12:04:45 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 12:04:45 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 12:04:45 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Established new connection (81a9dbdf-a58e-416d-917e-9127f7e4f20e)
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@931496f
2025-04-22 12:04:45 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3047254d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6cf31447)
2025-04-22 12:04:45 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e92466a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e8997c)
2025-04-22 12:04:45 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 12:04:45 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2970a5bc`
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a921187c-530c-4d9e-83f0-f360a0df968b)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:04:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:04:45 DEBUG PoolBase - HikariPool-1 - Established new connection (a921187c-530c-4d9e-83f0-f360a0df968b)
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d2e82b2
2025-04-22 12:04:45 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 12:04:45 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@474fae39]
2025-04-22 12:04:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:04:45 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 12:04:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 12:04:45 DEBUG EntityBinder - Import with entity name User
2025-04-22 12:04:45 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property userID
2025-04-22 12:04:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property email
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property isActive
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property name
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property password
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property userRole
2025-04-22 12:04:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 12:04:45 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 12:04:45 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property guestId
2025-04-22 12:04:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property age
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property name
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property user
2025-04-22 12:04:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 12:04:45 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 12:04:45 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property bookingId
2025-04-22 12:04:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property checkIn
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property checkOut
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property room
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property status
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property user
2025-04-22 12:04:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 12:04:45 DEBUG EntityBinder - Import with entity name Room
2025-04-22 12:04:45 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property roomID
2025-04-22 12:04:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property price
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property roomType
2025-04-22 12:04:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 12:04:45 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 12:04:45 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 12:04:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property amount
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property booking
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property issueDate
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 12:04:45 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 12:04:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 12:04:45 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 12:04:45 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:04:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:04:45 DEBUG PropertyBinder - Building property user
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 12:04:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 12:04:45 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 12:04:45 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 12:04:45 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 12:04:45 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 12:04:45 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 12:04:46 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:04:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:04:46 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77dba4cd, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 12:04:46 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4d84049a] under count; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4cb702ce] under every; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@383caf89] under any; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b74ea] under sinh; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14924f41] under cosh; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@493da830] under tanh; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f939a0f] under pi; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133] under log; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1665fa54] under position; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2262d6d5] under overlay; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@f3560d4] under trim; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1642eeae] under cast; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd] under collate; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@322ba549] under extract; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@b0fd744] under ifnull; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@726934e2] under pad; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@798dad3d] under str; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4bdf] under format; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@78422efb] under timestampadd; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@50eb4a2c] under timestampdiff; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7885776b] under current_date; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@497d4c96] under current_time; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3472947a] under current_timestamp; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69d3cf7e] under local_date; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a3ed300] under local_time; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1984212d] under local_datetime; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39f5b723] under offset_datetime; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4eaa375c] under instant; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@31a2a9fa] under sql; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31b82e0f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@493da830
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b74ea
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14924f41
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f939a0f
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@36e43829] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3a3ed300
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1984212d
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6af90849] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1d06f16f] under bit_length; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4fa4f485] under octet_length; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68dd39d2] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1665fa54
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a44cfc0] under bitand; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e3c26e] under bitor; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80b122b] under bitxor; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under bitnot; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65cf4d6d] under median; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under insert; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@16736040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2262d6d5
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7c5d1d25] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6a1d526c] under listagg; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@e95595b] under array; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5a917723] under array_list; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@cedee22] under array_agg; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1860f3be] under array_position; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12c0c0b3] under array_positions; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6025d790] under array_positions_list; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@af7e376] under array_length; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@889a8a8] under array_concat; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ed2f2f6] under array_prepend; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@fe87ddd] under array_append; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@1da4b3f9] under array_contains; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@23cbbd07] under array_contains_nullable; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@da28d03] under array_overlaps; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ebda593] under array_overlaps_nullable; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37348491] under array_get; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@dab1f89] under array_set; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@640cc04b] under array_remove_index; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@630bf683] under array_slice; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22d322f5] under array_trim; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@388d14e] under array_fill; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@1cd43562] under array_fill_list; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@10b687f2] under array_to_string; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@456bcb74] under mode; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a9c5b75] under percentile_cont; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@dd4aec3] under percentile_disc; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16a2ed51] under rank; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b332962] under dense_rank; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@57ddd45b] under percent_rank; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2e7bf7b7] under cume_dist; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4519f676] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78ec89a6] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3596b249] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80b122b
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@642ee49c] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4ed5a1b0] under trunc; prior registration was null
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 12:04:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d003cd] under date_trunc; prior registration was null
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 12:04:46 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 12:04:46 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 12:04:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:04:46 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 12:04:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:04:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:04:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 12:04:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:04:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:04:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:04:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:04:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:04:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 12:04:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:04:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:04:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:04:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:04:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:04:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 12:04:46 DEBUG creation - Starting post-init callbacks
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 12:04:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 12:04:46 DEBUG create - Created new SQL alias : g1_0
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65036e8d] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 12:04:46 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:04:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 12:04:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:04:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 12:04:46 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@19d53ab4] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:04:46 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@652e345] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:04:46 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:04:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 12:04:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:04:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 12:04:46 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:04:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 12:04:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:04:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 12:04:46 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:04:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 12:04:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:04:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 12:04:46 DEBUG create - Created new SQL alias : i1_0
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27bc1d44] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 12:04:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61911947] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 12:04:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 12:04:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 12:04:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 12:04:46 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 12:04:46 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 12:04:46 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 12:04:46 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 12:04:46 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 12:04:46 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@50dc49e1]
2025-04-22 12:04:46 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 12:04:46 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 12:04:46 DEBUG Table - No alter strings for table : bookings
2025-04-22 12:04:46 DEBUG Table - No alter strings for table : guests
2025-04-22 12:04:46 DEBUG Table - No alter strings for table : invoices
2025-04-22 12:04:46 DEBUG Table - No alter strings for table : rooms
2025-04-22 12:04:46 DEBUG Table - No alter strings for table : users
2025-04-22 12:04:47 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c9e8a67
2025-04-22 12:04:47 DEBUG SessionFactoryRegistry - Registering SessionFactory: eeb602df-35d2-4641-bffe-ff972f35c277 (my-persistence-unit)
2025-04-22 12:04:47 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 12:04:47 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 12:04:47 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 12:04:47 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 12:04:47 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 12:04:47 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:04:47 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:04:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:04:47 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 12:04:47 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 12:04:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 12:04:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:04:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:04:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@841660110 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:04:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:04:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:04:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1246215324
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:04:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:04:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ea9373e
2025-04-22 12:04:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:04:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:04:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:04:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2092841477 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:04:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:04:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:04:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1969632323
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:04:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:04:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:04:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@780546f8
2025-04-22 12:04:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:04:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:04:47 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-22 12:04:47 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-22 12:04:49 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-22 12:04:49 INFO  StaffMenuUI - Booking room for a user.
2025-04-22 12:04:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:04:55 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1821268676 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:04:55 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:04:55 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:04:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:04:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1312126866
2025-04-22 12:04:55 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:04:55 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:04:55 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:04:55 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:04:55 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:04:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:04:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50734cea
2025-04-22 12:04:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:04:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:05:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:05:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:05:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:05:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:06:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:06:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:06:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d2e82b2 is alive
2025-04-22 12:06:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@482113a is alive
2025-04-22 12:06:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a875df5 is alive
2025-04-22 12:06:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@75552d41 is alive
2025-04-22 12:06:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@707f3685 is alive
2025-04-22 12:06:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@357da6ee is alive
2025-04-22 12:06:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@931496f is alive
2025-04-22 12:06:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d40c431 is alive
2025-04-22 12:06:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:06:59 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 12:06:59 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 12:06:59 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 12:06:59 DEBUG HikariConfig - autoCommit......................true
2025-04-22 12:06:59 DEBUG HikariConfig - catalog.........................none
2025-04-22 12:06:59 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 12:06:59 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 12:06:59 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 12:06:59 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-22 12:06:59 DEBUG HikariConfig - dataSource......................none
2025-04-22 12:06:59 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 12:06:59 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 12:06:59 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 12:06:59 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 12:06:59 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 12:06:59 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 12:06:59 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 12:06:59 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 12:06:59 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 12:06:59 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 12:06:59 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 12:06:59 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 12:06:59 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 12:06:59 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 12:06:59 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 12:06:59 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 12:06:59 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 12:06:59 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 12:06:59 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 12:06:59 DEBUG HikariConfig - password........................<masked>
2025-04-22 12:06:59 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 12:06:59 DEBUG HikariConfig - readOnly........................false
2025-04-22 12:06:59 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 12:06:59 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 12:06:59 DEBUG HikariConfig - schema..........................none
2025-04-22 12:06:59 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 12:06:59 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 12:06:59 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 12:06:59 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 12:06:59 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 12:06:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9d428604-a3f3-4f59-ad55-dbd68a46be04)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (9d428604-a3f3-4f59-ad55-dbd68a46be04)
2025-04-22 12:07:00 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1941a8ff
2025-04-22 12:07:00 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 12:07:00 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 12:07:00 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 12:07:00 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 12:07:00 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 12:07:00 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 12:07:00 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 12:07:00 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3aa21c4c-7db6-42f1-8b4c-ffe3069f0ca3)
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:07:00 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (3aa21c4c-7db6-42f1-8b4c-ffe3069f0ca3)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68c10f02
2025-04-22 12:07:00 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 12:07:00 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e6d5007f-ff89-40c0-825d-144adbbea0a6)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (e6d5007f-ff89-40c0-825d-144adbbea0a6)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@62396472
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ea87ebcb-c456-490b-8c34-e7734e45ae27)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24be2d9c
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5bd73d1a
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@aec50a1
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2555fff0
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@70d2e40b
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-22 12:07:00 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@499b2a5c] into BootstrapContext; was [null]
2025-04-22 12:07:00 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@596df867] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@c1fca1e]
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (ea87ebcb-c456-490b-8c34-e7734e45ae27)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@273bf651
2025-04-22 12:07:00 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 12:07:00 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (74eab5e2-7f78-4ec9-8d03-d745b54b12bd)
2025-04-22 12:07:00 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (74eab5e2-7f78-4ec9-8d03-d745b54b12bd)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@47e244ab
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5ba761ec-c5bb-4877-b0a6-f1a1c0095354)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (5ba761ec-c5bb-4877-b0a6-f1a1c0095354)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16d61591
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2d368ff2-4729-4ddc-9542-5b70575f81ce)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (2d368ff2-4729-4ddc-9542-5b70575f81ce)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3fe5f9cd
2025-04-22 12:07:00 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 12:07:00 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 12:07:00 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (689eff7e-b782-4ac8-9cd6-aa63d1771275)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (689eff7e-b782-4ac8-9cd6-aa63d1771275)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4714091e
2025-04-22 12:07:00 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 12:07:00 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 12:07:00 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (25c88210-41cd-42df-a7fa-313d6891636c)
2025-04-22 12:07:00 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3047254d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6cf31447)
2025-04-22 12:07:00 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e92466a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e8997c)
2025-04-22 12:07:00 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 12:07:00 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (25c88210-41cd-42df-a7fa-313d6891636c)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1206da4b
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2970a5bc`
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:07:00 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e766818f-2b2f-4280-b89e-9191066e4783)
2025-04-22 12:07:00 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 12:07:00 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@474fae39]
2025-04-22 12:07:00 DEBUG PoolBase - HikariPool-1 - Established new connection (e766818f-2b2f-4280-b89e-9191066e4783)
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34da2f07
2025-04-22 12:07:00 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 12:07:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:07:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 12:07:00 DEBUG EntityBinder - Import with entity name User
2025-04-22 12:07:00 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property userID
2025-04-22 12:07:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property email
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property isActive
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property name
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property password
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property userRole
2025-04-22 12:07:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 12:07:00 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 12:07:00 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property guestId
2025-04-22 12:07:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property age
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property name
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property user
2025-04-22 12:07:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 12:07:00 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 12:07:00 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property bookingId
2025-04-22 12:07:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property checkIn
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property checkOut
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property room
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property status
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property user
2025-04-22 12:07:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 12:07:00 DEBUG EntityBinder - Import with entity name Room
2025-04-22 12:07:00 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property roomID
2025-04-22 12:07:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property price
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property roomType
2025-04-22 12:07:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 12:07:00 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 12:07:00 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 12:07:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property amount
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property booking
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property issueDate
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 12:07:00 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 12:07:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 12:07:00 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 12:07:00 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:07:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:07:00 DEBUG PropertyBinder - Building property user
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 12:07:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 12:07:00 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 12:07:00 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 12:07:00 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 12:07:00 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 12:07:00 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 12:07:01 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:07:01 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:07:01 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77dba4cd, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 12:07:01 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4d84049a] under count; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4cb702ce] under every; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@383caf89] under any; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b74ea] under sinh; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14924f41] under cosh; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@493da830] under tanh; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f939a0f] under pi; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133] under log; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1665fa54] under position; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2262d6d5] under overlay; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@f3560d4] under trim; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1642eeae] under cast; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd] under collate; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@322ba549] under extract; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@b0fd744] under ifnull; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@726934e2] under pad; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@798dad3d] under str; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4bdf] under format; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@78422efb] under timestampadd; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@50eb4a2c] under timestampdiff; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7885776b] under current_date; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@497d4c96] under current_time; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3472947a] under current_timestamp; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69d3cf7e] under local_date; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a3ed300] under local_time; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1984212d] under local_datetime; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39f5b723] under offset_datetime; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4eaa375c] under instant; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@31a2a9fa] under sql; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31b82e0f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@493da830
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b74ea
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14924f41
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f939a0f
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@36e43829] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3a3ed300
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1984212d
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6af90849] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1d06f16f] under bit_length; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4fa4f485] under octet_length; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68dd39d2] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1665fa54
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a44cfc0] under bitand; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e3c26e] under bitor; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80b122b] under bitxor; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under bitnot; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65cf4d6d] under median; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under insert; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@16736040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2262d6d5
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7c5d1d25] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6a1d526c] under listagg; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@e95595b] under array; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5a917723] under array_list; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@cedee22] under array_agg; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1860f3be] under array_position; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12c0c0b3] under array_positions; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6025d790] under array_positions_list; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@af7e376] under array_length; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@889a8a8] under array_concat; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ed2f2f6] under array_prepend; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@fe87ddd] under array_append; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@1da4b3f9] under array_contains; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@23cbbd07] under array_contains_nullable; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@da28d03] under array_overlaps; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ebda593] under array_overlaps_nullable; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37348491] under array_get; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@dab1f89] under array_set; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@640cc04b] under array_remove_index; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@630bf683] under array_slice; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22d322f5] under array_trim; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@388d14e] under array_fill; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@1cd43562] under array_fill_list; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@10b687f2] under array_to_string; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@456bcb74] under mode; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a9c5b75] under percentile_cont; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@dd4aec3] under percentile_disc; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16a2ed51] under rank; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b332962] under dense_rank; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@57ddd45b] under percent_rank; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2e7bf7b7] under cume_dist; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4519f676] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78ec89a6] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3596b249] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80b122b
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@642ee49c] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4ed5a1b0] under trunc; prior registration was null
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 12:07:01 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d003cd] under date_trunc; prior registration was null
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 12:07:01 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 12:07:01 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 12:07:01 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:07:01 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 12:07:01 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:07:01 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:07:01 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 12:07:01 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:07:01 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:07:01 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:07:01 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:07:01 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:07:01 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 12:07:01 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:07:01 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:07:01 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:07:01 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:07:01 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:07:01 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 12:07:01 DEBUG creation - Starting post-init callbacks
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 12:07:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 12:07:01 DEBUG create - Created new SQL alias : g1_0
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65036e8d] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 12:07:01 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:07:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 12:07:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:07:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 12:07:01 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@19d53ab4] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:07:01 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@652e345] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:07:01 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:07:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 12:07:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:07:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 12:07:01 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:07:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 12:07:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:07:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 12:07:01 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:07:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 12:07:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:07:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 12:07:01 DEBUG create - Created new SQL alias : i1_0
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27bc1d44] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 12:07:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61911947] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 12:07:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 12:07:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 12:07:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 12:07:01 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 12:07:01 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 12:07:01 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 12:07:01 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 12:07:01 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 12:07:01 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@50dc49e1]
2025-04-22 12:07:01 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 12:07:01 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 12:07:02 DEBUG Table - No alter strings for table : bookings
2025-04-22 12:07:02 DEBUG Table - No alter strings for table : guests
2025-04-22 12:07:02 DEBUG Table - No alter strings for table : invoices
2025-04-22 12:07:02 DEBUG Table - No alter strings for table : rooms
2025-04-22 12:07:02 DEBUG Table - No alter strings for table : users
2025-04-22 12:07:02 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c9e8a67
2025-04-22 12:07:02 DEBUG SessionFactoryRegistry - Registering SessionFactory: 71349fef-d6ba-4575-826c-c13f65b90ce0 (my-persistence-unit)
2025-04-22 12:07:02 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 12:07:02 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 12:07:02 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 12:07:02 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 12:07:02 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 12:07:02 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:07:02 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:07:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:07:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 12:07:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 12:07:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 12:07:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:07:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:07:02 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@841660110 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:07:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:07:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:07:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:07:02 ERROR UserDaoImpl - Error fetching user by email shubamlanke@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.authenticateUser(UserServiceImpl.java:59) [classes/:?]
	at org.example.controller.UserController.authenticateUser(UserController.java:41) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:74) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-22 12:07:02 WARN  HomeMenuUI - Invalid login attempt for email: shubamlanke@gmail.com
2025-04-22 12:07:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:07:17 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1493257982 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:07:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:07:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:07:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 2000880842
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:07:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:07:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5909285b
2025-04-22 12:07:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:07:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:07:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:07:17 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@415928951 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:07:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:07:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:07:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1120735174
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:07:17 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:07:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:07:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e5864c2
2025-04-22 12:07:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:07:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:07:17 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-22 12:07:17 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-22 12:07:19 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-22 12:07:19 INFO  StaffMenuUI - Booking room for a user.
2025-04-22 12:07:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:07:24 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@574000604 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:07:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:07:24 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:07:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:07:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 900666712
2025-04-22 12:07:24 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:07:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:07:24 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:07:24 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:07:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:07:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:07:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2361365c
2025-04-22 12:07:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:07:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:07:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:07:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:08:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:08:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:08:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:08:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:08:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62396472 is alive
2025-04-22 12:08:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47e244ab is alive
2025-04-22 12:08:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fe5f9cd is alive
2025-04-22 12:08:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1206da4b is alive
2025-04-22 12:08:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68c10f02 is alive
2025-04-22 12:08:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@273bf651 is alive
2025-04-22 12:08:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34da2f07 is alive
2025-04-22 12:08:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:08:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16d61591 is alive
2025-04-22 12:08:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4714091e is alive
2025-04-22 12:09:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:09:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:09:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:09:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:10:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:10:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:10:06 INFO  StaffMenuUI - Collected details for 1 guest(s)
2025-04-22 12:10:06 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:10:06 DEBUG TransactionImpl - begin
2025-04-22 12:10:06 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 12:10:06 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 12:10:06 DEBUG results - Initializer list is empty
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6eab92f3
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 12:10:06 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@55b74e6b
2025-04-22 12:10:06 DEBUG TransactionImpl - committing
2025-04-22 12:10:06 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:10:06 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:10:06 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 12:10:06 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:10:06 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:10:06 DEBUG EntityPrinter - org.example.entity.Guest{name=SANJANA KAUR, guestId=16, user=org.example.entity.User#13, age=22}
2025-04-22 12:10:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:06 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 12:10:06 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:10:06 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:10:06 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:10:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 12:10:06 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 12:10:06 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:10:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:10:06 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@2067939216 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:10:06 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 289163990
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 2069664786
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1775829753
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 5533778
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1017375650
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 599786528
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 36635755
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 559559324
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 34022382
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 566609546
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1538495109
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 722306493
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 271502177
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 533769848
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1479553213
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 525821547
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 12:10:06 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:10:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 12:10:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-22 12:10:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62396472 is alive
2025-04-22 12:10:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47e244ab is alive
2025-04-22 12:10:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fe5f9cd is alive
2025-04-22 12:10:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1206da4b is alive
2025-04-22 12:10:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68c10f02 is alive
2025-04-22 12:10:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@273bf651 is alive
2025-04-22 12:10:26 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 101 from 2025-04-22T12:10 to 2025-04-23T10:00
2025-04-22 12:10:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:10:28 DEBUG TransactionImpl - begin
2025-04-22 12:10:28 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 12:10:28 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 12:10:28 DEBUG results - Initializer list is empty
2025-04-22 12:10:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3bb4c2b2
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 12:10:28 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@4fbc516f
2025-04-22 12:10:28 DEBUG TransactionImpl - committing
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:10:28 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:10:28 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-22T12:10, checkOut=2025-04-23T10:00, user=org.example.entity.User#13, bookingId=72, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-22 12:10:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:28 INFO  BookingServiceImpl - Booking created successfully with ID: 72
2025-04-22 12:10:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:10:28 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@41470360 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:10:28 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:10:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:10:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2013958608
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:10:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:10:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3cfab340
2025-04-22 12:10:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:10:28 DEBUG TransactionImpl - begin
2025-04-22 12:10:28 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:10:28 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:10:28 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 12:10:28 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:10:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:10:28 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@459249162 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:10:28 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:10:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:10:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 908006983
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:10:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:10:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51172948
2025-04-22 12:10:28 DEBUG TransactionImpl - committing
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:10:28 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:10:28 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 12:10:28 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 12:10:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:28 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-22 12:10:28 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-22 12:10:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:10:28 DEBUG TransactionImpl - begin
2025-04-22 12:10:28 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 12:10:28 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 12:10:28 DEBUG results - Initializer list is empty
2025-04-22 12:10:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@341964d0
2025-04-22 12:10:28 DEBUG results - Extracted JDBC value [0] - [44]
2025-04-22 12:10:28 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@51b59d58
2025-04-22 12:10:28 DEBUG TransactionImpl - committing
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 12:10:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:10:28 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:10:28 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=org.example.entity.Booking#72, invoiceId=44, issueDate=2025-04-22T12:10:28.326354600, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-22 12:10:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:10:28 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-22 12:10:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:10:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:10:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34da2f07 is alive
2025-04-22 12:10:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:10:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16d61591 is alive
2025-04-22 12:10:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4714091e is alive
2025-04-22 12:11:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:11:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:11:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:11:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:11:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62396472 is alive
2025-04-22 12:11:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47e244ab is alive
2025-04-22 12:11:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fe5f9cd is alive
2025-04-22 12:12:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:12:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:12:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1206da4b is alive
2025-04-22 12:12:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68c10f02 is alive
2025-04-22 12:12:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@273bf651 is alive
2025-04-22 12:12:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34da2f07 is alive
2025-04-22 12:12:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:12:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:12:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:12:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16d61591 is alive
2025-04-22 12:12:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4714091e is alive
2025-04-22 12:13:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:13:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:13:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62396472 is alive
2025-04-22 12:13:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:13:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:13:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47e244ab is alive
2025-04-22 12:13:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fe5f9cd is alive
2025-04-22 12:13:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1206da4b is alive
2025-04-22 12:13:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68c10f02 is alive
2025-04-22 12:13:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@273bf651 is alive
2025-04-22 12:14:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:14:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:14:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34da2f07 is alive
2025-04-22 12:14:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:14:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:14:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:14:31 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-22 12:14:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16d61591 is alive
2025-04-22 12:14:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:14:37 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@758991444 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:14:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1886202798
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:14:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3205610d
2025-04-22 12:14:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:14:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:14:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:14:37 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1423992712 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:14:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1313209296
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:14:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19ce19b7
2025-04-22 12:14:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:14:37 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-22 12:14:37 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-22 12:14:37 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:14:37 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:14:37 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:14:37 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5c0ece6d] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:14:37 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2337bf27] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:14:37 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@43719e98] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:14:37 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@43719e98] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@2337bf27
2025-04-22 12:14:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:14:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:14:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-22 12:14:37 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-22 12:14:37 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-22 12:14:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:14:37 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@814987775 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@571203888)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@932925062 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1598944606)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1924981513 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 12:14:37 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1385623564
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:14:37 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-22 12:14:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:14:37 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1046246792 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:14:37 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1257637609
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:14:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17dbca0a
2025-04-22 12:14:37 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-22 12:14:37 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-22 12:14:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:14:37 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1869081829 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:14:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1560327273
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:14:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dd07be8
2025-04-22 12:14:37 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 12:14:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@228958a
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 130889824
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:14:37 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:14:37 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-22 12:14:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@228958a
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 1156725031
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:14:37 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:14:37 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:14:37 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:14:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 12:14:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@228958a
2025-04-22 12:14:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:14:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:14:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4714091e is alive
2025-04-22 12:15:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:15:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:15:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@62396472 is alive
2025-04-22 12:15:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47e244ab is alive
2025-04-22 12:15:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fe5f9cd is alive
2025-04-22 12:15:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1206da4b is alive
2025-04-22 12:15:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68c10f02 is alive
2025-04-22 12:15:30 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:15:30 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:15:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@273bf651 is alive
2025-04-22 12:15:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34da2f07 is alive
2025-04-22 12:15:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:16:00 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:16:00 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:16:24 WARN  HomeMenuUI - Invalid email format entered: shubhamlanke@gmai.com
2025-04-22 12:16:26 WARN  HomeMenuUI - Invalid email format entered: password
2025-04-22 12:16:38 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 12:16:38 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 12:16:38 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 12:16:38 DEBUG HikariConfig - autoCommit......................true
2025-04-22 12:16:38 DEBUG HikariConfig - catalog.........................none
2025-04-22 12:16:38 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 12:16:38 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 12:16:38 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 12:16:38 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-22 12:16:38 DEBUG HikariConfig - dataSource......................none
2025-04-22 12:16:38 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 12:16:38 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 12:16:38 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 12:16:38 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 12:16:38 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 12:16:38 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 12:16:38 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 12:16:38 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 12:16:38 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 12:16:38 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 12:16:38 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 12:16:38 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 12:16:38 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 12:16:38 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 12:16:38 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 12:16:38 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 12:16:38 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 12:16:38 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 12:16:38 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 12:16:38 DEBUG HikariConfig - password........................<masked>
2025-04-22 12:16:38 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 12:16:38 DEBUG HikariConfig - readOnly........................false
2025-04-22 12:16:38 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 12:16:38 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 12:16:38 DEBUG HikariConfig - schema..........................none
2025-04-22 12:16:38 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 12:16:38 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 12:16:38 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 12:16:38 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 12:16:38 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (12498af3-4108-432a-a334-ceaffc5b892f)
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Established new connection (12498af3-4108-432a-a334-ceaffc5b892f)
2025-04-22 12:16:38 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71529963
2025-04-22 12:16:38 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 12:16:38 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 12:16:38 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 12:16:38 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 12:16:38 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 12:16:38 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 12:16:38 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (25e0e7ec-1591-4e28-8244-8773e4463a4e)
2025-04-22 12:16:38 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Established new connection (25e0e7ec-1591-4e28-8244-8773e4463a4e)
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18841f24
2025-04-22 12:16:38 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 12:16:38 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 12:16:38 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3077c84b-4cc0-4bf8-bc42-cbc0215fd462)
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Established new connection (3077c84b-4cc0-4bf8-bc42-cbc0215fd462)
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@127c7454
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ca642950-b176-4e30-a919-68bca481bb2b)
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70e29e14
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-22 12:16:38 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-22 12:16:38 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1827a871] into BootstrapContext; was [null]
2025-04-22 12:16:38 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48e64352] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7249dadf]
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Established new connection (ca642950-b176-4e30-a919-68bca481bb2b)
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@577ef87f
2025-04-22 12:16:38 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 12:16:38 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9877a125-169c-4690-855b-d26ca1f4f2fa)
2025-04-22 12:16:38 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Established new connection (9877a125-169c-4690-855b-d26ca1f4f2fa)
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6fbbb08b
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (286c314f-6192-48d7-a022-c510eb69b026)
2025-04-22 12:16:38 DEBUG PoolBase - HikariPool-1 - Established new connection (286c314f-6192-48d7-a022-c510eb69b026)
2025-04-22 12:16:38 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6663aeea
2025-04-22 12:16:39 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 12:16:39 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (351e06b4-b6ce-4af6-9b22-ba2564d02c6c)
2025-04-22 12:16:39 DEBUG PoolBase - HikariPool-1 - Established new connection (351e06b4-b6ce-4af6-9b22-ba2564d02c6c)
2025-04-22 12:16:39 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@174cb8a6
2025-04-22 12:16:39 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 12:16:39 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 12:16:39 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 12:16:39 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 12:16:39 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f340408c-e8c1-44bc-87f9-04e4d8d7f03c)
2025-04-22 12:16:39 DEBUG PoolBase - HikariPool-1 - Established new connection (f340408c-e8c1-44bc-87f9-04e4d8d7f03c)
2025-04-22 12:16:39 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@37510730
2025-04-22 12:16:39 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 12:16:39 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 12:16:39 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 12:16:39 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@12958360) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@c6e0f32)
2025-04-22 12:16:39 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f3f0fae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21a66d45)
2025-04-22 12:16:39 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 12:16:39 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 12:16:39 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-22 12:16:39 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ee39a1c3-8081-468e-a71c-08329eaa3ba4)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@14379273
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14379273
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24be2d9c`
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:16:39 DEBUG PoolBase - HikariPool-1 - Established new connection (ee39a1c3-8081-468e-a71c-08329eaa3ba4)
2025-04-22 12:16:39 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@55cc6b9
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:16:39 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:16:39 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 12:16:39 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@724c5cbe]
2025-04-22 12:16:39 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 12:16:39 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (41227152-a195-4be2-a976-bb6d3e589544)
2025-04-22 12:16:39 DEBUG PoolBase - HikariPool-1 - Established new connection (41227152-a195-4be2-a976-bb6d3e589544)
2025-04-22 12:16:39 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7eb33c06
2025-04-22 12:16:39 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 12:16:39 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 12:16:39 DEBUG EntityBinder - Import with entity name User
2025-04-22 12:16:39 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 12:16:39 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property userID
2025-04-22 12:16:39 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property email
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property isActive
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property name
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property password
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property userRole
2025-04-22 12:16:39 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 12:16:39 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 12:16:39 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property guestId
2025-04-22 12:16:39 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property age
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property name
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property user
2025-04-22 12:16:39 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 12:16:39 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 12:16:39 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property bookingId
2025-04-22 12:16:39 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property checkIn
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property checkOut
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property room
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property status
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property user
2025-04-22 12:16:39 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 12:16:39 DEBUG EntityBinder - Import with entity name Room
2025-04-22 12:16:39 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property roomID
2025-04-22 12:16:39 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property price
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property roomType
2025-04-22 12:16:39 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 12:16:39 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 12:16:39 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 12:16:39 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property amount
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property booking
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property issueDate
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 12:16:39 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 12:16:39 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 12:16:39 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 12:16:39 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:16:39 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:16:39 DEBUG PropertyBinder - Building property user
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 12:16:39 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 12:16:39 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 12:16:39 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 12:16:39 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 12:16:39 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 12:16:39 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 12:16:39 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:16:39 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:16:39 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:16:39 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5fef2aac, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 12:16:39 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@71ed560f] under count; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@315105f] under every; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b61bf11] under any; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97] under sinh; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d] under cosh; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031] under tanh; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54] under pi; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb] under log; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@40de8f93] under position; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae] under overlay; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1163a27] under trim; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6a1ef65c] under cast; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4] under collate; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@42f85fa4] under extract; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6968c1d6] under ifnull; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2ceee4b6] under pad; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@e784320] under str; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@50eb4a2c] under format; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7885776b] under timestampadd; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4eaa375c] under timestampdiff; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31a2a9fa] under current_date; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b82e0f] under current_time; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27a09971] under current_timestamp; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6215366a] under local_date; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46dcbeab] under local_time; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36e43829] under local_datetime; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@152c4495] under offset_datetime; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under instant; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4fa4f485] under sql; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68dd39d2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@999b951] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@46dcbeab
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@36e43829
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@f9cab00] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@10272bbb] under bit_length; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36d33f4] under octet_length; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@40de8f93
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c5d1d25] under bitand; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@550e9be6] under bitor; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020] under bitxor; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32eae6f2] under bitnot; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ca61bf] under median; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under insert; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@687e6293] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6870c3c2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@771a7d53] under listagg; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@60a7e509] under array; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2e13f304] under array_list; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@53ce2392] under array_agg; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@759de304] under array_position; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@32bb0072] under array_positions; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@889a8a8] under array_positions_list; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f29353f] under array_length; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@fe87ddd] under array_concat; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@23da79eb] under array_prepend; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@168b4cb0] under array_append; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@da28d03] under array_contains; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@ebda593] under array_contains_nullable; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3a17b2e3] under array_overlaps; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5e13f156] under array_overlaps_nullable; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22d322f5] under array_get; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7ab1127c] under array_set; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3520963d] under array_remove_index; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@388d14e] under array_slice; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd43562] under array_trim; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@456bcb74] under array_fill; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@a9c5b75] under array_fill_list; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3e28fee1] under array_to_string; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@de81be1] under mode; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@342e690b] under percentile_cont; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4519f676] under percentile_disc; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@781711b7] under rank; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642a16aa] under dense_rank; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642ee49c] under percent_rank; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@294aba23] under cume_dist; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32456db0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5f5827d0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58a2d9f9] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4dd90166] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@388623ad] under trunc; prior registration was null
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 12:16:39 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@91f565d] under date_trunc; prior registration was null
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 12:16:39 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 12:16:39 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 12:16:39 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:16:39 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 12:16:40 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:16:40 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:16:40 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 12:16:40 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:16:40 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:16:40 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:16:40 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:16:40 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:16:40 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 12:16:40 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:16:40 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:16:40 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:16:40 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:16:40 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:16:40 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 12:16:40 DEBUG creation - Starting post-init callbacks
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 12:16:40 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 12:16:40 DEBUG create - Created new SQL alias : g1_0
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57c69937] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 12:16:40 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:16:40 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 12:16:40 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:16:40 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 12:16:40 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6060146b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:16:40 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34cd65ac] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:16:40 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:16:40 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 12:16:40 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:16:40 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 12:16:40 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:16:40 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 12:16:40 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:16:40 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 12:16:40 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:16:40 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 12:16:40 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:16:40 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 12:16:40 DEBUG create - Created new SQL alias : i1_0
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5940b14e] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 12:16:40 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74431b9c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 12:16:40 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 12:16:40 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 12:16:40 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 12:16:40 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 12:16:40 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 12:16:40 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 12:16:40 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 12:16:40 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 12:16:40 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@766b6d02]
2025-04-22 12:16:40 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 12:16:40 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 12:16:40 DEBUG Table - No alter strings for table : bookings
2025-04-22 12:16:40 DEBUG Table - No alter strings for table : guests
2025-04-22 12:16:40 DEBUG Table - No alter strings for table : invoices
2025-04-22 12:16:40 DEBUG Table - No alter strings for table : rooms
2025-04-22 12:16:40 DEBUG Table - No alter strings for table : users
2025-04-22 12:16:40 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56e5c8fb
2025-04-22 12:16:40 DEBUG SessionFactoryRegistry - Registering SessionFactory: feef4b04-8357-4de3-b581-89b0fa701a13 (my-persistence-unit)
2025-04-22 12:16:40 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 12:16:40 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 12:16:40 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 12:16:40 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 12:16:41 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 12:16:41 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:16:41 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:16:41 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:16:41 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 12:16:41 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 12:16:41 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 12:16:41 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:16:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:16:41 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@817902707 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:16:41 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:16:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:16:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 452471720
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:16:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:16:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6614ecca
2025-04-22 12:16:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:16:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:16:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:16:41 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@402702819 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:16:41 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:16:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:16:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1349733610
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:16:41 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:16:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:16:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e6280de
2025-04-22 12:16:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:16:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:16:41 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-22 12:16:41 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-22 12:16:43 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-22 12:16:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:16:49 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@7881234 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:16:49 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1559261930
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:16:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1edac3b4
2025-04-22 12:16:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:16:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:16:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:16:49 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1683227460 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:16:49 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 328708417
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:16:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@579dde54
2025-04-22 12:16:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:16:49 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-22 12:16:49 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-22 12:16:49 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:16:49 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:16:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:16:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f7c9755] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:16:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b1420f9] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:16:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4de93edd] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:16:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4de93edd] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@5b1420f9
2025-04-22 12:16:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:16:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:16:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-22 12:16:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-22 12:16:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-22 12:16:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:16:49 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1853364091 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1321433666)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@2039166717 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@419370272)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@907152011 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 12:16:49 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 595382884
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:16:49 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-22 12:16:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:16:49 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1119158442 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:16:49 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 998988608
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:16:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@71687d8f
2025-04-22 12:16:49 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-22 12:16:49 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-22 12:16:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:16:49 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@420967638 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:16:49 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1169197847
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:16:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6723e6b3
2025-04-22 12:16:49 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 12:16:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58f97013
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 2104539672
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:16:49 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:16:49 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-22 12:16:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58f97013
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 425508702
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:16:49 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:16:49 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:16:49 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:16:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 12:16:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58f97013
2025-04-22 12:16:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:16:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:17:28 WARN  HomeMenuUI - Invalid email format entered: shubhamlanke@gmail,.com
2025-04-22 12:17:46 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 12:17:46 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 12:17:46 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 12:17:46 DEBUG HikariConfig - autoCommit......................true
2025-04-22 12:17:46 DEBUG HikariConfig - catalog.........................none
2025-04-22 12:17:46 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 12:17:46 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 12:17:46 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 12:17:46 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-22 12:17:46 DEBUG HikariConfig - dataSource......................none
2025-04-22 12:17:46 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 12:17:46 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 12:17:46 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 12:17:46 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 12:17:46 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 12:17:46 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 12:17:46 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 12:17:46 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 12:17:46 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 12:17:46 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 12:17:46 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 12:17:46 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 12:17:46 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 12:17:46 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 12:17:46 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 12:17:46 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 12:17:46 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 12:17:46 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 12:17:46 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 12:17:46 DEBUG HikariConfig - password........................<masked>
2025-04-22 12:17:46 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 12:17:46 DEBUG HikariConfig - readOnly........................false
2025-04-22 12:17:46 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 12:17:46 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 12:17:46 DEBUG HikariConfig - schema..........................none
2025-04-22 12:17:46 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 12:17:46 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 12:17:46 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 12:17:46 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 12:17:46 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 12:17:46 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a3d1e2a1-e251-4a47-89d6-488b3a705971)
2025-04-22 12:17:46 DEBUG PoolBase - HikariPool-1 - Established new connection (a3d1e2a1-e251-4a47-89d6-488b3a705971)
2025-04-22 12:17:46 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c1156a7
2025-04-22 12:17:46 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 12:17:46 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 12:17:46 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 12:17:46 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 12:17:46 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 12:17:47 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 12:17:47 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 12:17:47 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9a06981e-cbe7-4ae6-8de2-dfa48fe423fe)
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:17:47 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Established new connection (9a06981e-cbe7-4ae6-8de2-dfa48fe423fe)
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39296524
2025-04-22 12:17:47 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 12:17:47 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (be063935-9208-4615-8a4c-f1a60e67a530)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Established new connection (be063935-9208-4615-8a4c-f1a60e67a530)
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@33d10e54
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (28c21ff0-de11-49cc-8d21-7239faab1cfb)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70d2e40b
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Established new connection (28c21ff0-de11-49cc-8d21-7239faab1cfb)
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76d3964a
2025-04-22 12:17:47 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@344344fa] into BootstrapContext; was [null]
2025-04-22 12:17:47 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2db2cd5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa]
2025-04-22 12:17:47 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 12:17:47 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (95a676ac-705e-491d-96c3-f4410220cdba)
2025-04-22 12:17:47 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Established new connection (95a676ac-705e-491d-96c3-f4410220cdba)
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a1cdf1
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3d25c617-4e0f-478c-a6e1-c88fe8efc417)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Established new connection (3d25c617-4e0f-478c-a6e1-c88fe8efc417)
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@476fc400
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bd0d6e8c-7cfb-4fa5-a5bf-3bee99fb7999)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Established new connection (bd0d6e8c-7cfb-4fa5-a5bf-3bee99fb7999)
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7cf7c117
2025-04-22 12:17:47 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 12:17:47 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 12:17:47 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e5af6ce7-10c9-4f7d-9556-11428b0b9360)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Established new connection (e5af6ce7-10c9-4f7d-9556-11428b0b9360)
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16fc6905
2025-04-22 12:17:47 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 12:17:47 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 12:17:47 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4ff28b65-d4c4-4429-a813-16baf4dad746)
2025-04-22 12:17:47 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f0cb5a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1b29d52b)
2025-04-22 12:17:47 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47547132) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@655523dd)
2025-04-22 12:17:47 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 12:17:47 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@41200e0c`
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:17:47 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Established new connection (4ff28b65-d4c4-4429-a813-16baf4dad746)
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1cb8e06e
2025-04-22 12:17:47 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 12:17:47 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21f8e55f]
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (44ffe462-b33b-43f1-9c39-d2a731a9366c)
2025-04-22 12:17:47 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 12:17:47 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 12:17:47 DEBUG PoolBase - HikariPool-1 - Established new connection (44ffe462-b33b-43f1-9c39-d2a731a9366c)
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25ce783d
2025-04-22 12:17:47 DEBUG EntityBinder - Import with entity name User
2025-04-22 12:17:47 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:17:47 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property userID
2025-04-22 12:17:47 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property email
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property isActive
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property name
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property password
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property userRole
2025-04-22 12:17:47 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 12:17:47 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 12:17:47 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property guestId
2025-04-22 12:17:47 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property age
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property name
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property user
2025-04-22 12:17:47 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 12:17:47 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 12:17:47 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property bookingId
2025-04-22 12:17:47 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property checkIn
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property checkOut
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property room
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property status
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property user
2025-04-22 12:17:47 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 12:17:47 DEBUG EntityBinder - Import with entity name Room
2025-04-22 12:17:47 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property roomID
2025-04-22 12:17:47 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property price
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property roomType
2025-04-22 12:17:47 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 12:17:47 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 12:17:47 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 12:17:47 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property amount
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property booking
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property issueDate
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 12:17:47 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 12:17:47 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 12:17:47 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 12:17:47 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:17:47 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:17:47 DEBUG PropertyBinder - Building property user
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 12:17:47 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 12:17:47 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 12:17:47 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 12:17:47 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 12:17:47 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 12:17:47 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 12:17:48 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:17:48 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:17:48 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1e0fdb2f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 12:17:48 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@21263314] under count; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5b88b8e] under every; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@58253c57] under any; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133] under sinh; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@430b2699] under cosh; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67536ae0] under tanh; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6413d7e7] under pi; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d16be4f] under log; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7112ce6] under position; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f3560d4] under overlay; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6088451e] under trim; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1163a27] under cast; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549] under collate; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@b0fd744] under extract; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@726934e2] under ifnull; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@798dad3d] under pad; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7d986d83] under str; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@78422efb] under format; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@d48e998] under timestampadd; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7885776b] under timestampdiff; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a3ed300] under current_date; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1984212d] under current_time; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39f5b723] under current_timestamp; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4eaa375c] under local_date; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2404b5a] under local_time; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3af58f76] under local_datetime; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2ead6ba4] under offset_datetime; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31a2a9fa] under instant; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@46dcbeab] under sql; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d16be4f
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36e43829] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67536ae0
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@430b2699
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6413d7e7
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6af90849] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2404b5a
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3af58f76
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4a44cfc0] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60e3c26e] under bit_length; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@80b122b] under octet_length; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7112ce6
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65cf4d6d] under bitand; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b410308] under bitor; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under bitxor; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f9cab00] under bitnot; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10272bbb] under median; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under insert; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@32eae6f2] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f3560d4
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@26ca61bf] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6870c3c2] under listagg; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5d94a2dc] under array; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@cedee22] under array_list; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@40c2ce52] under array_agg; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2b6a0ea9] under array_position; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@659f226a] under array_positions; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1e79d43] under array_positions_list; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@343e225a] under array_length; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@25a7fedf] under array_concat; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@65f40689] under array_prepend; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@29be997f] under array_append; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@46e190ed] under array_contains; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@383c3eb3] under array_contains_nullable; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@54c622a7] under array_overlaps; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@37348491] under array_overlaps_nullable; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66813e6e] under array_get; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@640cc04b] under array_set; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@6723610b] under array_remove_index; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ba03c82] under array_slice; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60df7989] under array_trim; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2d74c81b] under array_fill; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@10b687f2] under array_fill_list; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@991cbde] under array_to_string; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@568750b7] under mode; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3e28fee1] under percentile_cont; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16a2ed51] under percentile_disc; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2fb25f4c] under rank; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@de81be1] under dense_rank; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@342e690b] under percent_rank; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4519f676] under cume_dist; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@781711b7] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@642a16aa] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642ee49c] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4e224df5] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4116f66a] under trunc; prior registration was null
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 12:17:48 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59c04bee] under date_trunc; prior registration was null
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 12:17:48 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 12:17:48 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 12:17:48 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:17:48 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 12:17:48 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:17:48 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:17:48 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 12:17:48 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:17:48 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:17:48 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:17:48 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:17:48 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:17:48 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 12:17:48 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:17:48 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:17:48 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:17:48 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:17:48 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:17:48 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 12:17:49 DEBUG creation - Starting post-init callbacks
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 12:17:49 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 12:17:49 DEBUG create - Created new SQL alias : g1_0
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16d41725] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 12:17:49 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:17:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 12:17:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:17:49 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 12:17:49 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@684372d0] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:17:49 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6060146b] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:17:49 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:17:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 12:17:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:17:49 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 12:17:49 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:17:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 12:17:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:17:49 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 12:17:49 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:17:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 12:17:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:17:49 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 12:17:49 DEBUG create - Created new SQL alias : i1_0
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d2d8846] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b409a79] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 12:17:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 12:17:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 12:17:49 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 12:17:49 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 12:17:49 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 12:17:49 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 12:17:49 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 12:17:49 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 12:17:49 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@19bfbe28]
2025-04-22 12:17:49 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 12:17:49 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 12:17:49 DEBUG Table - No alter strings for table : bookings
2025-04-22 12:17:49 DEBUG Table - No alter strings for table : guests
2025-04-22 12:17:49 DEBUG Table - No alter strings for table : invoices
2025-04-22 12:17:49 DEBUG Table - No alter strings for table : rooms
2025-04-22 12:17:49 DEBUG Table - No alter strings for table : users
2025-04-22 12:17:49 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7185e611
2025-04-22 12:17:49 DEBUG SessionFactoryRegistry - Registering SessionFactory: 30ef4d71-e75b-4ea5-b1d1-112523d2c7e1 (my-persistence-unit)
2025-04-22 12:17:49 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 12:17:49 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 12:17:49 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 12:17:49 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 12:17:49 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 12:17:49 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:17:49 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:17:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:17:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 12:17:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 12:17:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 12:17:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:17:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:17:49 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@613764738 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:17:50 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:17:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:17:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1276530561
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:17:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:17:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@774304ca
2025-04-22 12:17:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:17:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:17:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:17:50 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2013611768 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:17:50 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:17:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:17:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 287096026
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:17:50 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:17:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:17:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@437c1a87
2025-04-22 12:17:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:17:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:17:50 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-22 12:17:50 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-22 12:17:52 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-22 12:18:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:18:00 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@402702819 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:18:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:18:00 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:18:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:18:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1349733610
2025-04-22 12:18:00 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:18:00 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:18:00 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:18:00 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:18:00 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:18:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:18:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e6280de
2025-04-22 12:18:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:18:01 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@683448137 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:18:01 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 314374086
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:18:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e763c07
2025-04-22 12:18:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:01 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-22 12:18:01 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-22 12:18:01 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:18:01 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:18:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:18:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57ed02e6] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:18:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@552ffa44] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:18:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54d35ed5] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:18:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54d35ed5] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@552ffa44
2025-04-22 12:18:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:18:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:18:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-22 12:18:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-22 12:18:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-22 12:18:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:18:01 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@757150717 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1487381901)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1300570879 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@479819176)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@948110109 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 12:18:01 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1853364091
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:18:01 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-22 12:18:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:18:01 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@419370272 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:18:01 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1128958264
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:18:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e1ad7de
2025-04-22 12:18:01 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-22 12:18:01 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-22 12:18:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:18:01 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@501668992 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:18:01 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1929760689
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:18:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@582c1f8d
2025-04-22 12:18:01 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 12:18:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21ffc00e
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 323573179
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:18:01 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:18:01 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-22 12:18:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21ffc00e
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 1639893967
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:18:01 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:18:01 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:18:01 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:18:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 12:18:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21ffc00e
2025-04-22 12:18:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:17 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:18:17 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:18:23 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-22 12:18:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:18:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2104539672 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:18:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1627679004
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:18:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@195cbf5e
2025-04-22 12:18:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:18:28 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1287138057 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:18:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2008185687
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:18:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7adff6cb
2025-04-22 12:18:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:18:28 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@20888781 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1487381901)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1317049866 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@479819176)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@705438798 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 12:18:28 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 288756266
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:18:28 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-22 12:18:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:18:28 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1515420182 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:18:28 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1864548849
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:18:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ee095c9
2025-04-22 12:18:28 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-22 12:18:28 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-22 12:18:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:18:28 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@408553489 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:18:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 617347220
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:18:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c19769c
2025-04-22 12:18:28 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 12:18:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434d001d
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 910505843
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:18:28 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:18:28 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-22 12:18:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434d001d
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 1303471735
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:18:28 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:18:28 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:18:28 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:18:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 12:18:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434d001d
2025-04-22 12:18:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:18:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:18:47 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:19:17 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:19:17 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:19:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@476fc400 is alive
2025-04-22 12:19:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16fc6905 is alive
2025-04-22 12:19:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39296524 is alive
2025-04-22 12:19:29 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-22 12:19:29 INFO  StaffMenuUI - Booking room for a user.
2025-04-22 12:19:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7cf7c117 is alive
2025-04-22 12:19:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb8e06e is alive
2025-04-22 12:19:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25ce783d is alive
2025-04-22 12:19:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76d3964a is alive
2025-04-22 12:19:34 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:19:34 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@418964192 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:19:34 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:19:34 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:19:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:19:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1658724563
2025-04-22 12:19:34 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:19:34 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:19:34 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:19:34 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:19:34 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:19:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:19:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6109d880
2025-04-22 12:19:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:19:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:19:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33d10e54 is alive
2025-04-22 12:19:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-22 12:19:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4a1cdf1 is alive
2025-04-22 12:19:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:19:47 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:20:17 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:20:17 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:20:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:20:47 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:21:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@476fc400 is alive
2025-04-22 12:21:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16fc6905 is alive
2025-04-22 12:21:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39296524 is alive
2025-04-22 12:21:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7cf7c117 is alive
2025-04-22 12:21:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb8e06e is alive
2025-04-22 12:21:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25ce783d is alive
2025-04-22 12:21:17 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:21:17 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:21:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76d3964a is alive
2025-04-22 12:21:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33d10e54 is alive
2025-04-22 12:21:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-22 12:21:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4a1cdf1 is alive
2025-04-22 12:21:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:21:47 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:22:17 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:22:17 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:22:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@476fc400 is alive
2025-04-22 12:22:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:22:47 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:22:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16fc6905 is alive
2025-04-22 12:22:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39296524 is alive
2025-04-22 12:22:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7cf7c117 is alive
2025-04-22 12:22:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb8e06e is alive
2025-04-22 12:23:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25ce783d is alive
2025-04-22 12:23:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76d3964a is alive
2025-04-22 12:23:17 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:23:17 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:23:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33d10e54 is alive
2025-04-22 12:23:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-22 12:23:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4a1cdf1 is alive
2025-04-22 12:23:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:23:47 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:24:17 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:24:17 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:24:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@476fc400 is alive
2025-04-22 12:24:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16fc6905 is alive
2025-04-22 12:24:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39296524 is alive
2025-04-22 12:24:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7cf7c117 is alive
2025-04-22 12:24:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cb8e06e is alive
2025-04-22 12:24:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25ce783d is alive
2025-04-22 12:24:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:24:47 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:24:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76d3964a is alive
2025-04-22 12:25:19 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 12:25:19 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 12:25:19 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 12:25:19 DEBUG HikariConfig - autoCommit......................true
2025-04-22 12:25:19 DEBUG HikariConfig - catalog.........................none
2025-04-22 12:25:19 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 12:25:19 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 12:25:19 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 12:25:19 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-22 12:25:19 DEBUG HikariConfig - dataSource......................none
2025-04-22 12:25:19 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 12:25:19 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 12:25:19 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 12:25:19 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 12:25:19 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 12:25:19 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 12:25:19 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 12:25:19 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 12:25:19 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 12:25:19 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 12:25:19 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 12:25:19 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 12:25:19 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 12:25:19 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 12:25:19 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 12:25:19 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 12:25:19 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 12:25:19 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 12:25:19 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 12:25:19 DEBUG HikariConfig - password........................<masked>
2025-04-22 12:25:19 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 12:25:19 DEBUG HikariConfig - readOnly........................false
2025-04-22 12:25:19 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 12:25:19 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 12:25:19 DEBUG HikariConfig - schema..........................none
2025-04-22 12:25:19 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 12:25:19 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 12:25:19 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 12:25:19 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 12:25:19 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7d00421b-775d-424d-9395-7d1b10a7c0e1)
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (7d00421b-775d-424d-9395-7d1b10a7c0e1)
2025-04-22 12:25:19 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1941a8ff
2025-04-22 12:25:19 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 12:25:19 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 12:25:19 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 12:25:19 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 12:25:19 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 12:25:19 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 12:25:19 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7eb49636-6780-4127-87a7-65125c47dd4b)
2025-04-22 12:25:19 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (7eb49636-6780-4127-87a7-65125c47dd4b)
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a8a1147
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:25:19 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 12:25:19 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 12:25:19 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0538e590-f65d-4141-9353-b424fc0ed3bf)
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (0538e590-f65d-4141-9353-b424fc0ed3bf)
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@727a37
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d945ad94-44b1-41dc-afd6-a432275ee9ce)
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24be2d9c
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5bd73d1a
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@aec50a1
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2555fff0
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@70d2e40b
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-22 12:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-22 12:25:19 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@499b2a5c] into BootstrapContext; was [null]
2025-04-22 12:25:19 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@596df867] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@c1fca1e]
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (d945ad94-44b1-41dc-afd6-a432275ee9ce)
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4570f45d
2025-04-22 12:25:19 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 12:25:19 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9b5a951b-dd4c-4d2c-bff7-f53931a33b7a)
2025-04-22 12:25:19 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (9b5a951b-dd4c-4d2c-bff7-f53931a33b7a)
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1faad59d
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a304958d-5ac9-4a69-9bc6-0ab53ebbd591)
2025-04-22 12:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (a304958d-5ac9-4a69-9bc6-0ab53ebbd591)
2025-04-22 12:25:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@747fb6c0
2025-04-22 12:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 12:25:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1cf2d43f-5202-4438-b7db-f187e834f232)
2025-04-22 12:25:20 DEBUG PoolBase - HikariPool-1 - Established new connection (1cf2d43f-5202-4438-b7db-f187e834f232)
2025-04-22 12:25:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@674fc9ba
2025-04-22 12:25:20 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 12:25:20 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 12:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 12:25:20 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 12:25:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8cd68dfc-d058-4ee3-a5a4-1fe07de6d300)
2025-04-22 12:25:20 DEBUG PoolBase - HikariPool-1 - Established new connection (8cd68dfc-d058-4ee3-a5a4-1fe07de6d300)
2025-04-22 12:25:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@255f0b12
2025-04-22 12:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 12:25:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (63d28556-ea01-4d12-868f-b7384b3a5d81)
2025-04-22 12:25:20 DEBUG PoolBase - HikariPool-1 - Established new connection (63d28556-ea01-4d12-868f-b7384b3a5d81)
2025-04-22 12:25:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6c902419
2025-04-22 12:25:20 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 12:25:20 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 12:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-22 12:25:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a32c1a55-1a0f-4a45-b0bd-1dd3888c4b33)
2025-04-22 12:25:20 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 12:25:20 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3047254d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6cf31447)
2025-04-22 12:25:20 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e92466a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e8997c)
2025-04-22 12:25:20 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 12:25:20 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 12:25:20 DEBUG PoolBase - HikariPool-1 - Established new connection (a32c1a55-1a0f-4a45-b0bd-1dd3888c4b33)
2025-04-22 12:25:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@655056fd
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2970a5bc`
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:25:20 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:25:20 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 12:25:20 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@474fae39]
2025-04-22 12:25:20 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 12:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 12:25:20 DEBUG EntityBinder - Import with entity name User
2025-04-22 12:25:20 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property userID
2025-04-22 12:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property email
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property isActive
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property name
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property password
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property userRole
2025-04-22 12:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 12:25:20 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 12:25:20 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property guestId
2025-04-22 12:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property age
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property name
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property user
2025-04-22 12:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 12:25:20 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 12:25:20 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property bookingId
2025-04-22 12:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property checkIn
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property checkOut
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property room
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property status
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property user
2025-04-22 12:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 12:25:20 DEBUG EntityBinder - Import with entity name Room
2025-04-22 12:25:20 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property roomID
2025-04-22 12:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property price
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property roomType
2025-04-22 12:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 12:25:20 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 12:25:20 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 12:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property amount
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property booking
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property issueDate
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 12:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 12:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 12:25:20 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 12:25:20 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:25:20 DEBUG PropertyBinder - Building property user
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 12:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 12:25:20 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 12:25:20 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 12:25:20 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 12:25:20 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 12:25:20 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 12:25:20 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:25:20 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:25:20 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77dba4cd, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 12:25:20 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4d84049a] under count; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4cb702ce] under every; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@383caf89] under any; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b74ea] under sinh; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14924f41] under cosh; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@493da830] under tanh; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f939a0f] under pi; prior registration was null
2025-04-22 12:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133] under log; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1665fa54] under position; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2262d6d5] under overlay; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@f3560d4] under trim; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1642eeae] under cast; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd] under collate; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@322ba549] under extract; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@b0fd744] under ifnull; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@726934e2] under pad; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@798dad3d] under str; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4bdf] under format; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@78422efb] under timestampadd; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@50eb4a2c] under timestampdiff; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7885776b] under current_date; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@497d4c96] under current_time; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3472947a] under current_timestamp; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69d3cf7e] under local_date; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a3ed300] under local_time; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1984212d] under local_datetime; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39f5b723] under offset_datetime; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4eaa375c] under instant; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@31a2a9fa] under sql; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31b82e0f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@493da830
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18b74ea
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14924f41
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f939a0f
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@36e43829] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3a3ed300
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1984212d
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6af90849] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1d06f16f] under bit_length; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4fa4f485] under octet_length; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68dd39d2] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1665fa54
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a44cfc0] under bitand; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e3c26e] under bitor; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80b122b] under bitxor; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under bitnot; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65cf4d6d] under median; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under insert; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@16736040] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2262d6d5
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7c5d1d25] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6a1d526c] under listagg; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@e95595b] under array; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5a917723] under array_list; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@cedee22] under array_agg; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1860f3be] under array_position; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@12c0c0b3] under array_positions; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6025d790] under array_positions_list; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@af7e376] under array_length; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@889a8a8] under array_concat; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ed2f2f6] under array_prepend; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@fe87ddd] under array_append; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@1da4b3f9] under array_contains; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@23cbbd07] under array_contains_nullable; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@da28d03] under array_overlaps; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ebda593] under array_overlaps_nullable; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37348491] under array_get; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@dab1f89] under array_set; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@640cc04b] under array_remove_index; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@630bf683] under array_slice; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22d322f5] under array_trim; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@388d14e] under array_fill; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@1cd43562] under array_fill_list; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@10b687f2] under array_to_string; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@456bcb74] under mode; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a9c5b75] under percentile_cont; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@dd4aec3] under percentile_disc; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16a2ed51] under rank; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b332962] under dense_rank; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@57ddd45b] under percent_rank; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2e7bf7b7] under cume_dist; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4519f676] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@78ec89a6] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3596b249] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80b122b
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@642ee49c] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4ed5a1b0] under trunc; prior registration was null
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 12:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d003cd] under date_trunc; prior registration was null
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 12:25:21 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 12:25:21 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 12:25:21 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:25:21 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 12:25:21 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:25:21 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 12:25:21 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 12:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 12:25:21 DEBUG creation - Starting post-init callbacks
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 12:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 12:25:21 DEBUG create - Created new SQL alias : g1_0
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65036e8d] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 12:25:21 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 12:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 12:25:21 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@19d53ab4] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:25:21 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@652e345] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:25:21 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 12:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 12:25:21 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 12:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 12:25:21 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 12:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 12:25:21 DEBUG create - Created new SQL alias : i1_0
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27bc1d44] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 12:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61911947] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 12:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 12:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 12:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 12:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 12:25:21 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 12:25:21 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 12:25:21 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 12:25:21 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 12:25:21 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@50dc49e1]
2025-04-22 12:25:21 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 12:25:21 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 12:25:21 DEBUG Table - No alter strings for table : bookings
2025-04-22 12:25:21 DEBUG Table - No alter strings for table : guests
2025-04-22 12:25:21 DEBUG Table - No alter strings for table : invoices
2025-04-22 12:25:21 DEBUG Table - No alter strings for table : rooms
2025-04-22 12:25:21 DEBUG Table - No alter strings for table : users
2025-04-22 12:25:21 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c9e8a67
2025-04-22 12:25:21 DEBUG SessionFactoryRegistry - Registering SessionFactory: 14cc2c03-e41e-4eca-854d-66e965ff8f24 (my-persistence-unit)
2025-04-22 12:25:21 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 12:25:21 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 12:25:21 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 12:25:21 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 12:25:22 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 12:25:22 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:25:22 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:25:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:25:22 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 12:25:22 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 12:25:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 12:25:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:25:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:25:22 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@841660110 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:25:22 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:25:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:22 ERROR UserDaoImpl - Error fetching user by email shubamlanke@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.authenticateUser(UserServiceImpl.java:59) [classes/:?]
	at org.example.controller.UserController.authenticateUser(UserController.java:41) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:74) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-22 12:25:22 WARN  HomeMenuUI - Invalid login attempt for email: shubamlanke@gmail.com
2025-04-22 12:25:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:25:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1493257982 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:25:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:25:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:25:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 2000880842
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:25:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:25:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5909285b
2025-04-22 12:25:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:25:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@415928951 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:25:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:25:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-22 12:25:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1120735174
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:25:43 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:25:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-22 12:25:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e5864c2
2025-04-22 12:25:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:43 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-22 12:25:43 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-22 12:25:48 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-22 12:25:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:25:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:25:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:25:53 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1765223454 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:25:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 574000604
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:25:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72b10258
2025-04-22 12:25:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:25:53 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1098645181 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:25:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 158744161
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:25:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17e6b7e4
2025-04-22 12:25:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:53 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-22 12:25:53 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-22 12:25:53 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:25:53 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:25:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:25:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77cf329d] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:25:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47d81427] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:25:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@20afd96f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:25:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@20afd96f] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@47d81427
2025-04-22 12:25:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:25:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:25:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-22 12:25:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-22 12:25:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-22 12:25:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:25:53 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@501668992 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1099766787)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@961648587 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1929760689)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1479286669 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 12:25:53 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 420967638
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:25:53 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-22 12:25:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:25:53 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1169197847 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:25:53 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1639893967
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:25:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49665f92
2025-04-22 12:25:53 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-22 12:25:53 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-22 12:25:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:25:53 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@2008185687 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:25:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1317049866
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:25:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a0c244e
2025-04-22 12:25:53 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 12:25:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a537a16
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 1915257984
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:25:53 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:25:53 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-22 12:25:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a537a16
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 408553489
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:25:53 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:25:53 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:25:53 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-22 12:25:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 12:25:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a537a16
2025-04-22 12:25:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:25:59 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-22 12:26:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:26:03 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@617347220 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:26:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1303471735
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:26:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6abb44cb
2025-04-22 12:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:03 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-22 12:26:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:26:03 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1105063017 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:26:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 685072424
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:26:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c56fff
2025-04-22 12:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:03 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user AND b.status = :status
2025-04-22 12:26:03 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-22 12:26:03 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(status)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).status)
2025-04-22 12:26:03 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [entity-path] - `org.example.entity.Booking(b).user`
                :user
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Booking(b).status`
                :status
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:26:03 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33f2cf82] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@bea283b] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73852720] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73852720] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@bea283b
2025-04-22 12:26:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:26:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-22 12:26:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-22 12:26:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(status)
2025-04-22 12:26:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-22 12:26:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-22 12:26:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-22 12:26:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:26:03 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1882240844 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1099766787)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@668345982 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1929760689)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1361952992 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 12:26:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1668613848
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:26:03 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-22 12:26:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:26:03 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1549856918 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:26:03 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 418646126
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:26:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43cbafa6
2025-04-22 12:26:03 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-22 12:26:03 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-22 12:26:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:26:03 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1401898481 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:26:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1121686878
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-22 12:26:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bd2f039
2025-04-22 12:26:03 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 12:26:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c8ad6d7
2025-04-22 12:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:26:03 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1662417126 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@323287038 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1929760689)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1691696909 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1099766787)

2025-04-22 12:26:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 72
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 12:26:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 12:26:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 12:26:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 2136906057
2025-04-22 12:26:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 842984696
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#72] : 771935287
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 12:26:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 12:26:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#72
2025-04-22 12:26:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e355249
2025-04-22 12:26:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:03 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-22 12:26:03 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-22 12:26:03 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:26:03 DEBUG create - Created new SQL alias : i1_0
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5c0ece6d] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69419d59] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7affee54] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 12:26:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7affee54] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@5c0ece6d
2025-04-22 12:26:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-22 12:26:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-22 12:26:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-22 12:26:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-22 12:26:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-22 12:26:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:26:03 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@137945353 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@122110358)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@300836639 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@404787971 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1474234791)

2025-04-22 12:26:03 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [0] - [44]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 44
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#44] : 1659772041
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [2] - [72]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [3] - [2025-04-22T12:10:28.326355]
2025-04-22 12:26:03 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-22 12:26:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#44
2025-04-22 12:26:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5296f00c
2025-04-22 12:26:03 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:26:03 DEBUG TransactionImpl - begin
2025-04-22 12:26:04 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:26:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:26:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75c8d8e7] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:26:04 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:26:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c68e82] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:26:04 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:26:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 12:26:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:26:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:26:04 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@118566821 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@875413568 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1929760689)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@61401817 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1099766787)

2025-04-22 12:26:04 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 72
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 12:26:04 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 12:26:04 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 12:26:04 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 1441062248
2025-04-22 12:26:04 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 684195229
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#72] : 1784938289
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 12:26:04 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 12:26:04 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#72
2025-04-22 12:26:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c4aa701
2025-04-22 12:26:04 DEBUG TransactionImpl - committing
2025-04-22 12:26:04 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:26:04 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:26:04 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-22 12:26:04 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:26:04 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:26:04 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-22 12:26:04 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-22T12:10, checkOut=2025-04-23T10:00, user=org.example.entity.User#13, bookingId=72, room=org.example.entity.Room#1, status=COMPLETED}
2025-04-22 12:26:04 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 12:26:04 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 12:26:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:04 INFO  BookingServiceImpl - Booking updated successfully with ID: 72
2025-04-22 12:26:04 INFO  StaffMenuUI - Booking ID: 72 status updated to COMPLETED
2025-04-22 12:26:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:26:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@742806105 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:26:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2080162056
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:26:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65b680b4
2025-04-22 12:26:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:04 INFO  RoomServiceImpl - Fetched room with ID 1: Optional[Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}]
2025-04-22 12:26:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:26:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@559384732 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:26:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 691620198
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:26:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@343727b5
2025-04-22 12:26:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:04 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:26:04 DEBUG TransactionImpl - begin
2025-04-22 12:26:04 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:26:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:26:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 12:26:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:26:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:26:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@693421097 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:26:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1672843252
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:26:04 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:26:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:26:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3691d4da
2025-04-22 12:26:04 DEBUG TransactionImpl - committing
2025-04-22 12:26:04 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:26:04 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:26:04 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 12:26:04 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:26:04 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:26:04 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 12:26:04 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 12:26:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:04 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-22 12:26:04 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-22 12:26:04 INFO  StaffMenuUI - Room 101 is now available after checkout
2025-04-22 12:26:04 INFO  StaffMenuUI - Checkout completed successfully for user: SAURAV SHARMA
2025-04-22 12:26:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:26:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:26:41 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-22 12:26:41 INFO  StaffMenuUI - Booking room for a user.
2025-04-22 12:26:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:26:46 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@107095723 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:26:46 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:26:46 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:26:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:26:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 2047683712
2025-04-22 12:26:46 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:26:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:26:46 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:26:46 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:26:46 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:26:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:26:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d4d0a14
2025-04-22 12:26:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:26:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:26:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:26:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:27:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:27:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:27:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:27:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:27:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:27:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:27:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:27:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:27:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:27:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:27:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:27:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:27:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:27:52 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 12:27:52 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:27:52 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:27:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:27:52 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 12:27:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 12:27:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:27:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:27:52 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@794358930 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:27:52 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 917203417
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1598961818
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1000469870
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1453962850
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 2005408634
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1504475129
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1838342951
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1980973649
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1098372130
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 2078175306
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 19873741
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1841489011
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 317455149
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 448763162
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1653997783
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 403542410
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 12:27:52 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:27:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 12:27:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebfe7fa
2025-04-22 12:27:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:27:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:28:07 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-22 12:28:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:28:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:28:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:28:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:28:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:28:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:28:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:28:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:28:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:28:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:29:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:29:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:29:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:29:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:29:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:29:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:29:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:29:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:30:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:30:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:30:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:30:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:30:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:30:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:30:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:30:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:30:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:30:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:30:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:31:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:31:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:31:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:31:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:31:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:31:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:31:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:31:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:32:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:32:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:32:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:32:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:32:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:32:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:32:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:32:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:32:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:32:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:33:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:33:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:33:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:33:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:33:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:33:33 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-22 12:33:33 INFO  StaffMenuUI - Booking room for a user.
2025-04-22 12:33:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:33:37 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@308976247 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:33:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:33:37 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:33:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-22 12:33:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 590762306
2025-04-22 12:33:37 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-22 12:33:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 12:33:37 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-22 12:33:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 12:33:37 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-22 12:33:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-22 12:33:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6549ce71
2025-04-22 12:33:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:33:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:33:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:33:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:33:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:33:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:33:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:33:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:33:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:34:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:34:01 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1933301491 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:34:01 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 348102608
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 256719132
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1191924243
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 799151165
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1686667196
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 40583144
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 527269500
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 542212688
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 126053497
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1556911902
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 673619045
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 80336947
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 414551159
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 553229336
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1008789974
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1994565153
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 12:34:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 12:34:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 12:34:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e5ffa
2025-04-22 12:34:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:34:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:34:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:34:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:34:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:34:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:34:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:34:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:35:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:35:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:35:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:35:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:35:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:35:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:35:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:35:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:35:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:35:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:35:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:35:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:36:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:36:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:36:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:36:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:36:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:36:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:36:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:36:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:37:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:37:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:37:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:37:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:37:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:37:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:37:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:37:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:37:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:37:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:37:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:38:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:38:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:38:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:38:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:38:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:38:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:38:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:39:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:39:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:39:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:39:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:39:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:39:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:39:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:39:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:39:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:39:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:39:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:40:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:40:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:40:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:40:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:40:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:40:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:40:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:40:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:40:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:40:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:40:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:41:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:41:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:41:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:41:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:41:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:41:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:41:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:41:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:42:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:42:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:42:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:42:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:42:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:42:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:42:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:42:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:42:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:42:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:43:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:43:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:43:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:43:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:43:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:43:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:43:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:43:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:44:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:44:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:44:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:44:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:44:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:44:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:44:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:44:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:44:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:44:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:45:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:45:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:45:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:45:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:45:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:45:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:45:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:45:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:45:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:45:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:45:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:46:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:46:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:46:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:46:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:46:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:46:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:46:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:46:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:47:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:47:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:47:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:47:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:47:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:47:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:47:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:47:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:47:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c902419 is alive
2025-04-22 12:47:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:47:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:47:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:48:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:48:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:48:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:48:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:48:46 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6c902419: (connection has passed maxLifetime)
2025-04-22 12:48:46 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (712e82f9-dd9c-4b76-a64d-afce94558b22)
2025-04-22 12:48:46 DEBUG PoolBase - HikariPool-1 - Established new connection (712e82f9-dd9c-4b76-a64d-afce94558b22)
2025-04-22 12:48:46 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@620a1c86
2025-04-22 12:48:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:48:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:48:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:49:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:49:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:49:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:49:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:49:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:49:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:49:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@255f0b12 is alive
2025-04-22 12:49:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674fc9ba is alive
2025-04-22 12:49:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:49:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:50:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:50:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:50:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:50:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@620a1c86 is alive
2025-04-22 12:50:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:50:38 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 101 from 2025-04-22T12:50 to 2025-04-23T10:00
2025-04-22 12:50:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-22 12:50:40 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:50:40 DEBUG TransactionImpl - begin
2025-04-22 12:50:40 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 12:50:40 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 12:50:40 DEBUG results - Initializer list is empty
2025-04-22 12:50:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@38f63756
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-22 12:50:40 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@8bde368
2025-04-22 12:50:40 DEBUG TransactionImpl - committing
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:50:40 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:50:40 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-22T12:50, checkOut=2025-04-23T10:00, user=org.example.entity.User#13, bookingId=73, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-22 12:50:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:50:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:50:40 INFO  BookingServiceImpl - Booking created successfully with ID: 73
2025-04-22 12:50:40 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:50:40 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@103159230 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:50:40 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:50:40 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:50:40 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1251996697
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:50:40 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:50:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ca29311
2025-04-22 12:50:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:50:40 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:50:40 DEBUG TransactionImpl - begin
2025-04-22 12:50:40 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 12:50:40 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1687418752 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 12:50:40 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 12:50:40 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-22 12:50:40 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1562384731
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 12:50:40 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-22 12:50:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2674ca88
2025-04-22 12:50:40 DEBUG TransactionImpl - committing
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:50:40 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:50:40 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-22 12:50:40 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 12:50:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:50:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:50:40 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-22 12:50:40 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-22 12:50:40 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:50:40 DEBUG TransactionImpl - begin
2025-04-22 12:50:40 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 12:50:40 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 12:50:40 DEBUG results - Initializer list is empty
2025-04-22 12:50:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@67a3394c
2025-04-22 12:50:40 DEBUG results - Extracted JDBC value [0] - [45]
2025-04-22 12:50:40 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@34e4fb39
2025-04-22 12:50:40 DEBUG TransactionImpl - committing
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 12:50:40 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:50:40 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:50:40 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=org.example.entity.Booking#73, invoiceId=45, issueDate=2025-04-22T12:50:40.800159800, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-22 12:50:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:50:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:50:40 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-22 12:50:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:50:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:50:54 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@674fc9ba: (connection has passed maxLifetime)
2025-04-22 12:50:54 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c4d36f91-98a8-48ae-bfa5-2ed8c3f95a37)
2025-04-22 12:50:54 DEBUG PoolBase - HikariPool-1 - Established new connection (c4d36f91-98a8-48ae-bfa5-2ed8c3f95a37)
2025-04-22 12:50:54 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2dd762c5
2025-04-22 12:50:56 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@255f0b12: (connection has passed maxLifetime)
2025-04-22 12:50:56 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7d3a2fe8-902c-4499-94bc-c261c25a48a3)
2025-04-22 12:50:56 DEBUG PoolBase - HikariPool-1 - Established new connection (7d3a2fe8-902c-4499-94bc-c261c25a48a3)
2025-04-22 12:50:56 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2310990f
2025-04-22 12:51:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:51:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4570f45d is alive
2025-04-22 12:51:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1faad59d is alive
2025-04-22 12:51:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:51:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:51:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:51:40 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1941a8ff: (connection has passed maxLifetime)
2025-04-22 12:51:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d6eb1da1-23b4-487f-9742-8dfa2a611487)
2025-04-22 12:51:40 DEBUG PoolBase - HikariPool-1 - Established new connection (d6eb1da1-23b4-487f-9742-8dfa2a611487)
2025-04-22 12:51:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@763a5441
2025-04-22 12:51:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:51:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:51:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:52:01 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@4570f45d: (connection has passed maxLifetime)
2025-04-22 12:52:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0770a80f-bd89-48f9-90ae-190f5e04e291)
2025-04-22 12:52:01 DEBUG PoolBase - HikariPool-1 - Established new connection (0770a80f-bd89-48f9-90ae-190f5e04e291)
2025-04-22 12:52:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4b0b248
2025-04-22 12:52:09 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1faad59d: (connection has passed maxLifetime)
2025-04-22 12:52:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d2fc2216-8f2b-41da-8ee6-efcc9fb0c6fc)
2025-04-22 12:52:09 DEBUG PoolBase - HikariPool-1 - Established new connection (d2fc2216-8f2b-41da-8ee6-efcc9fb0c6fc)
2025-04-22 12:52:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17fb6920
2025-04-22 12:52:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@620a1c86 is alive
2025-04-22 12:52:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:52:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:52:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:52:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2310990f is alive
2025-04-22 12:52:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd762c5 is alive
2025-04-22 12:52:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:52:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:52:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@727a37 is alive
2025-04-22 12:53:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@655056fd is alive
2025-04-22 12:53:11 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@655056fd: (connection has passed maxLifetime)
2025-04-22 12:53:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (70bf55fb-8096-48eb-86d1-f119bbd712be)
2025-04-22 12:53:11 DEBUG PoolBase - HikariPool-1 - Established new connection (70bf55fb-8096-48eb-86d1-f119bbd712be)
2025-04-22 12:53:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7312e54
2025-04-22 12:53:15 INFO  StaffMenuUI - User SHUBHAM LANKE is logging out
2025-04-22 12:53:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:53:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:53:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@763a5441 is alive
2025-04-22 12:53:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@747fb6c0 is alive
2025-04-22 12:53:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b0b248 is alive
2025-04-22 12:53:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:53:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:53:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@620a1c86 is alive
2025-04-22 12:54:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17fb6920 is alive
2025-04-22 12:54:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2310990f is alive
2025-04-22 12:54:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:54:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:54:21 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@747fb6c0: (connection has passed maxLifetime)
2025-04-22 12:54:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (40f6a4f8-ce3f-4d4e-9215-85d2379d0e51)
2025-04-22 12:54:21 DEBUG PoolBase - HikariPool-1 - Established new connection (40f6a4f8-ce3f-4d4e-9215-85d2379d0e51)
2025-04-22 12:54:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e294790
2025-04-22 12:54:23 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@727a37: (connection has passed maxLifetime)
2025-04-22 12:54:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2cf42c29-e3df-482a-ade1-e4ebbc9d1dca)
2025-04-22 12:54:23 DEBUG PoolBase - HikariPool-1 - Established new connection (2cf42c29-e3df-482a-ade1-e4ebbc9d1dca)
2025-04-22 12:54:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5a16d88d
2025-04-22 12:54:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd762c5 is alive
2025-04-22 12:54:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@a8a1147 is alive
2025-04-22 12:54:28 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-22 12:54:28 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-22 12:54:28 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 12:54:28 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:54:28 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:54:28 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:54:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 12:54:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 12:54:28 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-22 12:54:28 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:54:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:54:28 DEBUG results - Initializer list is empty
2025-04-22 12:54:28 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-22 12:54:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7b7b1448
2025-04-22 12:54:28 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-22 12:54:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:54:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:54:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:54:28 DEBUG results - Initializer list is empty
2025-04-22 12:54:28 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-22 12:54:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7b7b1448
2025-04-22 12:54:28 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-22 12:54:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:54:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:54:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:54:28 DEBUG TransactionImpl - begin
2025-04-22 12:54:28 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 12:54:28 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 12:54:28 DEBUG results - Initializer list is empty
2025-04-22 12:54:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@49741274
2025-04-22 12:54:28 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 12:54:28 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@4a49919c
2025-04-22 12:54:28 DEBUG TransactionImpl - committing
2025-04-22 12:54:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:54:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:54:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 12:54:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:54:28 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:54:28 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=ABRAR SHAHA, isActive=false, userRole=STAFF, userID=34, email=abrar@gmail.com}
2025-04-22 12:54:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:54:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:54:28 INFO  UserDaoImpl - User registered successfully: User{userID=34, name='ABRAR SHAHA', email='abrar@gmail.com', password='!Q1q', userRole=STAFF, isActive=false}
2025-04-22 12:54:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:54:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:55:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7312e54 is alive
2025-04-22 12:55:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b0b248 is alive
2025-04-22 12:55:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@a8a1147: (connection has passed maxLifetime)
2025-04-22 12:55:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2d09de91-e33c-4b47-9d4f-a0dfe52e7e6c)
2025-04-22 12:55:19 DEBUG PoolBase - HikariPool-1 - Established new connection (2d09de91-e33c-4b47-9d4f-a0dfe52e7e6c)
2025-04-22 12:55:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1eca7bce
2025-04-22 12:55:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:55:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:55:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@763a5441 is alive
2025-04-22 12:55:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@620a1c86 is alive
2025-04-22 12:55:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:55:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:55:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2310990f is alive
2025-04-22 12:56:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a16d88d is alive
2025-04-22 12:56:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17fb6920 is alive
2025-04-22 12:56:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dd762c5 is alive
2025-04-22 12:56:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e294790 is alive
2025-04-22 12:56:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:56:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:56:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b0b248 is alive
2025-04-22 12:56:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:56:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:56:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7312e54 is alive
2025-04-22 12:57:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1eca7bce is alive
2025-04-22 12:57:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@620a1c86 is alive
2025-04-22 12:57:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@763a5441 is alive
2025-04-22 12:57:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:57:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:57:53 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 12:57:53 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 12:57:53 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 12:57:53 DEBUG HikariConfig - autoCommit......................true
2025-04-22 12:57:53 DEBUG HikariConfig - catalog.........................none
2025-04-22 12:57:53 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 12:57:53 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 12:57:53 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 12:57:53 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-22 12:57:53 DEBUG HikariConfig - dataSource......................none
2025-04-22 12:57:53 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 12:57:53 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 12:57:53 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 12:57:53 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 12:57:53 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 12:57:53 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 12:57:53 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 12:57:53 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 12:57:53 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 12:57:53 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 12:57:53 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 12:57:53 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 12:57:53 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 12:57:53 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 12:57:53 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 12:57:53 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 12:57:53 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 12:57:53 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 12:57:53 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 12:57:53 DEBUG HikariConfig - password........................<masked>
2025-04-22 12:57:53 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 12:57:53 DEBUG HikariConfig - readOnly........................false
2025-04-22 12:57:53 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 12:57:53 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 12:57:53 DEBUG HikariConfig - schema..........................none
2025-04-22 12:57:53 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 12:57:53 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 12:57:53 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 12:57:53 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 12:57:53 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (94d28af3-370b-4125-8ad3-3291bb8831ce)
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Established new connection (94d28af3-370b-4125-8ad3-3291bb8831ce)
2025-04-22 12:57:53 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e3181aa
2025-04-22 12:57:53 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 12:57:53 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 12:57:53 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 12:57:53 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 12:57:53 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 12:57:53 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 12:57:53 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 12:57:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c5615876-704a-466e-918c-e54eb3aa2910)
2025-04-22 12:57:53 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 12:57:53 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Established new connection (c5615876-704a-466e-918c-e54eb3aa2910)
2025-04-22 12:57:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6e66782b
2025-04-22 12:57:53 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 12:57:53 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 12:57:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (76f0bedd-54a7-4658-9a11-2b4e1ecdf882)
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Established new connection (76f0bedd-54a7-4658-9a11-2b4e1ecdf882)
2025-04-22 12:57:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@649e135b
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@352c308
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@71e9a896
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43c67247
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@fac80
2025-04-22 12:57:53 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@726386ed
2025-04-22 12:57:53 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24f43aa3] into BootstrapContext; was [null]
2025-04-22 12:57:53 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@63fd4873] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1e11bc55]
2025-04-22 12:57:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (442f55d6-bcf0-4210-b68c-779e6c343491)
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Established new connection (442f55d6-bcf0-4210-b68c-779e6c343491)
2025-04-22 12:57:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@219c91ac
2025-04-22 12:57:53 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 12:57:53 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 12:57:53 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 12:57:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5b352d79-1b84-45c3-9a19-d625cc66f8d8)
2025-04-22 12:57:53 DEBUG PoolBase - HikariPool-1 - Established new connection (5b352d79-1b84-45c3-9a19-d625cc66f8d8)
2025-04-22 12:57:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7ce61294
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f5b386ec-d202-42bb-937e-02edeb9677c7)
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Established new connection (f5b386ec-d202-42bb-937e-02edeb9677c7)
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@10f753bc
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cc2a0e23-a876-4e9e-80ff-1e36ba6a049f)
2025-04-22 12:57:54 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 12:57:54 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 12:57:54 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Established new connection (cc2a0e23-a876-4e9e-80ff-1e36ba6a049f)
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4678e32
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 12:57:54 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ce116b4d-783b-447b-9b8f-8b3b697248fd)
2025-04-22 12:57:54 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 12:57:54 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Established new connection (ce116b4d-783b-447b-9b8f-8b3b697248fd)
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41b36ee3
2025-04-22 12:57:54 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2063c53e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2a9bc08f)
2025-04-22 12:57:54 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50f40653) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a3d0f6)
2025-04-22 12:57:54 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 12:57:54 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70e29e14`
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:57:54 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4d54252c-c4b5-4abe-9542-32c86fdfe986)
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Established new connection (4d54252c-c4b5-4abe-9542-32c86fdfe986)
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d0db6f3
2025-04-22 12:57:54 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 12:57:54 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f1ea80d]
2025-04-22 12:57:54 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (502ed6df-9884-445b-8121-fc835ffb2c9b)
2025-04-22 12:57:54 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 12:57:54 DEBUG PoolBase - HikariPool-1 - Established new connection (502ed6df-9884-445b-8121-fc835ffb2c9b)
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@274d6e5d
2025-04-22 12:57:54 DEBUG EntityBinder - Import with entity name User
2025-04-22 12:57:54 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:57:54 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property userID
2025-04-22 12:57:54 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property email
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property isActive
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property name
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property password
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property userRole
2025-04-22 12:57:54 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 12:57:54 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 12:57:54 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property guestId
2025-04-22 12:57:54 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property age
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property name
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property user
2025-04-22 12:57:54 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 12:57:54 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 12:57:54 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property bookingId
2025-04-22 12:57:54 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property checkIn
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property checkOut
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property room
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property status
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property user
2025-04-22 12:57:54 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 12:57:54 DEBUG EntityBinder - Import with entity name Room
2025-04-22 12:57:54 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property roomID
2025-04-22 12:57:54 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property price
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property roomType
2025-04-22 12:57:54 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 12:57:54 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 12:57:54 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 12:57:54 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property amount
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property booking
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property issueDate
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 12:57:54 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 12:57:54 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 12:57:54 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 12:57:54 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 12:57:54 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 12:57:54 DEBUG PropertyBinder - Building property user
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 12:57:54 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 12:57:54 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 12:57:54 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 12:57:54 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 12:57:54 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 12:57:54 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 12:57:54 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:57:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:57:54 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:57:54 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@42cc183e, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 12:57:54 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3ff54f3d] under count; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@430b2699] under every; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67536ae0] under any; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63] under sinh; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7] under cosh; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5] under tanh; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93] under pi; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc] under log; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3440e9cd] under position; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6a1ef65c] under overlay; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@e280403] under trim; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@77f991c] under cast; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7e365] under collate; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5568c66f] under extract; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4bdf] under ifnull; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@78422efb] under pad; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@d48e998] under str; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4eaa375c] under format; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@31a2a9fa] under timestampadd; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5ec1963c] under timestampdiff; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under current_date; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68dd39d2] under current_time; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a44cfc0] under current_timestamp; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e3c26e] under local_date; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@80b122b] under local_time; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@999b951] under local_datetime; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under offset_datetime; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under instant; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@36d33f4] under sql; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@32eae6f2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@80b122b
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@999b951
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6a1d526c] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1f2f0109] under bit_length; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@483b0690] under octet_length; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3440e9cd
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6870c3c2] under bitand; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb0a08c] under bitor; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c] under bitxor; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4debbf0] under bitnot; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a5e167a] under median; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under insert; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a917723] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6a1ef65c
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7e4579c7] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@40c2ce52] under listagg; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3965bdf9] under array; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3c0e00a8] under array_list; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3408f695] under array_agg; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@682abca7] under array_position; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@713ec32d] under array_positions; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@fe87ddd] under array_positions_list; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4eea94a4] under array_length; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@168b4cb0] under array_concat; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@383c3eb3] under array_prepend; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@20ab76ee] under array_append; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3a17b2e3] under array_contains; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5e13f156] under array_contains_nullable; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6e60f18] under array_overlaps; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5cf8676a] under array_overlaps_nullable; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd43562] under array_get; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@55f4887d] under array_set; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@78d71df1] under array_remove_index; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@456bcb74] under array_slice; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a9c5b75] under array_trim; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@de81be1] under array_fill; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@342e690b] under array_fill_list; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@7237f3c1] under array_to_string; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d3b58ca] under mode; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4e224df5] under percentile_cont; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32456db0] under percentile_disc; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1d02af26] under rank; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fa7df1] under dense_rank; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4dd90166] under percent_rank; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@52227eb2] under cume_dist; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4ed5a1b0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@18d003cd] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3135bf25] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@45900b64] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@6e31d989] under trunc; prior registration was null
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 12:57:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b01a0d] under date_trunc; prior registration was null
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 12:57:54 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 12:57:54 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 12:57:54 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 12:57:54 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 12:57:55 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:57:55 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 12:57:55 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 12:57:55 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:57:55 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:57:55 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:57:55 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:57:55 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 12:57:55 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 12:57:55 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:57:55 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 12:57:55 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 12:57:55 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 12:57:55 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 12:57:55 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 12:57:55 DEBUG creation - Starting post-init callbacks
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 12:57:55 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 12:57:55 DEBUG create - Created new SQL alias : g1_0
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@781dac73] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 12:57:55 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:57:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 12:57:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:57:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 12:57:55 DEBUG create - Created new SQL alias : b1_0
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7272ee51] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 12:57:55 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@762a10b6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 12:57:55 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:57:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 12:57:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 12:57:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 12:57:55 DEBUG create - Created new SQL alias : r1_0
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 12:57:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 12:57:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 12:57:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 12:57:55 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:57:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 12:57:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:57:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 12:57:55 DEBUG create - Created new SQL alias : i1_0
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2035d65b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 12:57:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72224107] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 12:57:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 12:57:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 12:57:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 12:57:55 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 12:57:55 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 12:57:55 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 12:57:55 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 12:57:55 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 12:57:55 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@56d6a1b1]
2025-04-22 12:57:55 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 12:57:55 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 12:57:55 DEBUG Table - No alter strings for table : bookings
2025-04-22 12:57:55 DEBUG Table - No alter strings for table : guests
2025-04-22 12:57:55 DEBUG Table - No alter strings for table : invoices
2025-04-22 12:57:55 DEBUG Table - No alter strings for table : rooms
2025-04-22 12:57:55 DEBUG Table - No alter strings for table : users
2025-04-22 12:57:55 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2475fba3
2025-04-22 12:57:55 DEBUG SessionFactoryRegistry - Registering SessionFactory: 44b0fc09-e6b5-413a-9182-d023c6760b02 (my-persistence-unit)
2025-04-22 12:57:55 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 12:57:55 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 12:57:55 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 12:57:55 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 12:57:56 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 12:57:56 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:57:56 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:57:56 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:57:56 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 12:57:56 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 12:57:56 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 12:57:56 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:57:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:57:56 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1244989872 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 12:57:56 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 12:57:56 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 12:57:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 34
2025-04-22 12:57:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#34] : 1599677423
2025-04-22 12:57:56 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 12:57:56 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 12:57:56 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 12:57:56 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 12:57:56 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 12:57:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#34
2025-04-22 12:57:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40b70f31
2025-04-22 12:57:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:57:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:57:56 WARN  HomeMenuUI - Invalid login attempt for email: abrar@gmail.com
2025-04-22 12:58:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:58:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:58:28 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-22 12:58:28 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-22 12:58:28 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 12:58:28 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 12:58:28 DEBUG create - Created new SQL alias : u1_0
2025-04-22 12:58:28 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 12:58:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 12:58:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 12:58:28 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-22 12:58:28 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 12:58:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:58:28 DEBUG results - Initializer list is empty
2025-04-22 12:58:28 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-22 12:58:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6032622
2025-04-22 12:58:28 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-22 12:58:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:58:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:58:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 12:58:28 DEBUG results - Initializer list is empty
2025-04-22 12:58:28 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-22 12:58:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6032622
2025-04-22 12:58:28 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-22 12:58:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:58:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:58:28 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 12:58:28 DEBUG TransactionImpl - begin
2025-04-22 12:58:28 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 12:58:28 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 12:58:28 DEBUG results - Initializer list is empty
2025-04-22 12:58:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2b19b346
2025-04-22 12:58:28 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 12:58:28 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@54e06788
2025-04-22 12:58:28 DEBUG TransactionImpl - committing
2025-04-22 12:58:28 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 12:58:28 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 12:58:28 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 12:58:28 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 12:58:28 DEBUG EntityPrinter - Listing entities:
2025-04-22 12:58:28 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SHAHID SHAIKH, isActive=false, userRole=STAFF, userID=35, email=shahid@gmail.com}
2025-04-22 12:58:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:58:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 12:58:28 INFO  UserDaoImpl - User registered successfully: User{userID=35, name='SHAHID SHAIKH', email='shahid@gmail.com', password='!Q1q', userRole=STAFF, isActive=false}
2025-04-22 12:58:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:58:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:59:23 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:59:23 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 12:59:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7ce61294 is alive
2025-04-22 12:59:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41b36ee3 is alive
2025-04-22 12:59:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e66782b is alive
2025-04-22 12:59:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@274d6e5d is alive
2025-04-22 12:59:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10f753bc is alive
2025-04-22 12:59:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d0db6f3 is alive
2025-04-22 12:59:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@219c91ac is alive
2025-04-22 12:59:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-22 12:59:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4678e32 is alive
2025-04-22 12:59:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@649e135b is alive
2025-04-22 12:59:53 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 12:59:53 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 13:01:34 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 13:01:34 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 13:01:34 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 13:01:34 DEBUG HikariConfig - autoCommit......................true
2025-04-22 13:01:34 DEBUG HikariConfig - catalog.........................none
2025-04-22 13:01:34 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 13:01:34 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 13:01:34 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 13:01:34 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@6e2aa843
2025-04-22 13:01:34 DEBUG HikariConfig - dataSource......................none
2025-04-22 13:01:34 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 13:01:34 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 13:01:34 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 13:01:34 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 13:01:34 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 13:01:34 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 13:01:34 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 13:01:34 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 13:01:34 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 13:01:34 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 13:01:34 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 13:01:34 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 13:01:34 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 13:01:34 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 13:01:34 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 13:01:34 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 13:01:34 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 13:01:34 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 13:01:34 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 13:01:34 DEBUG HikariConfig - password........................<masked>
2025-04-22 13:01:34 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 13:01:34 DEBUG HikariConfig - readOnly........................false
2025-04-22 13:01:34 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 13:01:34 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 13:01:34 DEBUG HikariConfig - schema..........................none
2025-04-22 13:01:34 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 13:01:34 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 13:01:34 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 13:01:34 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 13:01:34 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f83b7369-aed1-4cad-a0f1-ae2c850ab478)
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Established new connection (f83b7369-aed1-4cad-a0f1-ae2c850ab478)
2025-04-22 13:01:34 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@253d9f73
2025-04-22 13:01:34 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 13:01:34 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 13:01:34 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 13:01:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 13:01:34 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 13:01:34 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 13:01:34 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f7fe437a-54a2-4d38-b375-5729e52bfc76)
2025-04-22 13:01:34 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Established new connection (f7fe437a-54a2-4d38-b375-5729e52bfc76)
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@37cf4db
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 13:01:34 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 13:01:34 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 13:01:34 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5a4a1e70-807c-4697-8920-4aa74331656a)
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Established new connection (5a4a1e70-807c-4697-8920-4aa74331656a)
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@9849fab
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0ff7d5a0-008f-4f3a-9e09-47a9ecf05e70)
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@13006998
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@13006998
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@352c308
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@352c308
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3b1bb3ab
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3b1bb3ab
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6b9267b
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43c67247
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@fac80
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@726386ed
2025-04-22 13:01:34 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@649f2009
2025-04-22 13:01:34 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@63fd4873] into BootstrapContext; was [null]
2025-04-22 13:01:34 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1e11bc55] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7544a1e4]
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Established new connection (0ff7d5a0-008f-4f3a-9e09-47a9ecf05e70)
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4c8610ff
2025-04-22 13:01:34 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 13:01:34 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (be6e41cb-67fe-484d-b323-94f96613709e)
2025-04-22 13:01:34 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Established new connection (be6e41cb-67fe-484d-b323-94f96613709e)
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2838ef98
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (532e93e3-d65f-4f52-b800-c54d8a22c0b7)
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Established new connection (532e93e3-d65f-4f52-b800-c54d8a22c0b7)
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d80bd61
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (30f5dbff-82d5-4878-a7f8-6a9bba2cafe8)
2025-04-22 13:01:34 DEBUG PoolBase - HikariPool-1 - Established new connection (30f5dbff-82d5-4878-a7f8-6a9bba2cafe8)
2025-04-22 13:01:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@50d41cbd
2025-04-22 13:01:35 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 13:01:35 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 13:01:35 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 13:01:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-22 13:01:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (549d4c6a-17f8-412a-b93e-6caf53442825)
2025-04-22 13:01:35 DEBUG PoolBase - HikariPool-1 - Established new connection (549d4c6a-17f8-412a-b93e-6caf53442825)
2025-04-22 13:01:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2ca9efb0
2025-04-22 13:01:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 13:01:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (39af61f1-4995-440e-9b54-95aff10f1589)
2025-04-22 13:01:35 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 13:01:35 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 13:01:35 DEBUG PoolBase - HikariPool-1 - Established new connection (39af61f1-4995-440e-9b54-95aff10f1589)
2025-04-22 13:01:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@43029192
2025-04-22 13:01:35 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 13:01:35 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2a9bc08f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@50f40653)
2025-04-22 13:01:35 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50a3d0f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e57b5e9)
2025-04-22 13:01:35 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 13:01:35 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7a231dfd
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a231dfd
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3b1bb3ab`
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 13:01:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 13:01:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c03befdc-a3a3-463c-9e6b-819577a7f3d7)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 13:01:35 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 13:01:35 DEBUG PoolBase - HikariPool-1 - Established new connection (c03befdc-a3a3-463c-9e6b-819577a7f3d7)
2025-04-22 13:01:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b914726
2025-04-22 13:01:35 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 13:01:35 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f1ea80d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37191ef0]
2025-04-22 13:01:35 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 13:01:35 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 13:01:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 13:01:35 DEBUG EntityBinder - Import with entity name User
2025-04-22 13:01:35 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property userID
2025-04-22 13:01:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property email
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property isActive
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property name
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property password
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property userRole
2025-04-22 13:01:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 13:01:35 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 13:01:35 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property guestId
2025-04-22 13:01:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property age
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property name
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property user
2025-04-22 13:01:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 13:01:35 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 13:01:35 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property bookingId
2025-04-22 13:01:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property checkIn
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property checkOut
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property room
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property status
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property user
2025-04-22 13:01:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 13:01:35 DEBUG EntityBinder - Import with entity name Room
2025-04-22 13:01:35 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property roomID
2025-04-22 13:01:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property price
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property roomType
2025-04-22 13:01:35 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 13:01:35 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 13:01:35 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 13:01:35 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property amount
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property booking
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property issueDate
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 13:01:35 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 13:01:35 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 13:01:35 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 13:01:35 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 13:01:35 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 13:01:35 DEBUG PropertyBinder - Building property user
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 13:01:35 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 13:01:35 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 13:01:35 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 13:01:35 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 13:01:35 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 13:01:35 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 13:01:35 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 13:01:35 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 13:01:35 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 13:01:35 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@42cc183e, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 13:01:35 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3ff54f3d] under count; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@430b2699] under every; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67536ae0] under any; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63] under sinh; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7] under cosh; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5] under tanh; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93] under pi; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc] under log; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3440e9cd] under position; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6a1ef65c] under overlay; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@e280403] under trim; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@77f991c] under cast; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7e365] under collate; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5568c66f] under extract; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4bdf] under ifnull; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@78422efb] under pad; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@d48e998] under str; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4eaa375c] under format; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@31a2a9fa] under timestampadd; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5ec1963c] under timestampdiff; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under current_date; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68dd39d2] under current_time; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a44cfc0] under current_timestamp; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e3c26e] under local_date; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@80b122b] under local_time; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@999b951] under local_datetime; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under offset_datetime; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under instant; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@36d33f4] under sql; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@32eae6f2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@80b122b
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@999b951
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6a1d526c] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1f2f0109] under bit_length; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@483b0690] under octet_length; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3440e9cd
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6870c3c2] under bitand; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb0a08c] under bitor; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c] under bitxor; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4debbf0] under bitnot; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a5e167a] under median; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under insert; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a917723] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6a1ef65c
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7e4579c7] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@40c2ce52] under listagg; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3965bdf9] under array; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3c0e00a8] under array_list; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3408f695] under array_agg; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@682abca7] under array_position; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@713ec32d] under array_positions; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@fe87ddd] under array_positions_list; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4eea94a4] under array_length; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@168b4cb0] under array_concat; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@383c3eb3] under array_prepend; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@20ab76ee] under array_append; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3a17b2e3] under array_contains; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5e13f156] under array_contains_nullable; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6e60f18] under array_overlaps; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5cf8676a] under array_overlaps_nullable; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd43562] under array_get; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@55f4887d] under array_set; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@78d71df1] under array_remove_index; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@456bcb74] under array_slice; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a9c5b75] under array_trim; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@de81be1] under array_fill; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@342e690b] under array_fill_list; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@7237f3c1] under array_to_string; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d3b58ca] under mode; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4e224df5] under percentile_cont; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32456db0] under percentile_disc; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1d02af26] under rank; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fa7df1] under dense_rank; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4dd90166] under percent_rank; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@52227eb2] under cume_dist; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4ed5a1b0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@18d003cd] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3135bf25] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@45900b64] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@6e31d989] under trunc; prior registration was null
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 13:01:35 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b01a0d] under date_trunc; prior registration was null
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 13:01:35 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 13:01:35 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 13:01:35 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 13:01:35 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 13:01:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 13:01:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 13:01:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 13:01:36 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 13:01:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 13:01:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 13:01:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 13:01:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 13:01:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 13:01:36 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 13:01:36 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 13:01:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 13:01:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 13:01:36 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 13:01:36 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 13:01:36 DEBUG creation - Starting post-init callbacks
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 13:01:36 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 13:01:36 DEBUG create - Created new SQL alias : g1_0
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@781dac73] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 13:01:36 DEBUG create - Created new SQL alias : u1_0
2025-04-22 13:01:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 13:01:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 13:01:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 13:01:36 DEBUG create - Created new SQL alias : b1_0
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7272ee51] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 13:01:36 DEBUG create - Created new SQL alias : r1_0
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@762a10b6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 13:01:36 DEBUG create - Created new SQL alias : u1_0
2025-04-22 13:01:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 13:01:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 13:01:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 13:01:36 DEBUG create - Created new SQL alias : r1_0
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 13:01:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 13:01:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 13:01:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 13:01:36 DEBUG create - Created new SQL alias : u1_0
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 13:01:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 13:01:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 13:01:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 13:01:36 DEBUG create - Created new SQL alias : i1_0
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2035d65b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 13:01:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72224107] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 13:01:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 13:01:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 13:01:36 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 13:01:36 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 13:01:36 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 13:01:36 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 13:01:36 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 13:01:36 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 13:01:36 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f1ea80d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@56d6a1b1]
2025-04-22 13:01:36 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 13:01:36 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 13:01:36 DEBUG Table - No alter strings for table : bookings
2025-04-22 13:01:36 DEBUG Table - No alter strings for table : guests
2025-04-22 13:01:36 DEBUG Table - No alter strings for table : invoices
2025-04-22 13:01:36 DEBUG Table - No alter strings for table : rooms
2025-04-22 13:01:36 DEBUG Table - No alter strings for table : users
2025-04-22 13:01:36 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2475fba3
2025-04-22 13:01:36 DEBUG SessionFactoryRegistry - Registering SessionFactory: 8b40b854-ac47-477e-a1a7-f7068afba5cd (my-persistence-unit)
2025-04-22 13:01:36 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 13:01:36 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 13:01:36 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 13:01:36 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-22 13:01:36 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-22 13:01:36 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 13:01:37 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 13:01:37 DEBUG create - Created new SQL alias : u1_0
2025-04-22 13:01:37 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 13:01:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 13:01:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 13:01:37 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-22 13:01:37 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 13:01:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 13:01:37 DEBUG results - Initializer list is empty
2025-04-22 13:01:37 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-22 13:01:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1136122a
2025-04-22 13:01:37 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-22 13:01:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 13:01:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 13:01:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 13:01:37 DEBUG results - Initializer list is empty
2025-04-22 13:01:37 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-22 13:01:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1136122a
2025-04-22 13:01:37 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-22 13:01:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 13:01:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 13:01:37 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 13:01:37 DEBUG TransactionImpl - begin
2025-04-22 13:01:37 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-22 13:01:37 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 13:01:37 DEBUG results - Initializer list is empty
2025-04-22 13:01:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2ae5580
2025-04-22 13:01:37 DEBUG results - Extracted JDBC value [0] - [36]
2025-04-22 13:01:37 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@5a58db42
2025-04-22 13:01:37 DEBUG TransactionImpl - committing
2025-04-22 13:01:37 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 13:01:37 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 13:01:37 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 13:01:37 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 13:01:37 DEBUG EntityPrinter - Listing entities:
2025-04-22 13:01:37 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=CHETAN ADARI, isActive=false, userRole=GUEST, userID=36, email=chetan@gmail.com}
2025-04-22 13:01:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 13:01:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 13:01:37 INFO  UserDaoImpl - User registered successfully: User{userID=36, name='CHETAN ADARI', email='chetan@gmail.com', password='!Q1q', userRole=GUEST, isActive=false}
2025-04-22 13:02:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 13:02:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:24:38 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-22 14:25:06 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 14:25:06 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 14:25:06 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 14:25:06 DEBUG HikariConfig - autoCommit......................true
2025-04-22 14:25:06 DEBUG HikariConfig - catalog.........................none
2025-04-22 14:25:06 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 14:25:06 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 14:25:06 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 14:25:06 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-22 14:25:06 DEBUG HikariConfig - dataSource......................none
2025-04-22 14:25:06 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 14:25:06 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 14:25:06 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 14:25:06 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 14:25:06 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 14:25:06 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 14:25:06 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 14:25:06 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 14:25:06 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 14:25:06 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 14:25:06 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 14:25:06 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 14:25:06 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 14:25:06 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 14:25:06 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 14:25:06 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 14:25:06 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 14:25:06 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 14:25:06 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 14:25:06 DEBUG HikariConfig - password........................<masked>
2025-04-22 14:25:06 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 14:25:06 DEBUG HikariConfig - readOnly........................false
2025-04-22 14:25:06 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 14:25:06 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 14:25:06 DEBUG HikariConfig - schema..........................none
2025-04-22 14:25:06 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 14:25:06 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 14:25:06 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 14:25:06 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 14:25:06 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 14:25:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (299dc8bd-174c-4a23-9a7f-3e36207f58be)
2025-04-22 14:25:06 DEBUG PoolBase - HikariPool-1 - Established new connection (299dc8bd-174c-4a23-9a7f-3e36207f58be)
2025-04-22 14:25:06 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71529963
2025-04-22 14:25:06 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 14:25:06 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 14:25:06 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 14:25:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 14:25:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 14:25:06 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 14:25:06 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 14:25:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 14:25:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (37852cea-24cd-487a-b3e7-c7919d36c8aa)
2025-04-22 14:25:06 DEBUG PoolBase - HikariPool-1 - Established new connection (37852cea-24cd-487a-b3e7-c7919d36c8aa)
2025-04-22 14:25:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4aa63002
2025-04-22 14:25:06 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 14:25:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 14:25:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 14:25:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (46fadc2c-beb0-45c2-9aba-a2c33098765d)
2025-04-22 14:25:06 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 14:25:06 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 14:25:06 DEBUG PoolBase - HikariPool-1 - Established new connection (46fadc2c-beb0-45c2-9aba-a2c33098765d)
2025-04-22 14:25:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@405e5b72
2025-04-22 14:25:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 14:25:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4511a940-6986-4697-bacc-a0a575e93108)
2025-04-22 14:25:06 DEBUG PoolBase - HikariPool-1 - Established new connection (4511a940-6986-4697-bacc-a0a575e93108)
2025-04-22 14:25:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@55cdd1d
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a7711eb9-6df2-48ad-8a50-6354ab3ba6d0)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21362712
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70e29e14
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Established new connection (a7711eb9-6df2-48ad-8a50-6354ab3ba6d0)
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e81db94
2025-04-22 14:25:07 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1827a871] into BootstrapContext; was [null]
2025-04-22 14:25:07 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48e64352] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7249dadf]
2025-04-22 14:25:07 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cd73baa6-8e26-4798-86d5-d95010f5ab1e)
2025-04-22 14:25:07 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Established new connection (cd73baa6-8e26-4798-86d5-d95010f5ab1e)
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3413fb85
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b81340d9-1736-494d-b81c-40c8bf2c770f)
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Established new connection (b81340d9-1736-494d-b81c-40c8bf2c770f)
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@624a3be
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4dc1f362-1415-47c1-8f7c-e2589f08b099)
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Established new connection (4dc1f362-1415-47c1-8f7c-e2589f08b099)
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@65732252
2025-04-22 14:25:07 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 14:25:07 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 14:25:07 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (32863570-7993-4f86-a77c-24fc9f24c724)
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Established new connection (32863570-7993-4f86-a77c-24fc9f24c724)
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@15de1813
2025-04-22 14:25:07 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 14:25:07 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f9a82431-8f68-4155-8584-d5fbb1e9090f)
2025-04-22 14:25:07 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 14:25:07 DEBUG PoolBase - HikariPool-1 - Established new connection (f9a82431-8f68-4155-8584-d5fbb1e9090f)
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e3a06fe
2025-04-22 14:25:07 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2063c53e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2a9bc08f)
2025-04-22 14:25:07 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50f40653) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a3d0f6)
2025-04-22 14:25:07 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 14:25:07 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24be2d9c`
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 14:25:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 14:25:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:25:07 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 14:25:07 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f1ea80d]
2025-04-22 14:25:07 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 14:25:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 14:25:07 DEBUG EntityBinder - Import with entity name User
2025-04-22 14:25:07 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property userID
2025-04-22 14:25:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property email
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property isActive
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property name
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property password
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property userRole
2025-04-22 14:25:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 14:25:07 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 14:25:07 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property guestId
2025-04-22 14:25:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property age
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property name
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property user
2025-04-22 14:25:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 14:25:07 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 14:25:07 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property bookingId
2025-04-22 14:25:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property checkIn
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property checkOut
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property room
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property status
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property user
2025-04-22 14:25:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 14:25:07 DEBUG EntityBinder - Import with entity name Room
2025-04-22 14:25:07 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property roomID
2025-04-22 14:25:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property price
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property roomType
2025-04-22 14:25:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 14:25:07 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 14:25:07 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 14:25:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property amount
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property booking
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property issueDate
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 14:25:07 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 14:25:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 14:25:07 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 14:25:07 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 14:25:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:25:07 DEBUG PropertyBinder - Building property user
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 14:25:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 14:25:07 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 14:25:07 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 14:25:07 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 14:25:07 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 14:25:07 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 14:25:07 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 14:25:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 14:25:07 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 14:25:07 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6bcc3f27, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-22 14:25:07 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1f939a0f] under count; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@111d5c97] under every; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@29c17c3d] under any; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4] under sinh; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ba3d4b6] under cosh; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51b77cdf] under tanh; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89] under pi; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e] under log; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5416f8db] under position; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@798dad3d] under overlay; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7d986d83] under trim; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@e784320] under cast; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f6bf8aa] under collate; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2c63762b] under extract; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@68e02f33] under ifnull; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@158ae284] under pad; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7235f92b] under str; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@27a09971] under format; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@152c4495] under timestampadd; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4a44cfc0] under timestampdiff; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under current_date; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under current_time; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b0bd001] under current_timestamp; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f9cab00] under local_date; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10272bbb] under local_time; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36d33f4] under local_datetime; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16736040] under offset_datetime; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under instant; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@26ca61bf] under sql; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73a0f2b] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51b77cdf
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ba3d4b6
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@483b0690] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@10272bbb
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@36d33f4
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1faf386c] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4debbf0] under bit_length; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6a5e167a] under octet_length; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e06f7d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5416f8db
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under bitand; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@771a7d53] under bitor; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under bitxor; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e95595b] under bitnot; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a917723] under median; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under insert; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5b47731f] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@798dad3d
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@233db8e9] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6274670b] under listagg; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2b6a0ea9] under array; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4dde8976] under array_list; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@7980cf2c] under array_agg; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@53c99b09] under array_position; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@60aec68a] under array_positions; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@f8a6243] under array_positions_list; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a8ffd75] under array_length; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@23cbbd07] under array_concat; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@da28d03] under array_prepend; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ebda593] under array_append; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@65afeb6d] under array_contains; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@6723610b] under array_contains_nullable; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@59939293] under array_overlaps; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@68b366e2] under array_overlaps_nullable; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26837057] under array_get; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@a9c5b75] under array_set; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3e28fee1] under array_remove_index; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16a2ed51] under array_slice; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b332962] under array_trim; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@781711b7] under array_fill; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@642a16aa] under array_fill_list; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5d3b58ca] under array_to_string; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1d02af26] under mode; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3fa7df1] under percentile_cont; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4dd90166] under percentile_disc; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@f438904] under rank; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4ed5a1b0] under dense_rank; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@18d003cd] under percent_rank; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3135bf25] under cume_dist; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@45900b64] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@f2a1813] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79f90a3a] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@91f565d] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@72a2312e] under trunc; prior registration was null
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 14:25:08 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47c7a9e5] under date_trunc; prior registration was null
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 14:25:08 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 14:25:08 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 14:25:08 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 14:25:08 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 14:25:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:25:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 14:25:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 14:25:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:25:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:25:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:25:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:25:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 14:25:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 14:25:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:25:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 14:25:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 14:25:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 14:25:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 14:25:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 14:25:08 DEBUG creation - Starting post-init callbacks
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 14:25:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 14:25:08 DEBUG create - Created new SQL alias : g1_0
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c5e69a5] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 14:25:08 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:25:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 14:25:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 14:25:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 14:25:08 DEBUG create - Created new SQL alias : b1_0
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52f9e8bb] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 14:25:08 DEBUG create - Created new SQL alias : r1_0
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72224107] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 14:25:08 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:25:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 14:25:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 14:25:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 14:25:08 DEBUG create - Created new SQL alias : r1_0
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 14:25:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 14:25:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 14:25:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 14:25:08 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 14:25:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 14:25:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 14:25:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 14:25:08 DEBUG create - Created new SQL alias : i1_0
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21516c88] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 14:25:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e01a26b] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 14:25:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 14:25:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 14:25:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 14:25:08 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 14:25:08 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 14:25:08 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 14:25:08 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 14:25:08 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 14:25:08 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3120495d]
2025-04-22 14:25:08 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 14:25:08 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 14:25:08 DEBUG Table - No alter strings for table : bookings
2025-04-22 14:25:08 DEBUG Table - No alter strings for table : guests
2025-04-22 14:25:08 DEBUG Table - No alter strings for table : invoices
2025-04-22 14:25:08 DEBUG Table - No alter strings for table : rooms
2025-04-22 14:25:08 DEBUG Table - No alter strings for table : users
2025-04-22 14:25:08 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fb082ff
2025-04-22 14:25:08 DEBUG SessionFactoryRegistry - Registering SessionFactory: 05c59e43-3d98-4b4d-853d-9b3b357198f6 (my-persistence-unit)
2025-04-22 14:25:08 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 14:25:08 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 14:25:08 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 14:25:08 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 14:25:09 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 14:25:09 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 14:25:09 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:25:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 14:25:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 14:25:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 14:25:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 14:25:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 14:25:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:25:09 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@580340208 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:25:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:25:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-22 14:25:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 537329066
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 14:25:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-22 14:25:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a2653a0
2025-04-22 14:25:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:25:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:25:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:25:09 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@574000604 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:25:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:25:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-22 14:25:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 900666712
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:25:09 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 14:25:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-22 14:25:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2361365c
2025-04-22 14:25:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:25:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:25:09 INFO  HomeMenuUI - Login successful: ADMIN (ADMIN)
2025-04-22 14:25:16 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 14:25:16 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 14:25:16 DEBUG create - Created new SQL alias : r1_0
2025-04-22 14:25:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 14:25:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 14:25:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 14:25:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 14:25:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:25:16 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1348064152 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 14:25:16 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1307131613
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1926240621
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 2010067613
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1080517451
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 996471089
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1225628737
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1205343271
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1012812460
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 548395375
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 90547887
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 35386120
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1289671373
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 316935832
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 983339701
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1740813661
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 14:25:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:25:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 14:25:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39685204
2025-04-22 14:25:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:25:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:25:16 INFO  AdminMenuUI - Displayed 15 available rooms.
2025-04-22 14:25:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:25:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:26:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:26:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:26:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:26:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:26:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@405e5b72 is alive
2025-04-22 14:26:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3413fb85 is alive
2025-04-22 14:26:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4aa63002 is alive
2025-04-22 14:26:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71529963 is alive
2025-04-22 14:26:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e3a06fe is alive
2025-04-22 14:26:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15de1813 is alive
2025-04-22 14:26:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65732252 is alive
2025-04-22 14:26:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624a3be is alive
2025-04-22 14:26:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55cdd1d is alive
2025-04-22 14:27:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e81db94 is alive
2025-04-22 14:27:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:27:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:27:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:27:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:28:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:28:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:28:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@405e5b72 is alive
2025-04-22 14:28:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3413fb85 is alive
2025-04-22 14:28:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4aa63002 is alive
2025-04-22 14:28:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:28:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:28:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71529963 is alive
2025-04-22 14:28:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:28:41 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1676857380 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:28:41 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 14:28:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 14:28:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 757150717
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 14:28:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 14:28:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58a7a58d
2025-04-22 14:28:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:28:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:28:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:28:41 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1300570879 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:28:41 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 14:28:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 14:28:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1567441485
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:28:41 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 14:28:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 14:28:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391b01c5
2025-04-22 14:28:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:28:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:28:41 INFO  HomeMenuUI - Login successful: SUPER ADMIN (SUPER_ADMIN)
2025-04-22 14:28:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3e3a06fe is alive
2025-04-22 14:28:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15de1813 is alive
2025-04-22 14:28:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65732252 is alive
2025-04-22 14:28:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624a3be is alive
2025-04-22 14:28:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@55cdd1d is alive
2025-04-22 14:28:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e81db94 is alive
2025-04-22 14:29:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:29:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:29:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:29:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:30:17 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 14:30:17 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 14:30:17 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 14:30:17 DEBUG HikariConfig - autoCommit......................true
2025-04-22 14:30:17 DEBUG HikariConfig - catalog.........................none
2025-04-22 14:30:17 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 14:30:17 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 14:30:17 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 14:30:17 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@74c79fa2
2025-04-22 14:30:17 DEBUG HikariConfig - dataSource......................none
2025-04-22 14:30:17 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 14:30:17 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 14:30:17 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 14:30:17 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 14:30:18 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 14:30:18 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 14:30:18 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 14:30:18 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 14:30:18 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 14:30:18 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 14:30:18 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 14:30:18 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 14:30:18 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 14:30:18 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 14:30:18 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 14:30:18 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 14:30:18 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 14:30:18 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 14:30:18 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 14:30:18 DEBUG HikariConfig - password........................<masked>
2025-04-22 14:30:18 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 14:30:18 DEBUG HikariConfig - readOnly........................false
2025-04-22 14:30:18 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 14:30:18 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 14:30:18 DEBUG HikariConfig - schema..........................none
2025-04-22 14:30:18 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 14:30:18 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 14:30:18 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 14:30:18 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 14:30:18 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cdd17617-2ae8-4b59-bada-7cb9ebf5d973)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Established new connection (cdd17617-2ae8-4b59-bada-7cb9ebf5d973)
2025-04-22 14:30:18 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4fad94a7
2025-04-22 14:30:18 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 14:30:18 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 14:30:18 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 14:30:18 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 14:30:18 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0a09cdfb-ba4c-4566-b14d-816736115ea1)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Established new connection (0a09cdfb-ba4c-4566-b14d-816736115ea1)
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5165ed05
2025-04-22 14:30:18 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 14:30:18 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8f724d0f-6143-4c89-8ccd-4b2936018677)
2025-04-22 14:30:18 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 14:30:18 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 14:30:18 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Established new connection (8f724d0f-6143-4c89-8ccd-4b2936018677)
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b4aa127
2025-04-22 14:30:18 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1a217e01-3d7e-4e5d-9107-55ce8f33d153)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Established new connection (1a217e01-3d7e-4e5d-9107-55ce8f33d153)
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e83bb10
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2234078
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2234078
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2234078
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@66908383
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (496553e6-c673-46ca-a2b8-68f99bf50daa)
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2d7e1102
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2d7e1102
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@72ba28ee
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-22 14:30:18 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-22 14:30:18 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@16fe9c29] into BootstrapContext; was [null]
2025-04-22 14:30:18 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e9803c2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4525d1d3]
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Established new connection (496553e6-c673-46ca-a2b8-68f99bf50daa)
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2061f698
2025-04-22 14:30:18 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 14:30:18 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3dba499d-3778-4da7-b145-290f784da4bb)
2025-04-22 14:30:18 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Established new connection (3dba499d-3778-4da7-b145-290f784da4bb)
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e6e64b
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8b24b4a1-6af5-454b-be4a-c3cd211c84a5)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Established new connection (8b24b4a1-6af5-454b-be4a-c3cd211c84a5)
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68392359
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (043537e2-04dd-4046-925a-6233ccfbfa5b)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Established new connection (043537e2-04dd-4046-925a-6233ccfbfa5b)
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7827a4c1
2025-04-22 14:30:18 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 14:30:18 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 14:30:18 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (521c4377-25f6-42dd-a6f2-5f13a62114cd)
2025-04-22 14:30:18 DEBUG PoolBase - HikariPool-1 - Established new connection (521c4377-25f6-42dd-a6f2-5f13a62114cd)
2025-04-22 14:30:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@755bad0b
2025-04-22 14:30:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-22 14:30:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a8eadd5c-b3b5-48d7-98d8-5954f40fdd83)
2025-04-22 14:30:19 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 14:30:19 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 14:30:19 DEBUG PoolBase - HikariPool-1 - Established new connection (a8eadd5c-b3b5-48d7-98d8-5954f40fdd83)
2025-04-22 14:30:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e37c667
2025-04-22 14:30:19 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 14:30:19 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@47af099e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@700f518a)
2025-04-22 14:30:19 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b835727) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13da7ab0)
2025-04-22 14:30:19 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 14:30:19 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@19650aa6
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@19650aa6
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2d7e1102`
2025-04-22 14:30:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 14:30:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 14:30:19 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 14:30:19 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71d9cb05] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@17c2d509]
2025-04-22 14:30:19 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 14:30:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 14:30:19 DEBUG EntityBinder - Import with entity name User
2025-04-22 14:30:19 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property userID
2025-04-22 14:30:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property email
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property isActive
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property name
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property password
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property userRole
2025-04-22 14:30:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 14:30:19 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 14:30:19 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property guestId
2025-04-22 14:30:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property age
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property name
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property user
2025-04-22 14:30:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 14:30:19 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 14:30:19 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property bookingId
2025-04-22 14:30:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property checkIn
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property checkOut
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property room
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property status
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property user
2025-04-22 14:30:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 14:30:19 DEBUG EntityBinder - Import with entity name Room
2025-04-22 14:30:19 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property roomID
2025-04-22 14:30:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property price
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property roomType
2025-04-22 14:30:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 14:30:19 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 14:30:19 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 14:30:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property amount
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property booking
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property issueDate
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 14:30:19 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 14:30:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 14:30:19 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 14:30:19 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 14:30:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:30:19 DEBUG PropertyBinder - Building property user
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 14:30:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 14:30:19 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 14:30:19 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 14:30:19 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 14:30:19 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 14:30:19 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 14:30:19 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 14:30:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 14:30:19 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 14:30:19 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@25c2a9e3, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-22 14:30:19 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5af5d76f] under count; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4342c13] under every; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2ba1209b] under any; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d878b25] under sinh; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49] under cosh; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47] under tanh; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba] under pi; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0] under log; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7f4596d0] under position; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f238e4f] under overlay; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5d66e944] under trim; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@348137e8] under cast; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@412c5e8b] under collate; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2574a9e3] under extract; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3fde8f7c] under ifnull; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5ad6cc21] under pad; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5403799b] under str; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1e01b133] under format; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@78da899f] under timestampadd; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4bb147ec] under timestampdiff; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@186d8a71] under current_date; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under current_time; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under current_timestamp; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under local_date; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under local_time; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cde8c6c] under local_datetime; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@174721c4] under offset_datetime; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3592c1c4] under instant; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@47b33e07] under sql; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7126e26] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d878b25
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@590765c4] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@11d2dd2d
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@cde8c6c
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4f116ca2] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@125d47c4] under bit_length; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@193bb809] under octet_length; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b018f3] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7f4596d0
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under bitand; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under bitor; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2] under bitxor; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805] under bitnot; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f2466c] under median; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64763e49] under insert; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2b53840a] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f238e4f
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3caafa67] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@e9474f] under listagg; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@718fd7c1] under array; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4bc6da03] under array_list; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3c770db4] under array_agg; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@422ad5e2] under array_position; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@59c500f7] under array_positions; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@2dafae61] under array_positions_list; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a2fce12] under array_length; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@4a070cf0] under array_concat; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@22da2fe6] under array_prepend; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@100ad67e] under array_append; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5ba90d8a] under array_contains; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@309dcdf3] under array_contains_nullable; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@66e21568] under array_overlaps; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f73ce28] under array_overlaps_nullable; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35dece42] under array_get; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@52ca2652] under array_set; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@5efeb117] under array_remove_index; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@160b4809] under array_slice; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@149b4d20] under array_trim; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2ed9f6f8] under array_fill; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@251c4280] under array_fill_list; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5f61371d] under array_to_string; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3dce6dd8] under mode; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69f2cb04] under percentile_cont; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@13803a94] under percentile_disc; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@28babeca] under rank; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ad9b8d3] under dense_rank; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@168ad26f] under percent_rank; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f93bf0a] under cume_dist; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@778a1250] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@55acec99] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61191222] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@64e7d698] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@359066bc] under trunc; prior registration was null
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 14:30:19 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@385dfb63] under date_trunc; prior registration was null
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 14:30:19 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 14:30:19 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 14:30:19 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 14:30:19 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 14:30:20 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:30:20 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 14:30:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 14:30:20 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:30:20 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:30:20 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:30:20 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:30:20 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 14:30:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 14:30:20 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:30:20 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 14:30:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 14:30:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 14:30:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 14:30:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 14:30:20 DEBUG creation - Starting post-init callbacks
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 14:30:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 14:30:20 DEBUG create - Created new SQL alias : g1_0
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b475663] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 14:30:20 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:30:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 14:30:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 14:30:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 14:30:20 DEBUG create - Created new SQL alias : b1_0
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7dd91ffc] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 14:30:20 DEBUG create - Created new SQL alias : r1_0
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68b7bdcb] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 14:30:20 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:30:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 14:30:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 14:30:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 14:30:20 DEBUG create - Created new SQL alias : r1_0
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 14:30:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 14:30:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 14:30:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 14:30:20 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 14:30:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 14:30:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 14:30:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 14:30:20 DEBUG create - Created new SQL alias : i1_0
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3973b6d4] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 14:30:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57416e49] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 14:30:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 14:30:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 14:30:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 14:30:20 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 14:30:20 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 14:30:20 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 14:30:20 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 14:30:20 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 14:30:20 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71d9cb05] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@42cc420b]
2025-04-22 14:30:20 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 14:30:20 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 14:30:20 DEBUG Table - No alter strings for table : bookings
2025-04-22 14:30:20 DEBUG Table - No alter strings for table : guests
2025-04-22 14:30:20 DEBUG Table - No alter strings for table : invoices
2025-04-22 14:30:20 DEBUG Table - No alter strings for table : rooms
2025-04-22 14:30:20 DEBUG Table - No alter strings for table : users
2025-04-22 14:30:21 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@26463a6
2025-04-22 14:30:21 DEBUG SessionFactoryRegistry - Registering SessionFactory: d7cc37d2-32f5-4041-bf52-3a29e5ee8fa0 (my-persistence-unit)
2025-04-22 14:30:21 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 14:30:21 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 14:30:21 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 14:30:21 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 14:30:21 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 14:30:21 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 14:30:21 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:30:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 14:30:21 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 14:30:21 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 14:30:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 14:30:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 14:30:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:30:21 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@759083498 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:30:21 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:30:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:30:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:30:21 ERROR UserDaoImpl - Error fetching user by email superadmin@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.authenticateUser(UserServiceImpl.java:59) [classes/:?]
	at org.example.controller.UserController.authenticateUser(UserController.java:41) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:74) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-22 14:30:21 WARN  HomeMenuUI - Invalid login attempt for email: superadmin@gmail.com
2025-04-22 14:30:34 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:30:34 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1905093500 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:30:34 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 14:30:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 14:30:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 547670951
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 14:30:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 14:30:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e6c8854
2025-04-22 14:30:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:30:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:30:34 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:30:34 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@543938464 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:30:34 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 14:30:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 14:30:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 907754662
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:30:34 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 14:30:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 14:30:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48333b12
2025-04-22 14:30:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:30:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:30:34 INFO  HomeMenuUI - Login successful: SUPER ADMIN (SUPER_ADMIN)
2025-04-22 14:30:40 INFO  AdminMenuUI - Fetching all admin users.
2025-04-22 14:30:40 DEBUG hql - HQL : FROM User WHERE userRole = 'ADMIN'
2025-04-22 14:30:41 DEBUG hql - Unable to resolve unqualified attribute [userRole] in local from-clause
2025-04-22 14:30:41 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(103123830056400)`
            <- [root] - `org.example.entity.User(103123830056400)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(103123830056400)`
          <- [root] - `org.example.entity.User(103123830056400)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(103123830056400).userRole`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 14:30:41 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:30:41 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(103123830056400))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 14:30:41 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(103123830056400).userRole) 
2025-04-22 14:30:41 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(103123830056400)]
 |  +-BasicFetch [org.example.entity.User(103123830056400).email]
 |  +-BasicFetch [org.example.entity.User(103123830056400).isActive]
 |  +-BasicFetch [org.example.entity.User(103123830056400).name]
 |  +-BasicFetch [org.example.entity.User(103123830056400).password]
 |  \-BasicFetch [org.example.entity.User(103123830056400).userRole]

2025-04-22 14:30:41 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(103123830056400)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 14:30:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:30:41 DEBUG results - Initializer list:
	  org.example.entity.User(103123830056400) -> EntityResultInitializer(org.example.entity.User(103123830056400))@272537970 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:30:41 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-22 14:30:41 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:30:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103123830056400)): 2
2025-04-22 14:30:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103123830056400)#2] : 1519842251
2025-04-22 14:30:41 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 14:30:41 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:30:41 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 14:30:41 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:30:41 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 14:30:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103123830056400)#2
2025-04-22 14:30:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e0704e2
2025-04-22 14:30:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:30:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:30:41 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-22 14:30:41 INFO  AdminMenuUI - Total admins found: 1
2025-04-22 14:30:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:30:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:31:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:31:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:31:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:31:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:31:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:31:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:31:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:31:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:31:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:32:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:32:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:32:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:32:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:32:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:32:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:32:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:32:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:32:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:33:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:33:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:33:23 INFO  AdminMenuUI - Fetching all admin users.
2025-04-22 14:33:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:33:23 DEBUG results - Initializer list:
	  org.example.entity.User(103123830056400) -> EntityResultInitializer(org.example.entity.User(103123830056400))@292227890 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:33:23 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-22 14:33:23 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:33:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103123830056400)): 2
2025-04-22 14:33:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103123830056400)#2] : 1853827541
2025-04-22 14:33:23 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 14:33:23 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:33:23 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 14:33:23 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:33:23 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 14:33:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103123830056400)#2
2025-04-22 14:33:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27048db3
2025-04-22 14:33:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:33:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:33:23 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-22 14:33:23 INFO  AdminMenuUI - Total admins found: 1
2025-04-22 14:33:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:33:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:33:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:33:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:33:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:33:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:33:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:33:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:33:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:33:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:33:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:33:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:34:11 INFO  AdminMenuUI - Fetching all admin users.
2025-04-22 14:34:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:34:11 DEBUG results - Initializer list:
	  org.example.entity.User(103123830056400) -> EntityResultInitializer(org.example.entity.User(103123830056400))@2079042829 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:34:11 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-22 14:34:11 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:34:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103123830056400)): 2
2025-04-22 14:34:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103123830056400)#2] : 852412024
2025-04-22 14:34:11 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 14:34:11 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:34:11 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 14:34:11 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:34:11 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 14:34:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103123830056400)#2
2025-04-22 14:34:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14eb96e9
2025-04-22 14:34:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:34:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:34:11 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-22 14:34:11 INFO  AdminMenuUI - Total admins found: 1
2025-04-22 14:34:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:34:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:34:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:34:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:35:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:35:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:35:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:35:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:35:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:35:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:35:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:35:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:35:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:35:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:35:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:35:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:35:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:35:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:36:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:36:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:36:37 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-22 14:36:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:36:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:36:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:36:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:36:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:36:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:36:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:36:57 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1215634826 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:36:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:36:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:36:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:36:57 ERROR UserDaoImpl - Error fetching user by email admin@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.grantOrRevokeAdminAccess(AdminMenuUI.java:162) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.manageAdmins(AdminMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displaySuperAdminMenu(Unknown Source) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-22 14:36:57 WARN  AdminMenuUI - User not found with email: admin@gmail.com
2025-04-22 14:36:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:37:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:37:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:37:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:37:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:37:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:37:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:37:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:37:46 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-22 14:37:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:37:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:37:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:37:52 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1287091141 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:37:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:37:52 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:37:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-22 14:37:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 867351077
2025-04-22 14:37:52 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 14:37:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:37:52 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 14:37:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:37:52 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 14:37:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-22 14:37:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6ad198c9
2025-04-22 14:37:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:37:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:38:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:38:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:38:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:38:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:38:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:38:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:38:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:38:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:38:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:38:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:38:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:39:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:39:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:39:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:39:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:39:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:39:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:39:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:39:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:40:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:40:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:40:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:40:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:40:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:40:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:40:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:40:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:40:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:40:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:40:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:40:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:40:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:41:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:41:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:41:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:41:39 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 14:41:39 DEBUG TransactionImpl - begin
2025-04-22 14:41:39 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:41:39 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 14:41:39 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 14:41:39 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 14:41:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 14:41:39 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1560160481 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:41:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 14:41:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 2
2025-04-22 14:41:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#2] : 112176935
2025-04-22 14:41:39 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 14:41:39 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:41:39 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 14:41:39 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:41:39 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 14:41:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#2
2025-04-22 14:41:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31a024ea
2025-04-22 14:41:39 DEBUG TransactionImpl - committing
2025-04-22 14:41:39 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 14:41:39 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 14:41:39 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-22 14:41:39 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 14:41:39 DEBUG EntityPrinter - Listing entities:
2025-04-22 14:41:39 DEBUG EntityPrinter - org.example.entity.User{password=password, name=ADMIN, isActive=true, userRole=ADMIN, userID=2, email=admin@dss.com}
2025-04-22 14:41:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:41:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:41:39 INFO  AdminMenuUI - Admin access granted to user: admin@dss.com
2025-04-22 14:41:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:41:46 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-22 14:41:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:41:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:41:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:41:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:41:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:41:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:41:59 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@713961699 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:41:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:41:59 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:41:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-22 14:41:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 2118457232
2025-04-22 14:41:59 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 14:41:59 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:41:59 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 14:41:59 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:41:59 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 14:41:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-22 14:41:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25172993
2025-04-22 14:41:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:41:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:42:07 INFO  AdminMenuUI - Admin access grant/revoke cancelled by user.
2025-04-22 14:42:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:42:15 DEBUG hql - HQL : FROM User WHERE userRole = 'STAFF'
2025-04-22 14:42:15 DEBUG hql - Unable to resolve unqualified attribute [userRole] in local from-clause
2025-04-22 14:42:15 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(103818084728400)`
            <- [root] - `org.example.entity.User(103818084728400)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(103818084728400)`
          <- [root] - `org.example.entity.User(103818084728400)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(103818084728400).userRole`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 14:42:15 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:42:15 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(103818084728400))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 14:42:15 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(103818084728400).userRole) 
2025-04-22 14:42:15 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(103818084728400)]
 |  +-BasicFetch [org.example.entity.User(103818084728400).email]
 |  +-BasicFetch [org.example.entity.User(103818084728400).isActive]
 |  +-BasicFetch [org.example.entity.User(103818084728400).name]
 |  +-BasicFetch [org.example.entity.User(103818084728400).password]
 |  \-BasicFetch [org.example.entity.User(103818084728400).userRole]

2025-04-22 14:42:15 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(103818084728400)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 14:42:15 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:42:15 DEBUG results - Initializer list:
	  org.example.entity.User(103818084728400) -> EntityResultInitializer(org.example.entity.User(103818084728400))@1530060977 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:42:15 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 14:42:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103818084728400)): 8
2025-04-22 14:42:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103818084728400)#8] : 602552403
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 14:42:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103818084728400)#8
2025-04-22 14:42:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f1163f7
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 14:42:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103818084728400)): 34
2025-04-22 14:42:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103818084728400)#34] : 239290560
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 14:42:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103818084728400)#34
2025-04-22 14:42:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f1163f7
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 14:42:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103818084728400)): 35
2025-04-22 14:42:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103818084728400)#35] : 1286145967
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 14:42:15 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 14:42:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103818084728400)#35
2025-04-22 14:42:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f1163f7
2025-04-22 14:42:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:42:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:42:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:42:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:42:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:42:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:42:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:42:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:42:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:42:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:43:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:43:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:43:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:43:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:43:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:43:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:43:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:43:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:43:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:43:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:44:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:44:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:44:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:44:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:44:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:44:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:44:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:44:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:44:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:44:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:45:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:45:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:45:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:45:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:45:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:45:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:45:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:45:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:45:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:45:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:46:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:46:03 DEBUG results - Initializer list:
	  org.example.entity.User(103818084728400) -> EntityResultInitializer(org.example.entity.User(103818084728400))@1519998011 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:46:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 14:46:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103818084728400)): 8
2025-04-22 14:46:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103818084728400)#8] : 1753178789
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 14:46:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103818084728400)#8
2025-04-22 14:46:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7857cb1d
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 14:46:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103818084728400)): 34
2025-04-22 14:46:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103818084728400)#34] : 1984350709
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 14:46:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103818084728400)#34
2025-04-22 14:46:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7857cb1d
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 14:46:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103818084728400)): 35
2025-04-22 14:46:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103818084728400)#35] : 2069143716
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 14:46:03 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 14:46:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103818084728400)#35
2025-04-22 14:46:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7857cb1d
2025-04-22 14:46:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:46:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:46:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:46:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:46:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:46:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:46:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:46:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:46:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:46:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:46:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:46:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:46:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:47:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:47:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:47:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:47:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:47:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:47:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:47:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:47:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:47:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:48:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:48:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:48:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:48:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:48:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:48:21 DEBUG results - Initializer list:
	  org.example.entity.User(103818084728400) -> EntityResultInitializer(org.example.entity.User(103818084728400))@1747820321 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:48:21 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 14:48:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103818084728400)): 8
2025-04-22 14:48:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103818084728400)#8] : 815927219
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 14:48:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103818084728400)#8
2025-04-22 14:48:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34f24a11
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 14:48:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103818084728400)): 34
2025-04-22 14:48:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103818084728400)#34] : 1064122091
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 14:48:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103818084728400)#34
2025-04-22 14:48:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34f24a11
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 14:48:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(103818084728400)): 35
2025-04-22 14:48:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(103818084728400)#35] : 1062913415
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 14:48:21 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 14:48:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(103818084728400)#35
2025-04-22 14:48:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34f24a11
2025-04-22 14:48:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:48:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:48:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:48:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:48:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:48:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:48:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:48:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:49:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:49:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:49:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:49:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7827a4c1 is alive
2025-04-22 14:49:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b4aa127 is alive
2025-04-22 14:49:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e37c667 is alive
2025-04-22 14:49:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad94a7 is alive
2025-04-22 14:49:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6e64b is alive
2025-04-22 14:49:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:49:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:50:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5165ed05 is alive
2025-04-22 14:50:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68392359 is alive
2025-04-22 14:50:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e83bb10 is alive
2025-04-22 14:50:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:50:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:50:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2061f698 is alive
2025-04-22 14:50:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:50:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:50:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@755bad0b is alive
2025-04-22 14:51:15 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 14:51:15 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 14:51:15 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 14:51:15 DEBUG HikariConfig - autoCommit......................true
2025-04-22 14:51:15 DEBUG HikariConfig - catalog.........................none
2025-04-22 14:51:15 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 14:51:15 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 14:51:15 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 14:51:15 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-22 14:51:15 DEBUG HikariConfig - dataSource......................none
2025-04-22 14:51:15 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 14:51:15 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 14:51:15 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 14:51:15 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 14:51:15 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 14:51:15 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 14:51:15 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 14:51:15 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 14:51:15 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 14:51:15 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 14:51:15 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 14:51:15 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 14:51:15 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 14:51:15 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 14:51:15 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 14:51:15 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 14:51:15 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 14:51:15 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 14:51:15 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 14:51:15 DEBUG HikariConfig - password........................<masked>
2025-04-22 14:51:15 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 14:51:15 DEBUG HikariConfig - readOnly........................false
2025-04-22 14:51:15 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 14:51:15 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 14:51:15 DEBUG HikariConfig - schema..........................none
2025-04-22 14:51:15 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 14:51:15 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 14:51:15 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 14:51:15 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 14:51:15 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4ba39bf5-d0fb-4f23-afa4-8a00dc026b9b)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Established new connection (4ba39bf5-d0fb-4f23-afa4-8a00dc026b9b)
2025-04-22 14:51:15 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@475835b1
2025-04-22 14:51:15 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 14:51:15 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 14:51:15 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 14:51:15 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 14:51:15 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 14:51:15 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9380cf8f-26c6-4311-9ed1-d4ad32d193a5)
2025-04-22 14:51:15 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Established new connection (9380cf8f-26c6-4311-9ed1-d4ad32d193a5)
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2562c7be
2025-04-22 14:51:15 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 14:51:15 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 14:51:15 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 14:51:15 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4bdb8792-e564-4356-a419-ae6277afd790)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Established new connection (4bdb8792-e564-4356-a419-ae6277afd790)
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6226d8e6
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b4806664-eb7e-4946-ac63-eb84763c670b)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Established new connection (b4806664-eb7e-4946-ac63-eb84763c670b)
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d17f904
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2234078
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@66908383
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9e672615-8ca5-4886-b1cd-4086e9a2e099)
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2e3a5237
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-22 14:51:15 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-22 14:51:15 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3e9803c2] into BootstrapContext; was [null]
2025-04-22 14:51:15 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4525d1d3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c974942]
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Established new connection (9e672615-8ca5-4886-b1cd-4086e9a2e099)
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@720f9000
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3df0dc12-33fe-4e3a-ad24-e38bbfe0984a)
2025-04-22 14:51:15 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 14:51:15 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 14:51:15 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Established new connection (3df0dc12-33fe-4e3a-ad24-e38bbfe0984a)
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@45e7eb4
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (63e35f0f-50f3-4501-9820-e68294544271)
2025-04-22 14:51:15 DEBUG PoolBase - HikariPool-1 - Established new connection (63e35f0f-50f3-4501-9820-e68294544271)
2025-04-22 14:51:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6d6920aa
2025-04-22 14:51:16 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-22 14:51:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (34c9df1f-4908-42bc-9bec-4d02f167383e)
2025-04-22 14:51:16 DEBUG PoolBase - HikariPool-1 - Established new connection (34c9df1f-4908-42bc-9bec-4d02f167383e)
2025-04-22 14:51:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d5d5e71
2025-04-22 14:51:16 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-22 14:51:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5180b284-077e-4f4a-9a9a-1545aecd3d19)
2025-04-22 14:51:16 DEBUG PoolBase - HikariPool-1 - Established new connection (5180b284-077e-4f4a-9a9a-1545aecd3d19)
2025-04-22 14:51:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@329a7730
2025-04-22 14:51:16 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 14:51:16 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 14:51:16 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 14:51:16 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-22 14:51:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (69921cfe-82cb-401d-8221-a8b9aca56e67)
2025-04-22 14:51:16 DEBUG PoolBase - HikariPool-1 - Established new connection (69921cfe-82cb-401d-8221-a8b9aca56e67)
2025-04-22 14:51:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23088fff
2025-04-22 14:51:16 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 14:51:16 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 14:51:16 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-22 14:51:16 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 14:51:16 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@700f518a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b835727)
2025-04-22 14:51:16 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13da7ab0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c8662ac)
2025-04-22 14:51:16 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 14:51:16 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@65327f5`
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 14:51:16 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 14:51:16 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 14:51:16 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36bf84e]
2025-04-22 14:51:16 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 14:51:16 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 14:51:16 DEBUG EntityBinder - Import with entity name User
2025-04-22 14:51:16 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property userID
2025-04-22 14:51:16 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property email
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property isActive
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property name
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property password
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property userRole
2025-04-22 14:51:16 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 14:51:16 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 14:51:16 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property guestId
2025-04-22 14:51:16 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property age
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property name
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property user
2025-04-22 14:51:16 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 14:51:16 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 14:51:16 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property bookingId
2025-04-22 14:51:16 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property checkIn
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property checkOut
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property room
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property status
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property user
2025-04-22 14:51:16 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 14:51:16 DEBUG EntityBinder - Import with entity name Room
2025-04-22 14:51:16 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property roomID
2025-04-22 14:51:16 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property price
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property roomType
2025-04-22 14:51:16 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 14:51:16 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 14:51:16 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 14:51:16 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property amount
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property booking
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property issueDate
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 14:51:16 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 14:51:16 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 14:51:16 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 14:51:16 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 14:51:16 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 14:51:16 DEBUG PropertyBinder - Building property user
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 14:51:16 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 14:51:16 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 14:51:16 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 14:51:16 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 14:51:16 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 14:51:16 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 14:51:16 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 14:51:16 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 14:51:16 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 14:51:16 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@9b23822, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-22 14:51:16 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3a8cea24] under count; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2ba1209b] under every; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7c241a9f] under any; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49] under sinh; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47] under cosh; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba] under tanh; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0] under pi; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680] under log; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6002e944] under position; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d] under overlay; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@469a7575] under trim; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@412c5e8b] under cast; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@637791d] under collate; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@18b6d3c1] under extract; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d86b9d] under ifnull; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@800d065] under pad; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5a0e0886] under str; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@262a1fad] under format; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@e7b265e] under timestampadd; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@33f2cfda] under timestampdiff; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under current_date; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under current_time; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under current_timestamp; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under local_date; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cde8c6c] under local_time; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@174721c4] under local_datetime; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3592c1c4] under offset_datetime; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@322e49ee] under instant; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7126e26] under sql; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@151ab2b9] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@19489b27] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@cde8c6c
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@174721c4
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@125d47c4] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@193bb809] under bit_length; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64b018f3] under octet_length; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6002e944
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under bitand; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2] under bitor; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805] under bitxor; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f2466c] under bitnot; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5809fa26] under median; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23468512] under insert; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3caafa67] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e546734] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1c61eda5] under listagg; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4bc6da03] under array; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4f59a516] under array_list; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3e046e39] under array_agg; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@62a54948] under array_position; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@316cda31] under array_positions; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7a2fce12] under array_positions_list; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66e17eff] under array_length; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@764b14b8] under array_concat; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@100ad67e] under array_prepend; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@713a35c5] under array_append; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@309dcdf3] under array_contains; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7573b9ee] under array_contains_nullable; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f73ce28] under array_overlaps; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@611b35d6] under array_overlaps_nullable; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dd3f8aa] under array_get; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@65c5bf0e] under array_set; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@160b4809] under array_remove_index; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@149b4d20] under array_slice; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@664e848c] under array_trim; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@251c4280] under array_fill; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@35650279] under array_fill_list; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@420a8042] under array_to_string; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69f2cb04] under mode; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@13803a94] under percentile_cont; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@b4732dc] under percentile_disc; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ad9b8d3] under rank; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@168ad26f] under dense_rank; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f93bf0a] under percent_rank; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@322204dc] under cume_dist; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@55acec99] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@61191222] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58833798] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2519026b] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@385dfb63] under trunc; prior registration was null
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 14:51:16 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@364fd4ae] under date_trunc; prior registration was null
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 14:51:16 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 14:51:16 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 14:51:17 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 14:51:17 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 14:51:17 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:51:17 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 14:51:17 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 14:51:17 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:51:17 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:51:17 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:51:17 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:51:17 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 14:51:17 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 14:51:17 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:51:17 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 14:51:17 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 14:51:17 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 14:51:17 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 14:51:17 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 14:51:17 DEBUG creation - Starting post-init callbacks
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 14:51:17 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 14:51:17 DEBUG create - Created new SQL alias : g1_0
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1669931a] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 14:51:17 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:51:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 14:51:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 14:51:17 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 14:51:17 DEBUG create - Created new SQL alias : b1_0
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c2dd89b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 14:51:17 DEBUG create - Created new SQL alias : r1_0
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d84418a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 14:51:17 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:51:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 14:51:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 14:51:17 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 14:51:17 DEBUG create - Created new SQL alias : r1_0
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 14:51:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 14:51:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 14:51:17 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 14:51:17 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 14:51:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 14:51:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 14:51:17 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 14:51:17 DEBUG create - Created new SQL alias : i1_0
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@18dd7767] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 14:51:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e7bb00e] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 14:51:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 14:51:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 14:51:17 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 14:51:17 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 14:51:17 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 14:51:17 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 14:51:17 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 14:51:17 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 14:51:17 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@563172d3]
2025-04-22 14:51:17 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 14:51:17 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 14:51:17 DEBUG Table - No alter strings for table : bookings
2025-04-22 14:51:17 DEBUG Table - No alter strings for table : guests
2025-04-22 14:51:17 DEBUG Table - No alter strings for table : invoices
2025-04-22 14:51:17 DEBUG Table - No alter strings for table : rooms
2025-04-22 14:51:17 DEBUG Table - No alter strings for table : users
2025-04-22 14:51:17 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6c5ae8fd
2025-04-22 14:51:17 DEBUG SessionFactoryRegistry - Registering SessionFactory: ffe1b930-efe6-442c-94bd-7d8dc7984c37 (my-persistence-unit)
2025-04-22 14:51:17 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 14:51:17 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 14:51:17 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 14:51:17 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 14:51:18 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 14:51:18 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 14:51:18 DEBUG create - Created new SQL alias : u1_0
2025-04-22 14:51:18 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 14:51:18 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 14:51:18 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 14:51:18 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 14:51:18 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 14:51:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:51:18 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2018545259 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:51:18 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 14:51:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 14:51:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 597521407
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 14:51:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 14:51:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@336070ab
2025-04-22 14:51:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:51:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:51:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:51:18 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@876008407 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 14:51:18 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 14:51:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 14:51:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 934572255
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 14:51:18 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 14:51:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 14:51:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@359ea595
2025-04-22 14:51:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:51:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:51:18 INFO  HomeMenuUI - Login successful: SUPER ADMIN (SUPER_ADMIN)
2025-04-22 14:51:20 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 14:51:21 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 14:51:21 DEBUG create - Created new SQL alias : r1_0
2025-04-22 14:51:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 14:51:21 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 14:51:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 14:51:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 14:51:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:51:21 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@710973468 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 14:51:21 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 909418025
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1853858992
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1820295244
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1049228732
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 630910066
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 919836245
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 649989411
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1466644573
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 627091390
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 262929529
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1504325562
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1468882178
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2012237082
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 661139369
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 800523009
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 14:51:21 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:51:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 14:51:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 14:51:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:51:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:51:21 INFO  AdminMenuUI - Displayed 15 available rooms.
2025-04-22 14:51:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:51:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:52:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:52:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:52:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:52:16 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@382329720 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 14:52:16 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 13080448
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1692817328
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1342257685
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1816583170
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1443288375
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 742288
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1501761558
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 58683880
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1672524765
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 964557800
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 2017419121
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 3641775
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1728050223
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 814473635
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 852354068
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 14:52:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:52:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 14:52:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@594c66c3
2025-04-22 14:52:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:52:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:52:16 INFO  AdminMenuUI - Displayed 15 available rooms.
2025-04-22 14:52:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:52:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:52:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6226d8e6 is alive
2025-04-22 14:52:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45e7eb4 is alive
2025-04-22 14:52:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23088fff is alive
2025-04-22 14:53:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2562c7be is alive
2025-04-22 14:53:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 14:53:01 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1382394077 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 14:53:01 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1911222122
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1974317504
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1560160481
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 2059996587
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1087598842
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1483270801
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1971087453
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1198167820
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 484801467
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 54929108
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 367954017
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 112176935
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 832578794
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 56804492
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1655630081
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 14:53:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 14:53:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 14:53:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3692ca
2025-04-22 14:53:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:53:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 14:53:01 INFO  AdminMenuUI - Displayed 15 available rooms.
2025-04-22 14:53:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d17f904 is alive
2025-04-22 14:53:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d5e71 is alive
2025-04-22 14:53:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 14:53:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@720f9000 is alive
2025-04-22 14:53:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6d6920aa is alive
2025-04-22 14:53:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@329a7730 is alive
2025-04-22 14:53:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:53:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:53:39 DEBUG hql - HQL : SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC
2025-04-22 14:53:39 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 14:53:39 ERROR BookingDaoImpl - Error occurred while fetching all bookings
java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:890) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:215) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getAllBookings(BookingDaoImpl.java:111) [classes/:?]
	at org.example.service.BookingServiceImpl.getAllBookings(BookingServiceImpl.java:84) [classes/:?]
	at org.example.controller.BookingController.getAllBookings(BookingController.java:79) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.viewAllBookings(AdminMenuUI.java:274) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displaySuperAdminMenu(Unknown Source) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:192) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:270) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:106) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5262) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5211) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5186) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4719) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:5177) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4514) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2268) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2212) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:2025) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:2004) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1235) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1032) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1017) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2003) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:487) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:446) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:319) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-22 14:53:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:53:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:53:46 DEBUG hql - HQL : SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC
2025-04-22 14:53:46 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 14:53:46 ERROR BookingDaoImpl - Error occurred while fetching all bookings
java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:890) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:215) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getAllBookings(BookingDaoImpl.java:111) [classes/:?]
	at org.example.service.BookingServiceImpl.getAllBookings(BookingServiceImpl.java:84) [classes/:?]
	at org.example.controller.BookingController.getAllBookings(BookingController.java:79) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.viewAllBookings(AdminMenuUI.java:274) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displaySuperAdminMenu(Unknown Source) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:192) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:270) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:106) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5262) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5211) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5186) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4719) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:5177) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4514) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2268) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2212) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:2025) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:2004) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1235) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1032) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1017) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2003) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:487) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:446) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:319) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-22 14:54:10 DEBUG hql - HQL : SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC
2025-04-22 14:54:10 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 14:54:10 ERROR BookingDaoImpl - Error occurred while fetching all bookings
java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:890) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:215) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getAllBookings(BookingDaoImpl.java:111) [classes/:?]
	at org.example.service.BookingServiceImpl.getAllBookings(BookingServiceImpl.java:84) [classes/:?]
	at org.example.controller.BookingController.getAllBookings(BookingController.java:79) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.viewAllBookings(AdminMenuUI.java:274) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displaySuperAdminMenu(Unknown Source) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:192) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:270) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:106) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5262) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5211) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5186) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4719) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:5177) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4514) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2268) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2212) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:2025) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:2004) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1235) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1032) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1017) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2003) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:487) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:446) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:319) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-22 14:54:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:54:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:54:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6226d8e6 is alive
2025-04-22 14:54:41 DEBUG hql - HQL : SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC
2025-04-22 14:54:41 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 14:54:41 ERROR BookingDaoImpl - Error occurred while fetching all bookings
java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:890) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:215) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getAllBookings(BookingDaoImpl.java:111) [classes/:?]
	at org.example.service.BookingServiceImpl.getAllBookings(BookingServiceImpl.java:84) [classes/:?]
	at org.example.controller.BookingController.getAllBookings(BookingController.java:79) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.viewAllBookings(AdminMenuUI.java:274) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displaySuperAdminMenu(Unknown Source) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:192) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:270) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:106) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5262) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5211) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5186) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4719) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:5177) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4514) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2268) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2212) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:2025) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:2004) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1235) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1032) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1017) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2003) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:487) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:446) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:319) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-22 14:54:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23088fff is alive
2025-04-22 14:54:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45e7eb4 is alive
2025-04-22 14:54:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2562c7be is alive
2025-04-22 14:54:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:54:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:54:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d17f904 is alive
2025-04-22 14:54:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d5e71 is alive
2025-04-22 14:54:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 14:54:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@720f9000 is alive
2025-04-22 14:54:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6d6920aa is alive
2025-04-22 14:55:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@329a7730 is alive
2025-04-22 14:55:15 DEBUG hql - HQL : SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC
2025-04-22 14:55:15 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 14:55:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:55:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:59:18 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m57s631ms227µs500ns).
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6226d8e6 is alive
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23088fff is alive
2025-04-22 14:59:18 ERROR BookingDaoImpl - Error occurred while fetching all bookings
java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:890) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:215) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getAllBookings(BookingDaoImpl.java:111) [classes/:?]
	at org.example.service.BookingServiceImpl.getAllBookings(BookingServiceImpl.java:84) [classes/:?]
	at org.example.controller.BookingController.getAllBookings(BookingController.java:79) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.viewAllBookings(AdminMenuUI.java:274) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displaySuperAdminMenu(Unknown Source) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:192) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:270) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:106) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5262) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5211) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5186) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4719) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:5177) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4514) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2268) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2212) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:2025) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:2004) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1235) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1032) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1017) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2003) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:487) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:446) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:319) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45e7eb4 is alive
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2562c7be is alive
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d17f904 is alive
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d5d5e71 is alive
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@720f9000 is alive
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6d6920aa is alive
2025-04-22 14:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@329a7730 is alive
2025-04-22 15:00:11 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 15:00:11 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 15:00:11 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 15:00:11 DEBUG HikariConfig - autoCommit......................true
2025-04-22 15:00:11 DEBUG HikariConfig - catalog.........................none
2025-04-22 15:00:11 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 15:00:11 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 15:00:11 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 15:00:11 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-22 15:00:11 DEBUG HikariConfig - dataSource......................none
2025-04-22 15:00:11 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 15:00:11 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 15:00:11 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 15:00:11 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 15:00:11 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 15:00:11 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 15:00:11 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 15:00:11 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 15:00:11 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 15:00:11 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 15:00:11 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 15:00:11 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 15:00:11 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 15:00:11 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 15:00:11 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 15:00:11 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 15:00:11 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 15:00:11 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 15:00:11 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 15:00:11 DEBUG HikariConfig - password........................<masked>
2025-04-22 15:00:11 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 15:00:11 DEBUG HikariConfig - readOnly........................false
2025-04-22 15:00:11 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 15:00:11 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 15:00:11 DEBUG HikariConfig - schema..........................none
2025-04-22 15:00:11 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 15:00:11 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 15:00:11 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 15:00:11 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 15:00:11 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f1180a4b-a531-4e32-8089-f8b51a58d671)
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Established new connection (f1180a4b-a531-4e32-8089-f8b51a58d671)
2025-04-22 15:00:11 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c7a975a
2025-04-22 15:00:11 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 15:00:11 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 15:00:11 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 15:00:11 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 15:00:11 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 15:00:11 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 15:00:11 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (03af9206-bde2-44bf-9999-06bc0f4e8554)
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Established new connection (03af9206-bde2-44bf-9999-06bc0f4e8554)
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@64f0528f
2025-04-22 15:00:11 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 15:00:11 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2a2833ee-7ac3-4400-aaee-941e6af4d78a)
2025-04-22 15:00:11 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 15:00:11 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Established new connection (2a2833ee-7ac3-4400-aaee-941e6af4d78a)
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@761ba8e4
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9e4a0842-a7d3-44ee-ab78-9c44fa6b4f80)
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Established new connection (9e4a0842-a7d3-44ee-ab78-9c44fa6b4f80)
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46e80899
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3a60c416
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3a60c416
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@60f2e0bd
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@60f2e0bd
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@779de014
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2234078
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66908383
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ac173a92-5391-46e1-9a37-987ce874fcbd)
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4565a70a
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4565a70a
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@65327f5
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2adddc06
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@301d8120
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6d367020
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@72458efc
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@36bc415e
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a74d228
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@349d0836
2025-04-22 15:00:11 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-22 15:00:11 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@682c1e93] into BootstrapContext; was [null]
2025-04-22 15:00:11 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27068a50] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68e62ca4]
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Established new connection (ac173a92-5391-46e1-9a37-987ce874fcbd)
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ac08256
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 15:00:11 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 15:00:11 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cb87ecd6-6aa6-447f-a0ad-1b45953ab584)
2025-04-22 15:00:11 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Established new connection (cb87ecd6-6aa6-447f-a0ad-1b45953ab584)
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@729b2222
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b8438106-eaa9-4b9d-9ce7-1fa784ce1bed)
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Established new connection (b8438106-eaa9-4b9d-9ce7-1fa784ce1bed)
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@324da078
2025-04-22 15:00:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-22 15:00:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3353bb61-25b9-412d-912f-d487f5bc54f6)
2025-04-22 15:00:12 DEBUG PoolBase - HikariPool-1 - Established new connection (3353bb61-25b9-412d-912f-d487f5bc54f6)
2025-04-22 15:00:12 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@29d337dd
2025-04-22 15:00:12 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-22 15:00:12 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7b135029-94a7-4f8f-8ea2-0946ae6c7cb6)
2025-04-22 15:00:12 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 15:00:12 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 15:00:12 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 15:00:12 DEBUG PoolBase - HikariPool-1 - Established new connection (7b135029-94a7-4f8f-8ea2-0946ae6c7cb6)
2025-04-22 15:00:12 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2ffce41f
2025-04-22 15:00:12 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-22 15:00:12 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (49eee64c-53d7-4c26-8819-cba25242ed8e)
2025-04-22 15:00:12 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 15:00:12 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 15:00:12 DEBUG PoolBase - HikariPool-1 - Established new connection (49eee64c-53d7-4c26-8819-cba25242ed8e)
2025-04-22 15:00:12 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@42b76928
2025-04-22 15:00:12 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 15:00:12 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:00:12 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@37af1f93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@778d82e9)
2025-04-22 15:00:12 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@408e96d9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59901c4d)
2025-04-22 15:00:12 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 15:00:12 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2ab0702e
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2ab0702e
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4565a70a`
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:00:12 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:00:12 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 15:00:12 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26b95b0b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f7da3d3]
2025-04-22 15:00:12 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 15:00:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 15:00:12 DEBUG EntityBinder - Import with entity name User
2025-04-22 15:00:12 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property userID
2025-04-22 15:00:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property email
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property isActive
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property name
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property password
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property userRole
2025-04-22 15:00:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 15:00:12 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 15:00:12 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property guestId
2025-04-22 15:00:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property age
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property name
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property user
2025-04-22 15:00:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 15:00:12 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 15:00:12 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property bookingId
2025-04-22 15:00:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property checkIn
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property checkOut
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property room
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property status
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property user
2025-04-22 15:00:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 15:00:12 DEBUG EntityBinder - Import with entity name Room
2025-04-22 15:00:12 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property roomID
2025-04-22 15:00:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property price
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property roomType
2025-04-22 15:00:12 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 15:00:12 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 15:00:12 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 15:00:12 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property amount
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property booking
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property issueDate
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 15:00:12 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 15:00:12 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 15:00:12 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 15:00:12 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:00:12 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:00:12 DEBUG PropertyBinder - Building property user
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 15:00:12 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 15:00:12 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 15:00:12 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 15:00:12 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 15:00:12 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 15:00:12 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 15:00:12 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 15:00:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 15:00:12 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 15:00:12 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@707ca986, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-22 15:00:12 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@72443081] under count; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b2bf745] under every; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6fe595dc] under any; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@337a6d30] under sinh; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2921a36a] under cosh; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b73bd6b] under tanh; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45] under pi; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@750ed637] under log; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@575cabf0] under position; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f4596d0] under overlay; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@78a8978a] under trim; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3b24087d] under cast; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under collate; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4351ed61] under extract; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1c34365c] under ifnull; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3b0c3951] under pad; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@422ab737] under str; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@d13960e] under format; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@122635ef] under timestampadd; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@262a1fad] under timestampdiff; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e7b265e] under current_date; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51da32e5] under current_time; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33d60b7e] under current_timestamp; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1fecfaea] under local_date; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4872669f] under local_time; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483f286e] under local_datetime; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4bb147ec] under offset_datetime; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33f2cfda] under instant; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3dc40ab9] under sql; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@750ed637
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db6d68d] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b73bd6b
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@337a6d30
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2921a36a
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@174721c4] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4872669f
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@483f286e
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@648c5fb3] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@47b33e07] under bit_length; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7126e26] under octet_length; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@151ab2b9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@575cabf0
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13ed066e] under bitand; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d705112] under bitor; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@590765c4] under bitxor; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19489b27] under bitnot; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@626d2016] under median; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f116ca2] under insert; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@20801cbb] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f4596d0
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@581b1c08] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@69cd7630] under listagg; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@59838256] under array; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@131a7516] under array_list; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@52d3fafd] under array_agg; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2c26ba07] under array_position; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@23c767e6] under array_positions; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6661d8c0] under array_positions_list; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@310b2b6f] under array_length; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7a2fce12] under array_concat; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@4a070cf0] under array_prepend; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@764b14b8] under array_append; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@6367a688] under array_contains; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@319642db] under array_contains_nullable; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@309dcdf3] under array_overlaps; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7573b9ee] under array_overlaps_nullable; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c0c4c0a] under array_get; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@66e21568] under array_set; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@543d5863] under array_remove_index; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35dece42] under array_slice; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dd3f8aa] under array_trim; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@149b4d20] under array_fill; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@664e848c] under array_fill_list; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5d508d22] under array_to_string; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@251c4280] under mode; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@35650279] under percentile_cont; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@79a13920] under percentile_disc; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3292d91a] under rank; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5921b93c] under dense_rank; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@faea4da] under percent_rank; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@19b02dfd] under cume_dist; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@b4732dc] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@45292ec1] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7c678b] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@590765c4
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4f93bf0a] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@27dc627a] under trunc; prior registration was null
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 15:00:12 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@570ba13] under date_trunc; prior registration was null
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 15:00:12 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 15:00:12 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 15:00:12 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 15:00:12 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 15:00:13 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:00:13 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 15:00:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 15:00:13 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:00:13 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:00:13 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:00:13 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:00:13 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 15:00:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 15:00:13 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:00:13 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 15:00:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 15:00:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 15:00:13 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 15:00:13 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 15:00:13 DEBUG creation - Starting post-init callbacks
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 15:00:13 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 15:00:13 DEBUG create - Created new SQL alias : g1_0
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34f23816] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 15:00:13 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:00:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 15:00:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 15:00:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 15:00:13 DEBUG create - Created new SQL alias : b1_0
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6003220a] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 15:00:13 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b395581] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 15:00:13 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:00:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 15:00:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 15:00:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 15:00:13 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 15:00:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 15:00:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 15:00:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 15:00:13 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:00:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 15:00:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:00:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 15:00:13 DEBUG create - Created new SQL alias : i1_0
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@19faedcc] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 15:00:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@45e11627] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 15:00:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 15:00:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 15:00:13 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 15:00:13 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 15:00:13 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 15:00:13 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 15:00:13 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 15:00:13 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 15:00:13 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26b95b0b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@59fea5f5]
2025-04-22 15:00:13 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 15:00:13 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 15:00:13 DEBUG Table - No alter strings for table : bookings
2025-04-22 15:00:13 DEBUG Table - No alter strings for table : guests
2025-04-22 15:00:13 DEBUG Table - No alter strings for table : invoices
2025-04-22 15:00:13 DEBUG Table - No alter strings for table : rooms
2025-04-22 15:00:13 DEBUG Table - No alter strings for table : users
2025-04-22 15:00:13 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@74fc3fc7
2025-04-22 15:00:13 DEBUG SessionFactoryRegistry - Registering SessionFactory: d7260a10-e0b0-4c72-9b37-f961e0e45acf (my-persistence-unit)
2025-04-22 15:00:13 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 15:00:13 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 15:00:13 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 15:00:13 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 15:00:14 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 15:00:14 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:00:14 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:00:14 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:00:14 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 15:00:14 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 15:00:14 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 15:00:14 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:00:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:00:14 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1560327273 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:00:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:00:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:00:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:00:14 ERROR UserDaoImpl - Error fetching user by email superadmin@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.authenticateUser(UserServiceImpl.java:59) [classes/:?]
	at org.example.controller.UserController.authenticateUser(UserController.java:41) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:74) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-22 15:00:14 WARN  HomeMenuUI - Invalid login attempt for email: superadmin@gmail.com
2025-04-22 15:00:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:00:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1721039643 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:00:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:00:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 15:00:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 712222287
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 15:00:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 15:00:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58afecfd
2025-04-22 15:00:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:00:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:00:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:00:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1046723947 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:00:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:00:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 15:00:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1821215584
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:00:36 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 15:00:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 15:00:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4fa6fb7f
2025-04-22 15:00:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:00:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:00:36 INFO  HomeMenuUI - Login successful: SUPER ADMIN (SUPER_ADMIN)
2025-04-22 15:00:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:00:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:00:46 DEBUG hql - HQL : SELECT i FROM Invoice i JOIN FETCH i.booking b  JOIN FETCH b.user  JOIN FETCH b.room  ORDER BY b.checkIn DESC 
2025-04-22 15:00:46 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
              -> [joins]
                -> [attribute] - `org.example.entity.Invoice(i).booking(b)`
                    [fetched = true]
                  -> [joins]
                    -> [attribute] - `org.example.entity.Invoice(i).booking(b).user(104929704121300)`
                        [fetched = true]
                    <- [attribute] - `org.example.entity.Invoice(i).booking(b).user(104929704121300)`
                    -> [attribute] - `org.example.entity.Invoice(i).booking(b).room(104929704329000)`
                        [fetched = true]
                    <- [attribute] - `org.example.entity.Invoice(i).booking(b).room(104929704329000)`
                  <- [joins]
                <- [attribute] - `org.example.entity.Invoice(i).booking(b)`
              <- [joins]
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
            -> [joins]
              -> [attribute] - `org.example.entity.Invoice(i).booking(b)`
                  [fetched = true]
                -> [joins]
                  -> [attribute] - `org.example.entity.Invoice(i).booking(b).user(104929704121300)`
                      [fetched = true]
                  <- [attribute] - `org.example.entity.Invoice(i).booking(b).user(104929704121300)`
                  -> [attribute] - `org.example.entity.Invoice(i).booking(b).room(104929704329000)`
                      [fetched = true]
                  <- [attribute] - `org.example.entity.Invoice(i).booking(b).room(104929704329000)`
                <- [joins]
              <- [attribute] - `org.example.entity.Invoice(i).booking(b)`
            <- [joins]
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-04-22 15:00:48 DEBUG create - Created new SQL alias : i1_0
2025-04-22 15:00:48 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 15:00:48 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f4cb17b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 15:00:48 DEBUG create - Created new SQL alias : b1_0
2025-04-22 15:00:48 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6148827c] with identifierForTableGroup [org.example.entity.Invoice.booking.user] for NavigablePath [org.example.entity.Invoice.booking.user] 
2025-04-22 15:00:48 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4da9da6c] with identifierForTableGroup [org.example.entity.Invoice.booking.room] for NavigablePath [org.example.entity.Invoice.booking.room] 
2025-04-22 15:00:48 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:00:48 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:00:48 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@66048c9e] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 15:00:48 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityFetchJoinedImpl [org.example.entity.Invoice(i).booking(b)]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-22 15:00:48 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
             join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking(b)) {
              primaryTableReference : bookings as b1_0
              TableGroupJoins {
                 join LazyTableGroup (u1 : org.example.entity.Invoice(i).booking(b).user(104929704121300)) {
                  primaryTableReference : users as u1_0
                }
                 join LazyTableGroup (r1 : org.example.entity.Invoice(i).booking(b).room(104929704329000)) {
                  primaryTableReference : rooms as r1_0
                }
              }
            }
            left  join LazyTableGroup (u2 : org.example.entity.Invoice(i).user) {
            }
          }
        }
      }
    }

2025-04-22 15:00:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:00:48 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@476499202 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@492002168)
	  org.example.entity.Invoice(i).booking(b).room(104929704329000) -> EntityJoinedFetchInitializer(org.example.entity.Invoice(i).booking(b).room(104929704329000))@902795743 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1436969919)
	  org.example.entity.Invoice(i).booking(b).user(104929704121300) -> EntityJoinedFetchInitializer(org.example.entity.Invoice(i).booking(b).user(104929704121300))@2130883284 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2014166743)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@830839136 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking(b) -> EntityJoinedFetchInitializer(org.example.entity.Invoice(i).booking(b))@1461249916 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1030126425)

2025-04-22 15:00:48 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 join bookings b1_0 on b1_0.booking_id=i1_0.booking_id join users u1_0 on u1_0.user_id=b1_0.user_id join rooms r1_0 on r1_0.room_id=b1_0.room_id order by b1_0.check_in desc
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [0] - [45]
2025-04-22 15:00:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 45
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [3] - [73]
2025-04-22 15:00:48 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Invoice(i).booking(b)): 73
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [2] - [73]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [7] - [1]
2025-04-22 15:00:48 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Invoice(i).booking(b).room(104929704329000)): 1
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [6] - [1]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [14] - [13]
2025-04-22 15:00:48 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Invoice(i).booking(b).user(104929704121300)): 13
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [13] - [13]
2025-04-22 15:00:48 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Invoice(i).booking(b).room(104929704329000)#1] : 1194807205
2025-04-22 15:00:48 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Invoice(i).booking(b).user(104929704121300)#13] : 681419196
2025-04-22 15:00:48 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Invoice(i).booking(b)#73] : 1310414130
2025-04-22 15:00:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#45] : 913045000
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [22] - [13]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [8] - [false]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [9] - [2500.0]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [10] - [101]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [11] - [SINGLE]
2025-04-22 15:00:48 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Invoice(i).booking(b).room(104929704329000)#1
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [15] - [saurav@gmail.com]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [16] - [true]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [17] - [SAURAV SHARMA]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [18] - [password]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [19] - [GUEST]
2025-04-22 15:00:48 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Invoice(i).booking(b).user(104929704121300)#13
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [4] - [2025-04-22T12:50]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [5] - [2025-04-23T10:00]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [12] - [CONFIRMED]
2025-04-22 15:00:48 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Invoice(i).booking(b)#73
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [20] - [2025-04-22T12:50:40.800160]
2025-04-22 15:00:48 DEBUG results - Extracted JDBC value [21] - [PAID]
2025-04-22 15:00:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#45
2025-04-22 15:00:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e3d84a
2025-04-22 15:00:48 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 15:00:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:00:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:01:34 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=52s776ms125µs800ns).
2025-04-22 15:01:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:01:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:01:34 ERROR BookingDaoImpl - Error occurred while fetching all bookings
org.hibernate.query.QueryTypeMismatchException: Result type is 'Booking' but the query returned a 'Invoice'
	at org.hibernate.sql.results.internal.RowTransformerCheckingImpl.transformRow(RowTransformerCheckingImpl.java:33) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:102) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:205) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:211) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:138) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:381) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:301) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:526) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:423) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getAllBookings(BookingDaoImpl.java:114) [classes/:?]
	at org.example.service.BookingServiceImpl.getAllBookings(BookingServiceImpl.java:84) [classes/:?]
	at org.example.controller.BookingController.getAllBookings(BookingController.java:79) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.viewAllBookings(AdminMenuUI.java:274) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displaySuperAdminMenu(AdminMenuUI.java:68) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-22 15:01:42 DEBUG hql - HQL :  SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room ORDER BY b.checkIn DESC 
2025-04-22 15:01:42 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
              -> [joins]
                -> [attribute] - `org.example.entity.Booking(b).user(104985138050300)`
                    [fetched = true]
                <- [attribute] - `org.example.entity.Booking(b).user(104985138050300)`
                -> [attribute] - `org.example.entity.Booking(b).room(104985138487200)`
                    [fetched = true]
                <- [attribute] - `org.example.entity.Booking(b).room(104985138487200)`
              <- [joins]
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
            -> [joins]
              -> [attribute] - `org.example.entity.Booking(b).user(104985138050300)`
                  [fetched = true]
              <- [attribute] - `org.example.entity.Booking(b).user(104985138050300)`
              -> [attribute] - `org.example.entity.Booking(b).room(104985138487200)`
                  [fetched = true]
              <- [attribute] - `org.example.entity.Booking(b).room(104985138487200)`
            <- [joins]
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-04-22 15:01:44 DEBUG create - Created new SQL alias : b1_0
2025-04-22 15:01:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 15:01:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@254cc548] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 15:01:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65f470f8] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 15:01:44 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:01:44 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:01:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking(b).room(104985138487200)]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking(b).user(104985138050300)]

2025-04-22 15:01:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Booking(b).user(104985138050300)) {
              primaryTableReference : users as u1_0
            }
             join LazyTableGroup (r1 : org.example.entity.Booking(b).room(104985138487200)) {
              primaryTableReference : rooms as r1_0
            }
          }
        }
      }
    }

2025-04-22 15:01:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:01:44 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).user(104985138050300) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).user(104985138050300))@1393727955 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2014166743)
	  org.example.entity.Booking(b).room(104985138487200) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).room(104985138487200))@881300604 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1436969919)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1998741793 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 15:01:44 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join users u1_0 on u1_0.user_id=b1_0.user_id join rooms r1_0 on r1_0.room_id=b1_0.room_id order by b1_0.check_in desc
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(104985138487200)): 1
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(104985138050300)): 13
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).room(104985138487200)#1] : 2124429748
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).user(104985138050300)#13] : 451900456
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 370196540
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).room(104985138487200)#1
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).user(104985138050300)#13
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-22 15:01:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(104985138487200)): 1
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(104985138050300)): 13
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 2082475607
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [9] - [COMPLETED]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 15:01:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(104985138487200)): 1
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(104985138050300)): 13
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 487553999
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-22 15:01:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(104985138487200)): 1
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:01:44 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(104985138050300)): 13
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 219040114
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:01:44 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-22 15:01:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 15:01:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:01:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:01:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:02:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:02:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ac08256 is alive
2025-04-22 15:02:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@29d337dd is alive
2025-04-22 15:02:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42b76928 is alive
2025-04-22 15:02:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ffce41f is alive
2025-04-22 15:02:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@64f0528f is alive
2025-04-22 15:02:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@761ba8e4 is alive
2025-04-22 15:02:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:02:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:02:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@324da078 is alive
2025-04-22 15:02:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e80899 is alive
2025-04-22 15:02:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@729b2222 is alive
2025-04-22 15:02:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:02:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:03:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:03:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:03:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:03:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:03:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:03:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ac08256 is alive
2025-04-22 15:03:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@29d337dd is alive
2025-04-22 15:04:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42b76928 is alive
2025-04-22 15:04:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ffce41f is alive
2025-04-22 15:04:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:04:03 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).user(104985138050300) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).user(104985138050300))@1266035080 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2014166743)
	  org.example.entity.Booking(b).room(104985138487200) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).room(104985138487200))@619864203 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1436969919)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@313124964 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-22 15:04:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join users u1_0 on u1_0.user_id=b1_0.user_id join rooms r1_0 on r1_0.room_id=b1_0.room_id order by b1_0.check_in desc
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(104985138487200)): 1
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(104985138050300)): 13
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).room(104985138487200)#1] : 187571699
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).user(104985138050300)#13] : 1444494906
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1827910615
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).room(104985138487200)#1
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).user(104985138050300)#13
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-22 15:04:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e785b28
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(104985138487200)): 1
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(104985138050300)): 13
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1438780049
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [9] - [COMPLETED]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 15:04:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e785b28
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(104985138487200)): 1
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(104985138050300)): 13
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 1244993277
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-22 15:04:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e785b28
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(104985138487200)): 1
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:04:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(104985138050300)): 13
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 1000958311
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:04:03 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-22 15:04:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 15:04:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e785b28
2025-04-22 15:04:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:04:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:04:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@64f0528f is alive
2025-04-22 15:04:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@761ba8e4 is alive
2025-04-22 15:04:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@324da078 is alive
2025-04-22 15:04:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@46e80899 is alive
2025-04-22 15:04:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@729b2222 is alive
2025-04-22 15:04:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:04:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:04:46 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:04:46 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:05:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:05:16 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:05:16 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:05:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ac08256 is alive
2025-04-22 15:05:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@29d337dd is alive
2025-04-22 15:06:01 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 15:06:01 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 15:06:01 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 15:06:01 DEBUG HikariConfig - autoCommit......................true
2025-04-22 15:06:01 DEBUG HikariConfig - catalog.........................none
2025-04-22 15:06:01 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 15:06:01 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 15:06:01 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 15:06:01 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-22 15:06:01 DEBUG HikariConfig - dataSource......................none
2025-04-22 15:06:01 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 15:06:01 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 15:06:01 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 15:06:01 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 15:06:01 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 15:06:01 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 15:06:01 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 15:06:01 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 15:06:01 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 15:06:01 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 15:06:01 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 15:06:01 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 15:06:01 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 15:06:01 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 15:06:01 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 15:06:01 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 15:06:01 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 15:06:01 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 15:06:01 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 15:06:01 DEBUG HikariConfig - password........................<masked>
2025-04-22 15:06:01 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 15:06:01 DEBUG HikariConfig - readOnly........................false
2025-04-22 15:06:01 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 15:06:01 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 15:06:01 DEBUG HikariConfig - schema..........................none
2025-04-22 15:06:01 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 15:06:01 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 15:06:01 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 15:06:01 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 15:06:01 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b12d7345-3773-4eae-890d-f958b4def4d9)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Established new connection (b12d7345-3773-4eae-890d-f958b4def4d9)
2025-04-22 15:06:01 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5dbe30be
2025-04-22 15:06:01 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 15:06:01 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 15:06:01 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 15:06:01 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 15:06:01 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 15:06:01 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 15:06:01 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3741aafa-b2db-4168-81b9-f7a9e4cf70d4)
2025-04-22 15:06:01 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Established new connection (3741aafa-b2db-4168-81b9-f7a9e4cf70d4)
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a0540c2
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 15:06:01 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 15:06:01 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 15:06:01 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f702f0b1-3360-4fe6-9a36-1de6077f63b5)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Established new connection (f702f0b1-3360-4fe6-9a36-1de6077f63b5)
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e21ac74
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4eacfac8-adff-4366-9c5d-94d24919c60a)
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Established new connection (4eacfac8-adff-4366-9c5d-94d24919c60a)
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16b46afb
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@66908383
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5173200b
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@25c5e994
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@378bd86d
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2e3a5237
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2e3a5237
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@17ae7628
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1136b469
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6579c3d9
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b87581
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@66434cc8
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42f22995
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@693e4d19
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@286b39c2
2025-04-22 15:06:01 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5432050b
2025-04-22 15:06:01 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6e6fce47] into BootstrapContext; was [null]
2025-04-22 15:06:01 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@47c64cfe] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6ce90bc5]
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d35a6046-bb01-40a4-8d1d-e4c297f02b3b)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Established new connection (d35a6046-bb01-40a4-8d1d-e4c297f02b3b)
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2105113c
2025-04-22 15:06:01 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 15:06:01 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 15:06:01 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (584f8796-8fa6-4c3e-9a83-d5b874808717)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Established new connection (584f8796-8fa6-4c3e-9a83-d5b874808717)
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@648b14da
2025-04-22 15:06:01 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 15:06:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a0b2a45d-41b3-4ac1-957d-31c7b9645c16)
2025-04-22 15:06:02 DEBUG PoolBase - HikariPool-1 - Established new connection (a0b2a45d-41b3-4ac1-957d-31c7b9645c16)
2025-04-22 15:06:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d9fc61b
2025-04-22 15:06:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-22 15:06:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4f7fb552-3043-4161-8be0-0e658f762de8)
2025-04-22 15:06:02 DEBUG PoolBase - HikariPool-1 - Established new connection (4f7fb552-3043-4161-8be0-0e658f762de8)
2025-04-22 15:06:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@13838839
2025-04-22 15:06:02 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 15:06:02 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 15:06:02 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 15:06:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 15:06:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1219be85-c6a0-4e0b-aa5c-da498fa610a9)
2025-04-22 15:06:02 DEBUG PoolBase - HikariPool-1 - Established new connection (1219be85-c6a0-4e0b-aa5c-da498fa610a9)
2025-04-22 15:06:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4d91a1d2
2025-04-22 15:06:02 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 15:06:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-22 15:06:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8df871ed-80da-4157-9ad0-574e674f06da)
2025-04-22 15:06:02 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 15:06:02 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 15:06:02 DEBUG PoolBase - HikariPool-1 - Established new connection (8df871ed-80da-4157-9ad0-574e674f06da)
2025-04-22 15:06:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b67e0b8
2025-04-22 15:06:02 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@58860997) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@81b5db0)
2025-04-22 15:06:02 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7487b142) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7139bd31)
2025-04-22 15:06:02 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 15:06:02 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@8f2098e
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@8f2098e
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2e3a5237`
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:06:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:06:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:06:02 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 15:06:02 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2016f509] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6f1a80fb]
2025-04-22 15:06:02 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 15:06:02 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 15:06:02 DEBUG EntityBinder - Import with entity name User
2025-04-22 15:06:02 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property userID
2025-04-22 15:06:02 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property email
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property isActive
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property name
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property password
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property userRole
2025-04-22 15:06:02 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 15:06:02 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 15:06:02 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property guestId
2025-04-22 15:06:02 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property age
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property name
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property user
2025-04-22 15:06:02 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 15:06:02 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 15:06:02 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property bookingId
2025-04-22 15:06:02 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property checkIn
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property checkOut
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property room
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property status
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property user
2025-04-22 15:06:02 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 15:06:02 DEBUG EntityBinder - Import with entity name Room
2025-04-22 15:06:02 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property roomID
2025-04-22 15:06:02 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property price
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property roomType
2025-04-22 15:06:02 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 15:06:02 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 15:06:02 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 15:06:02 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property amount
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property booking
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property issueDate
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 15:06:02 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 15:06:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 15:06:02 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 15:06:02 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:06:02 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:06:02 DEBUG PropertyBinder - Building property user
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 15:06:02 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 15:06:02 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 15:06:02 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 15:06:02 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 15:06:02 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 15:06:02 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 15:06:02 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 15:06:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 15:06:02 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 15:06:02 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1a01d7f0, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-22 15:06:02 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7d8cf9ac] under count; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5190010f] under every; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@673e76b3] under any; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@390037e7] under sinh; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@704067c6] under cosh; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f4596d0] under tanh; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6002e944] under pi; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@588545ac] under log; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 15:06:02 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@75fe1619] under position; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@412c5e8b] under overlay; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2574a9e3] under trim; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@11381415] under cast; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ad6cc21] under collate; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5403799b] under extract; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@d13960e] under ifnull; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@122635ef] under pad; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3ece79fe] under str; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@33f2cfda] under format; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3dc40ab9] under timestampadd; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@322e49ee] under timestampdiff; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7126e26] under current_date; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@151ab2b9] under current_time; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13ed066e] under current_timestamp; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4d705112] under local_date; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@590765c4] under local_time; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@19489b27] under local_datetime; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@626d2016] under offset_datetime; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d5a1588] under instant; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@64b018f3] under sql; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@588545ac
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f4596d0
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@390037e7
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@704067c6
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6002e944
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@58f2466c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@590765c4
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@19489b27
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@69cd7630] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7e8279e5] under bit_length; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2b53840a] under octet_length; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3caafa67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@75fe1619
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e546734] under bitand; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53747c4a] under bitor; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b0d1fa] under bitxor; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f2276c9] under bitnot; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12d2ddde] under median; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e9474f] under insert; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@131a7516] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@412c5e8b
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5ae15] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@523a7801] under listagg; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@77cb452c] under array; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2213639b] under array_list; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@7b5cc918] under array_agg; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@5232e3f1] under array_position; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5ef85555] under array_positions; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@764b14b8] under array_positions_list; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@202d9236] under array_length; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@713a35c5] under array_concat; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@68b11545] under array_prepend; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7d0100ea] under array_append; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7f73ce28] under array_contains; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@611b35d6] under array_contains_nullable; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@697d6ded] under array_overlaps; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5d05f453] under array_overlaps_nullable; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@664e848c] under array_get; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@f2b90fc] under array_set; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@2ed9f6f8] under array_remove_index; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@251c4280] under array_slice; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35650279] under array_trim; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@69f2cb04] under array_fill; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@13803a94] under array_fill_list; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@28babeca] under array_to_string; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@25b38203] under mode; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@778a1250] under percentile_cont; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@55acec99] under percentile_disc; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4d464510] under rank; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@64e7d698] under dense_rank; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2519026b] under percent_rank; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3f8dfe74] under cume_dist; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@27dc627a] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@570ba13] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37a9b687] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b0d1fa
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@6c977dcf] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3fcbc766] under trunc; prior registration was null
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 15:06:03 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28cd2c2] under date_trunc; prior registration was null
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 15:06:03 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 15:06:03 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 15:06:03 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 15:06:03 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 15:06:03 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:06:03 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 15:06:03 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 15:06:03 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:06:03 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:06:03 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:06:03 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:06:03 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 15:06:03 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 15:06:03 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:06:03 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 15:06:03 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 15:06:03 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 15:06:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 15:06:03 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 15:06:03 DEBUG creation - Starting post-init callbacks
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 15:06:03 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 15:06:03 DEBUG create - Created new SQL alias : g1_0
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6a51ae7c] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 15:06:03 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:06:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 15:06:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 15:06:03 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 15:06:03 DEBUG create - Created new SQL alias : b1_0
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74eec640] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 15:06:03 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57416e49] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 15:06:03 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:06:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 15:06:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 15:06:03 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 15:06:03 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 15:06:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 15:06:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 15:06:03 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 15:06:03 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:06:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 15:06:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:06:03 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 15:06:03 DEBUG create - Created new SQL alias : i1_0
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5fd18419] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 15:06:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75ed7512] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 15:06:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 15:06:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 15:06:03 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 15:06:03 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 15:06:03 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 15:06:03 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 15:06:03 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 15:06:03 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 15:06:03 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2016f509] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6c6379c]
2025-04-22 15:06:03 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 15:06:03 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 15:06:03 DEBUG Table - No alter strings for table : bookings
2025-04-22 15:06:03 DEBUG Table - No alter strings for table : guests
2025-04-22 15:06:03 DEBUG Table - No alter strings for table : invoices
2025-04-22 15:06:03 DEBUG Table - No alter strings for table : rooms
2025-04-22 15:06:03 DEBUG Table - No alter strings for table : users
2025-04-22 15:06:04 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b3a6e95
2025-04-22 15:06:04 DEBUG SessionFactoryRegistry - Registering SessionFactory: 32c68e2e-b188-41e1-b4f8-1e92a7df92f6 (my-persistence-unit)
2025-04-22 15:06:04 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 15:06:04 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 15:06:04 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 15:06:04 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 15:06:04 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 15:06:04 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:06:04 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:06:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:06:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 15:06:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 15:06:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 15:06:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:06:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:06:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@875413568 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:06:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:06:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 15:06:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1640899470
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 15:06:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 15:06:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d405fe5
2025-04-22 15:06:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:06:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:06:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:06:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1573507674 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:06:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:06:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 15:06:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1273474265
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:06:04 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 15:06:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 15:06:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58afecfd
2025-04-22 15:06:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:06:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:06:04 INFO  HomeMenuUI - Login successful: SUPER ADMIN (SUPER_ADMIN)
2025-04-22 15:06:07 DEBUG hql - HQL :  SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room ORDER BY b.checkIn DESC 
2025-04-22 15:06:07 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
              -> [joins]
                -> [attribute] - `org.example.entity.Booking(b).user(105249931074300)`
                    [fetched = true]
                <- [attribute] - `org.example.entity.Booking(b).user(105249931074300)`
                -> [attribute] - `org.example.entity.Booking(b).room(105249933181200)`
                    [fetched = true]
                <- [attribute] - `org.example.entity.Booking(b).room(105249933181200)`
              <- [joins]
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
            -> [joins]
              -> [attribute] - `org.example.entity.Booking(b).user(105249931074300)`
                  [fetched = true]
              <- [attribute] - `org.example.entity.Booking(b).user(105249931074300)`
              -> [attribute] - `org.example.entity.Booking(b).room(105249933181200)`
                  [fetched = true]
              <- [attribute] - `org.example.entity.Booking(b).room(105249933181200)`
            <- [joins]
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-04-22 15:06:07 DEBUG create - Created new SQL alias : b1_0
2025-04-22 15:06:07 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 15:06:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f32ab17] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 15:06:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@70e54ec3] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 15:06:07 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:06:07 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:06:07 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking(b).room(105249933181200)]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking(b).user(105249931074300)]

2025-04-22 15:06:07 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Booking(b).user(105249931074300)) {
              primaryTableReference : users as u1_0
            }
             join LazyTableGroup (r1 : org.example.entity.Booking(b).room(105249933181200)) {
              primaryTableReference : rooms as r1_0
            }
          }
        }
      }
    }

2025-04-22 15:06:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:06:07 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).user(105249931074300) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).user(105249931074300))@70231499 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@988315192)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1155846026 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking(b).room(105249933181200) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).room(105249933181200))@1351814143 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@694943195)

2025-04-22 15:06:07 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join users u1_0 on u1_0.user_id=b1_0.user_id join rooms r1_0 on r1_0.room_id=b1_0.room_id order by b1_0.check_in desc
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(105249933181200)): 1
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(105249931074300)): 13
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).room(105249933181200)#1] : 108849833
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).user(105249931074300)#13] : 1051130608
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1876630105
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).room(105249933181200)#1
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).user(105249931074300)#13
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-22 15:06:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bc8da3f
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(105249933181200)): 1
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(105249931074300)): 13
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 2037929227
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [9] - [COMPLETED]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 15:06:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bc8da3f
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(105249933181200)): 1
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(105249931074300)): 13
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 1388081103
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-22 15:06:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bc8da3f
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(105249933181200)): 1
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:06:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(105249931074300)): 13
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 423797614
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:06:07 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-22 15:06:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 15:06:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bc8da3f
2025-04-22 15:06:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:06:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:06:31 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:06:31 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:07:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:07:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:07:44 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 15:07:44 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 15:07:44 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 15:07:44 DEBUG HikariConfig - autoCommit......................true
2025-04-22 15:07:44 DEBUG HikariConfig - catalog.........................none
2025-04-22 15:07:44 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 15:07:44 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 15:07:44 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 15:07:44 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-22 15:07:44 DEBUG HikariConfig - dataSource......................none
2025-04-22 15:07:44 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 15:07:44 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 15:07:44 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 15:07:44 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 15:07:44 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 15:07:44 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 15:07:44 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 15:07:44 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 15:07:44 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 15:07:44 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 15:07:44 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 15:07:44 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 15:07:44 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 15:07:44 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 15:07:44 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 15:07:44 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 15:07:44 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 15:07:44 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 15:07:44 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 15:07:44 DEBUG HikariConfig - password........................<masked>
2025-04-22 15:07:44 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 15:07:44 DEBUG HikariConfig - readOnly........................false
2025-04-22 15:07:44 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 15:07:44 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 15:07:44 DEBUG HikariConfig - schema..........................none
2025-04-22 15:07:44 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 15:07:44 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 15:07:44 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 15:07:44 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 15:07:44 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 15:07:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7286d65a-4378-45d3-aed8-f954d6446a2a)
2025-04-22 15:07:44 DEBUG PoolBase - HikariPool-1 - Established new connection (7286d65a-4378-45d3-aed8-f954d6446a2a)
2025-04-22 15:07:44 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c7a975a
2025-04-22 15:07:44 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 15:07:44 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 15:07:44 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 15:07:44 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 15:07:44 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 15:07:44 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 15:07:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 15:07:44 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 15:07:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1d5b3d59-cd7b-4b4b-a7c9-d643e120b53a)
2025-04-22 15:07:44 DEBUG PoolBase - HikariPool-1 - Established new connection (1d5b3d59-cd7b-4b4b-a7c9-d643e120b53a)
2025-04-22 15:07:44 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2013c5ea
2025-04-22 15:07:44 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 15:07:44 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (119877ed-6d77-4227-8f45-cb3c8f87a9a9)
2025-04-22 15:07:45 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 15:07:45 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Established new connection (119877ed-6d77-4227-8f45-cb3c8f87a9a9)
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6abc7f27
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f7e909f8-5d69-454e-a11c-8b108ae43b8d)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Established new connection (f7e909f8-5d69-454e-a11c-8b108ae43b8d)
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@78744a66
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3a60c416
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3a60c416
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@60f2e0bd
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@60f2e0bd
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@779de014
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2234078
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66908383
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4565a70a
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4565a70a
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@65327f5
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2adddc06
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@301d8120
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6d367020
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@72458efc
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@36bc415e
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a74d228
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@349d0836
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-22 15:07:45 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@682c1e93] into BootstrapContext; was [null]
2025-04-22 15:07:45 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27068a50] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68e62ca4]
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ccf6bb5e-c617-4c55-b959-02d78d388f30)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Established new connection (ccf6bb5e-c617-4c55-b959-02d78d388f30)
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e3bf06b
2025-04-22 15:07:45 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 15:07:45 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 15:07:45 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (53b862cc-f41a-412b-a8d9-00fab2124291)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Established new connection (53b862cc-f41a-412b-a8d9-00fab2124291)
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4048fa64
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (893f1c4f-f85e-49d0-a5e5-693bfe90abe2)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Established new connection (893f1c4f-f85e-49d0-a5e5-693bfe90abe2)
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1a55b4a0
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4413e455-8596-485c-8c5e-bb14d4c7e095)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Established new connection (4413e455-8596-485c-8c5e-bb14d4c7e095)
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@49b22344
2025-04-22 15:07:45 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 15:07:45 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 15:07:45 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5d0ad027-a901-458c-9a0b-f93acd659b50)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Established new connection (5d0ad027-a901-458c-9a0b-f93acd659b50)
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@101ddf8b
2025-04-22 15:07:45 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 15:07:45 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e4aaea6e-38c6-4b67-a04b-20a37ce73fa6)
2025-04-22 15:07:45 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 15:07:45 DEBUG PoolBase - HikariPool-1 - Established new connection (e4aaea6e-38c6-4b67-a04b-20a37ce73fa6)
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@53c9916b
2025-04-22 15:07:45 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@37af1f93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@778d82e9)
2025-04-22 15:07:45 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@408e96d9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59901c4d)
2025-04-22 15:07:45 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 15:07:45 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2ab0702e
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2ab0702e
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4565a70a`
2025-04-22 15:07:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:07:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:07:45 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 15:07:45 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26b95b0b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f7da3d3]
2025-04-22 15:07:45 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 15:07:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 15:07:45 DEBUG EntityBinder - Import with entity name User
2025-04-22 15:07:45 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property userID
2025-04-22 15:07:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property email
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property isActive
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property name
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property password
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property userRole
2025-04-22 15:07:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 15:07:45 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 15:07:45 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property guestId
2025-04-22 15:07:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property age
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property name
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property user
2025-04-22 15:07:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 15:07:45 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 15:07:45 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property bookingId
2025-04-22 15:07:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property checkIn
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property checkOut
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property room
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property status
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property user
2025-04-22 15:07:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 15:07:45 DEBUG EntityBinder - Import with entity name Room
2025-04-22 15:07:45 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property roomID
2025-04-22 15:07:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property price
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property roomType
2025-04-22 15:07:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 15:07:45 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 15:07:45 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 15:07:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property amount
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property booking
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property issueDate
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 15:07:45 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 15:07:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 15:07:45 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 15:07:45 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:07:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:07:45 DEBUG PropertyBinder - Building property user
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 15:07:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 15:07:45 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 15:07:45 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 15:07:45 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 15:07:45 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 15:07:45 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 15:07:46 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 15:07:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 15:07:46 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@707ca986, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-22 15:07:46 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@72443081] under count; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b2bf745] under every; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6fe595dc] under any; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@337a6d30] under sinh; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2921a36a] under cosh; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b73bd6b] under tanh; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45] under pi; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@750ed637] under log; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@575cabf0] under position; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f4596d0] under overlay; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@78a8978a] under trim; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3b24087d] under cast; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under collate; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4351ed61] under extract; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1c34365c] under ifnull; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3b0c3951] under pad; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@422ab737] under str; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@d13960e] under format; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@122635ef] under timestampadd; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@262a1fad] under timestampdiff; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e7b265e] under current_date; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51da32e5] under current_time; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33d60b7e] under current_timestamp; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1fecfaea] under local_date; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4872669f] under local_time; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483f286e] under local_datetime; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4bb147ec] under offset_datetime; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33f2cfda] under instant; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3dc40ab9] under sql; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@750ed637
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db6d68d] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b73bd6b
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@337a6d30
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2921a36a
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@157d3a45
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@174721c4] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4872669f
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@483f286e
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@648c5fb3] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@47b33e07] under bit_length; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7126e26] under octet_length; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@151ab2b9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@575cabf0
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13ed066e] under bitand; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d705112] under bitor; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@590765c4] under bitxor; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19489b27] under bitnot; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@626d2016] under median; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f116ca2] under insert; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@20801cbb] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f4596d0
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@581b1c08] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@69cd7630] under listagg; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@59838256] under array; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@131a7516] under array_list; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@52d3fafd] under array_agg; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2c26ba07] under array_position; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@23c767e6] under array_positions; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6661d8c0] under array_positions_list; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@310b2b6f] under array_length; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7a2fce12] under array_concat; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@4a070cf0] under array_prepend; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@764b14b8] under array_append; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@6367a688] under array_contains; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@319642db] under array_contains_nullable; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@309dcdf3] under array_overlaps; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7573b9ee] under array_overlaps_nullable; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c0c4c0a] under array_get; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@66e21568] under array_set; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@543d5863] under array_remove_index; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35dece42] under array_slice; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dd3f8aa] under array_trim; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@149b4d20] under array_fill; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@664e848c] under array_fill_list; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5d508d22] under array_to_string; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@251c4280] under mode; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@35650279] under percentile_cont; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@79a13920] under percentile_disc; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3292d91a] under rank; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5921b93c] under dense_rank; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@faea4da] under percent_rank; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@19b02dfd] under cume_dist; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@b4732dc] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@45292ec1] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7c678b] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@590765c4
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4f93bf0a] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@27dc627a] under trunc; prior registration was null
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 15:07:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@570ba13] under date_trunc; prior registration was null
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 15:07:46 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 15:07:46 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 15:07:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 15:07:46 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 15:07:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:07:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 15:07:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 15:07:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:07:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:07:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:07:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:07:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 15:07:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 15:07:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:07:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 15:07:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 15:07:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 15:07:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 15:07:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 15:07:46 DEBUG creation - Starting post-init callbacks
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 15:07:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 15:07:47 DEBUG create - Created new SQL alias : g1_0
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34f23816] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 15:07:47 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:07:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 15:07:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 15:07:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 15:07:47 DEBUG create - Created new SQL alias : b1_0
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6003220a] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 15:07:47 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b395581] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 15:07:47 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:07:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 15:07:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 15:07:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 15:07:47 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 15:07:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 15:07:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 15:07:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 15:07:47 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:07:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 15:07:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:07:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 15:07:47 DEBUG create - Created new SQL alias : i1_0
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@19faedcc] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@45e11627] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 15:07:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 15:07:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 15:07:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 15:07:47 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 15:07:47 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 15:07:47 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 15:07:47 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 15:07:47 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 15:07:47 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26b95b0b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@59fea5f5]
2025-04-22 15:07:47 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 15:07:47 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 15:07:47 DEBUG Table - No alter strings for table : bookings
2025-04-22 15:07:47 DEBUG Table - No alter strings for table : guests
2025-04-22 15:07:47 DEBUG Table - No alter strings for table : invoices
2025-04-22 15:07:47 DEBUG Table - No alter strings for table : rooms
2025-04-22 15:07:47 DEBUG Table - No alter strings for table : users
2025-04-22 15:07:47 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@74fc3fc7
2025-04-22 15:07:47 DEBUG SessionFactoryRegistry - Registering SessionFactory: 6dcb1bab-4059-4d14-a43e-0adea87ccc9d (my-persistence-unit)
2025-04-22 15:07:47 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 15:07:47 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 15:07:47 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 15:07:47 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 15:07:47 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 15:07:47 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:07:47 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:07:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:07:47 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 15:07:47 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 15:07:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 15:07:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:07:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:07:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1560327273 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:07:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:07:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 15:07:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1067354869
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 15:07:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 15:07:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d5c160e
2025-04-22 15:07:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:07:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:07:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:07:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@165550981 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:07:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:07:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 15:07:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1262966594
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:07:47 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 15:07:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 15:07:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@323c6f9c
2025-04-22 15:07:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:07:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:07:47 INFO  HomeMenuUI - Login successful: SUPER ADMIN (SUPER_ADMIN)
2025-04-22 15:07:49 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 15:07:49 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:07:49 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:07:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 15:07:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 15:07:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 15:07:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 15:07:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:07:49 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1192926860 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:07:49 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 743354004
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 406474891
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1525595340
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 338244928
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 117318714
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1284149862
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1672306663
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1047786983
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1230752231
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1373272840
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1476482227
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2046578329
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1853858992
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1820295244
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1049228732
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 15:07:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:07:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 15:07:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36349e29
2025-04-22 15:07:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:07:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:07:49 INFO  AdminMenuUI - Displayed 15 available rooms.
2025-04-22 15:07:57 DEBUG hql - HQL :  SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room ORDER BY b.checkIn DESC 
2025-04-22 15:07:57 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
              -> [joins]
                -> [attribute] - `org.example.entity.Booking(b).user(105360678897600)`
                    [fetched = true]
                <- [attribute] - `org.example.entity.Booking(b).user(105360678897600)`
                -> [attribute] - `org.example.entity.Booking(b).room(105360680979600)`
                    [fetched = true]
                <- [attribute] - `org.example.entity.Booking(b).room(105360680979600)`
              <- [joins]
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
            -> [joins]
              -> [attribute] - `org.example.entity.Booking(b).user(105360678897600)`
                  [fetched = true]
              <- [attribute] - `org.example.entity.Booking(b).user(105360678897600)`
              -> [attribute] - `org.example.entity.Booking(b).room(105360680979600)`
                  [fetched = true]
              <- [attribute] - `org.example.entity.Booking(b).room(105360680979600)`
            <- [joins]
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-04-22 15:07:57 DEBUG create - Created new SQL alias : b1_0
2025-04-22 15:07:57 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 15:07:57 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e36baca] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 15:07:57 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@690e4b00] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 15:07:57 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:07:57 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:07:57 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking(b).room(105360680979600)]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking(b).user(105360678897600)]

2025-04-22 15:07:57 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Booking(b).user(105360678897600)) {
              primaryTableReference : users as u1_0
            }
             join LazyTableGroup (r1 : org.example.entity.Booking(b).room(105360680979600)) {
              primaryTableReference : rooms as r1_0
            }
          }
        }
      }
    }

2025-04-22 15:07:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:07:57 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).user(105360678897600) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).user(105360678897600))@765326134 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@320559316)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1585879232 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking(b).room(105360680979600) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).room(105360680979600))@1576354454 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@531828317)

2025-04-22 15:07:57 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join users u1_0 on u1_0.user_id=b1_0.user_id join rooms r1_0 on r1_0.room_id=b1_0.room_id order by b1_0.check_in desc
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(105360680979600)): 1
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(105360678897600)): 13
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).room(105360680979600)#1] : 600910394
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).user(105360678897600)#13] : 1893679609
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1688710402
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).room(105360680979600)#1
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).user(105360678897600)#13
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-22 15:07:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f3f554f
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(105360680979600)): 1
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(105360678897600)): 13
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 830929141
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [9] - [COMPLETED]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-22 15:07:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f3f554f
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(105360680979600)): 1
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(105360678897600)): 13
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 1182586041
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-22 15:07:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f3f554f
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(105360680979600)): 1
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-22 15:07:57 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(105360678897600)): 13
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 1772339008
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-22 15:07:57 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-22 15:07:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-22 15:07:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f3f554f
2025-04-22 15:07:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:07:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:08:07 WARN  AdminMenuUI - Invalid menu input: For input string: "asdgjag"
2025-04-22 15:08:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:08:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:08:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:08:17 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@172871390 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:08:17 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1085805965
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1538514663
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 676275686
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 677071135
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 878915766
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1910670395
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 550764532
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1379031360
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 2138645808
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 450868664
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 625788232
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1710518520
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1393727955
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 881300604
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1998741793
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 15:08:17 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:08:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 15:08:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24e7087a
2025-04-22 15:08:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:08:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:08:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:08:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:09:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:09:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:09:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@101ddf8b is alive
2025-04-22 15:09:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4048fa64 is alive
2025-04-22 15:09:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78744a66 is alive
2025-04-22 15:09:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49b22344 is alive
2025-04-22 15:09:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3bf06b is alive
2025-04-22 15:09:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:09:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a55b4a0 is alive
2025-04-22 15:09:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc7f27 is alive
2025-04-22 15:09:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53c9916b is alive
2025-04-22 15:09:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2013c5ea is alive
2025-04-22 15:09:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:09:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:10:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:10:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:10:44 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:10:44 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:11:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@101ddf8b is alive
2025-04-22 15:11:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4048fa64 is alive
2025-04-22 15:11:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78744a66 is alive
2025-04-22 15:11:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49b22344 is alive
2025-04-22 15:11:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3bf06b is alive
2025-04-22 15:11:14 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:11:14 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:11:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:11:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a55b4a0 is alive
2025-04-22 15:11:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc7f27 is alive
2025-04-22 15:11:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53c9916b is alive
2025-04-22 15:11:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2013c5ea is alive
2025-04-22 15:11:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:11:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:12:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:12:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:12:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@101ddf8b is alive
2025-04-22 15:12:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:12:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:12:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4048fa64 is alive
2025-04-22 15:12:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78744a66 is alive
2025-04-22 15:12:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49b22344 is alive
2025-04-22 15:12:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3bf06b is alive
2025-04-22 15:13:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:13:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a55b4a0 is alive
2025-04-22 15:13:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:13:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:13:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc7f27 is alive
2025-04-22 15:13:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53c9916b is alive
2025-04-22 15:13:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2013c5ea is alive
2025-04-22 15:13:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:13:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:14:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:14:03 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1980528509 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:14:03 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 370196540
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 2082475607
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 487553999
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 219040114
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 427339989
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1700153115
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 65112445
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 2094728618
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 544865532
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 2000689527
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 2019937411
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1555521648
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 860285190
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1144702392
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 309135464
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 15:14:03 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:14:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 15:14:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@332fa1c
2025-04-22 15:14:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:14:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:14:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:14:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:14:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@101ddf8b is alive
2025-04-22 15:14:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4048fa64 is alive
2025-04-22 15:14:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78744a66 is alive
2025-04-22 15:14:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49b22344 is alive
2025-04-22 15:14:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3bf06b is alive
2025-04-22 15:14:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:14:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:15:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:15:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a55b4a0 is alive
2025-04-22 15:15:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc7f27 is alive
2025-04-22 15:15:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53c9916b is alive
2025-04-22 15:15:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:15:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:15:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2013c5ea is alive
2025-04-22 15:15:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:15:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:16:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@101ddf8b is alive
2025-04-22 15:16:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:16:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:16:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4048fa64 is alive
2025-04-22 15:16:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78744a66 is alive
2025-04-22 15:16:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49b22344 is alive
2025-04-22 15:16:27 WARN  AdminMenuUI - Invalid menu input: For input string: ""
2025-04-22 15:16:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3bf06b is alive
2025-04-22 15:16:34 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:16:34 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1899272141 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:16:34 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 506027903
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 619864203
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 313124964
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1177522153
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1013957837
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 187571699
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1444494906
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1827910615
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 779639592
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1438780049
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1244993277
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1000958311
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1466225697
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 305646302
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1893180571
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 15:16:34 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:16:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 15:16:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-22 15:16:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:16:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:16:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:16:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:16:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:16:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a55b4a0 is alive
2025-04-22 15:16:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc7f27 is alive
2025-04-22 15:16:58 WARN  AdminMenuUI - Invalid menu input: For input string: ""
2025-04-22 15:16:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53c9916b is alive
2025-04-22 15:17:01 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = false
2025-04-22 15:17:01 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:17:01 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:17:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 15:17:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 15:17:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 15:17:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 15:17:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:17:01 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1572619672 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:17:01 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=false
2025-04-22 15:17:01 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:17:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 15:17:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1093181064
2025-04-22 15:17:01 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 15:17:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:17:01 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 15:17:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:17:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 15:17:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e8783b0
2025-04-22 15:17:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:17:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:17:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:17:09 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1406333164 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:17:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1146282300
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1108811877
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1534016779
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 149388379
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 2003448677
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 201662949
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 773898763
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 488011312
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1002541036
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 518953848
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 913711668
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 419394876
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 804661024
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1160338685
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1120514542
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 15:17:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:17:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 15:17:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d964c9e
2025-04-22 15:17:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:17:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:17:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2013c5ea is alive
2025-04-22 15:17:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:17:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:17:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@101ddf8b is alive
2025-04-22 15:17:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:17:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:18:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4048fa64 is alive
2025-04-22 15:18:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78744a66 is alive
2025-04-22 15:18:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49b22344 is alive
2025-04-22 15:18:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3bf06b is alive
2025-04-22 15:18:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:18:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:18:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:18:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a55b4a0 is alive
2025-04-22 15:18:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:18:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:18:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc7f27 is alive
2025-04-22 15:18:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53c9916b is alive
2025-04-22 15:19:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2013c5ea is alive
2025-04-22 15:19:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:19:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:19:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@101ddf8b is alive
2025-04-22 15:19:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:19:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:19:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4048fa64 is alive
2025-04-22 15:19:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78744a66 is alive
2025-04-22 15:19:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49b22344 is alive
2025-04-22 15:19:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3bf06b is alive
2025-04-22 15:20:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:20:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:20:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-22 15:20:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a55b4a0 is alive
2025-04-22 15:20:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc7f27 is alive
2025-04-22 15:20:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53c9916b is alive
2025-04-22 15:20:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:20:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:21:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2013c5ea is alive
2025-04-22 15:21:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@101ddf8b is alive
2025-04-22 15:21:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:21:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:21:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4048fa64 is alive
2025-04-22 15:21:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78744a66 is alive
2025-04-22 15:21:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49b22344 is alive
2025-04-22 15:21:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3bf06b is alive
2025-04-22 15:21:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:21:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:21:59 WARN  AdminMenuUI - Invalid menu input: For input string: ""
2025-04-22 15:23:40 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-22 15:23:40 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-22 15:23:40 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-22 15:23:40 DEBUG HikariConfig - autoCommit......................true
2025-04-22 15:23:40 DEBUG HikariConfig - catalog.........................none
2025-04-22 15:23:40 DEBUG HikariConfig - connectionInitSql...............none
2025-04-22 15:23:40 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-22 15:23:40 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-22 15:23:40 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-22 15:23:40 DEBUG HikariConfig - dataSource......................none
2025-04-22 15:23:40 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-22 15:23:40 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-22 15:23:40 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-22 15:23:40 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-22 15:23:40 DEBUG HikariConfig - exceptionOverride...............none
2025-04-22 15:23:40 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-22 15:23:40 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-22 15:23:40 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-22 15:23:40 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-22 15:23:40 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-22 15:23:40 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-22 15:23:40 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-22 15:23:40 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-22 15:23:40 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-22 15:23:40 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-22 15:23:40 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-22 15:23:40 DEBUG HikariConfig - metricRegistry..................none
2025-04-22 15:23:40 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-22 15:23:40 DEBUG HikariConfig - minimumIdle.....................10
2025-04-22 15:23:40 DEBUG HikariConfig - password........................<masked>
2025-04-22 15:23:40 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-22 15:23:40 DEBUG HikariConfig - readOnly........................false
2025-04-22 15:23:40 DEBUG HikariConfig - registerMbeans..................false
2025-04-22 15:23:40 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-22 15:23:40 DEBUG HikariConfig - schema..........................none
2025-04-22 15:23:40 DEBUG HikariConfig - threadFactory...................internal
2025-04-22 15:23:40 DEBUG HikariConfig - transactionIsolation............default
2025-04-22 15:23:40 DEBUG HikariConfig - username........................"dbuser"
2025-04-22 15:23:40 DEBUG HikariConfig - validationTimeout...............5000
2025-04-22 15:23:40 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-22 15:23:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9fc36fc2-c5d9-422c-be1f-cf9de2c7a383)
2025-04-22 15:23:40 DEBUG PoolBase - HikariPool-1 - Established new connection (9fc36fc2-c5d9-422c-be1f-cf9de2c7a383)
2025-04-22 15:23:40 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@475835b1
2025-04-22 15:23:40 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-22 15:23:40 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-22 15:23:40 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-22 15:23:40 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-22 15:23:40 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-22 15:23:41 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-22 15:23:41 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (167f10d3-8a12-432e-824e-e9d191e7e20a)
2025-04-22 15:23:41 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Established new connection (167f10d3-8a12-432e-824e-e9d191e7e20a)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4d4419bd
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-22 15:23:41 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-22 15:23:41 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-22 15:23:41 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (58c492fb-c2f1-4846-8045-af2975c4f509)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Established new connection (58c492fb-c2f1-4846-8045-af2975c4f509)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@54e058d5
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (62859b0b-470a-4a91-88da-a59d39eab52f)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2234078
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Established new connection (62859b0b-470a-4a91-88da-a59d39eab52f)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1914c0b2
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@66908383
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2e3a5237
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-22 15:23:41 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3e9803c2] into BootstrapContext; was [null]
2025-04-22 15:23:41 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4525d1d3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c974942]
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1575bfd4-a399-4d40-a27b-72998a4942b5)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Established new connection (1575bfd4-a399-4d40-a27b-72998a4942b5)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@45897136
2025-04-22 15:23:41 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-22 15:23:41 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-22 15:23:41 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8738f5a4-2713-4a70-9840-2fc8e7d1ba3a)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Established new connection (8738f5a4-2713-4a70-9840-2fc8e7d1ba3a)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@421e44b2
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (09c5a4d6-0c78-4e49-9245-5314a25d036c)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Established new connection (09c5a4d6-0c78-4e49-9245-5314a25d036c)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1434f2a5
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c598eaac-b25f-4d1c-a193-e73054b5cc00)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Established new connection (c598eaac-b25f-4d1c-a193-e73054b5cc00)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@588b0bf1
2025-04-22 15:23:41 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-22 15:23:41 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-22 15:23:41 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (44aba96e-6e0b-437a-8884-52c0ec7f22a0)
2025-04-22 15:23:41 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Established new connection (44aba96e-6e0b-437a-8884-52c0ec7f22a0)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@216a7801
2025-04-22 15:23:41 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-22 15:23:41 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e6971358-0801-462a-93a6-6353395f99c8)
2025-04-22 15:23:41 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@700f518a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b835727)
2025-04-22 15:23:41 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13da7ab0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c8662ac)
2025-04-22 15:23:41 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-22 15:23:41 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@65327f5`
2025-04-22 15:23:41 DEBUG PoolBase - HikariPool-1 - Established new connection (e6971358-0801-462a-93a6-6353395f99c8)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32cc39a4
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:23:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-22 15:23:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:23:41 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-22 15:23:41 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36bf84e]
2025-04-22 15:23:41 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-22 15:23:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-22 15:23:41 DEBUG EntityBinder - Import with entity name User
2025-04-22 15:23:41 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property userID
2025-04-22 15:23:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for email
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property email
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property isActive
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property name
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for password
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property password
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property userRole
2025-04-22 15:23:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-22 15:23:41 DEBUG EntityBinder - Import with entity name Guest
2025-04-22 15:23:41 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property guestId
2025-04-22 15:23:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for age
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property age
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property name
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property user
2025-04-22 15:23:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-22 15:23:41 DEBUG EntityBinder - Import with entity name Booking
2025-04-22 15:23:41 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property bookingId
2025-04-22 15:23:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property checkIn
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property checkOut
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property room
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for status
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property status
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property user
2025-04-22 15:23:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-22 15:23:41 DEBUG EntityBinder - Import with entity name Room
2025-04-22 15:23:41 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property roomID
2025-04-22 15:23:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property isAvailable
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for price
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property price
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property roomNumber
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property roomType
2025-04-22 15:23:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-22 15:23:41 DEBUG EntityBinder - Import with entity name Invoice
2025-04-22 15:23:41 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property invoiceId
2025-04-22 15:23:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property amount
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property booking
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property issueDate
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-22 15:23:41 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-22 15:23:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-22 15:23:41 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-22 15:23:41 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property paymentStatus
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-22 15:23:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-22 15:23:41 DEBUG PropertyBinder - Building property user
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-22 15:23:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-22 15:23:41 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-22 15:23:41 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-22 15:23:41 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-22 15:23:41 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-22 15:23:41 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-22 15:23:42 DEBUG SessionFactoryImpl - Building session factory
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 15:23:42 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 15:23:42 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@9b23822, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-22 15:23:42 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3a8cea24] under count; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2ba1209b] under every; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7c241a9f] under any; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49] under sinh; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47] under cosh; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba] under tanh; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0] under pi; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680] under log; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6002e944] under position; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d] under overlay; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@469a7575] under trim; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@412c5e8b] under cast; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@637791d] under collate; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@18b6d3c1] under extract; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d86b9d] under ifnull; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@800d065] under pad; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5a0e0886] under str; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@262a1fad] under format; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@e7b265e] under timestampadd; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@33f2cfda] under timestampdiff; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under current_date; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under current_time; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under current_timestamp; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under local_date; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cde8c6c] under local_time; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@174721c4] under local_datetime; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3592c1c4] under offset_datetime; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@322e49ee] under instant; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7126e26] under sql; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@151ab2b9] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@19489b27] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@cde8c6c
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@174721c4
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@125d47c4] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@193bb809] under bit_length; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64b018f3] under octet_length; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6002e944
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under bitand; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2] under bitor; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805] under bitxor; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f2466c] under bitnot; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5809fa26] under median; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23468512] under insert; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3caafa67] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e546734] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1c61eda5] under listagg; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4bc6da03] under array; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4f59a516] under array_list; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3e046e39] under array_agg; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@62a54948] under array_position; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@316cda31] under array_positions; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7a2fce12] under array_positions_list; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66e17eff] under array_length; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@764b14b8] under array_concat; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@100ad67e] under array_prepend; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@713a35c5] under array_append; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@309dcdf3] under array_contains; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7573b9ee] under array_contains_nullable; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f73ce28] under array_overlaps; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@611b35d6] under array_overlaps_nullable; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dd3f8aa] under array_get; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@65c5bf0e] under array_set; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@160b4809] under array_remove_index; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@149b4d20] under array_slice; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@664e848c] under array_trim; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@251c4280] under array_fill; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@35650279] under array_fill_list; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@420a8042] under array_to_string; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69f2cb04] under mode; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@13803a94] under percentile_cont; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@b4732dc] under percentile_disc; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ad9b8d3] under rank; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@168ad26f] under dense_rank; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f93bf0a] under percent_rank; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@322204dc] under cume_dist; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@55acec99] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@61191222] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58833798] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2519026b] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@385dfb63] under trunc; prior registration was null
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-22 15:23:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@364fd4ae] under date_trunc; prior registration was null
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Date current date
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Time current time
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - mode()
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double pi
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Object sql
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-22 15:23:42 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-22 15:23:42 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-22 15:23:42 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-22 15:23:42 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-22 15:23:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:23:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-22 15:23:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-22 15:23:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:23:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:23:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:23:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:23:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-22 15:23:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-22 15:23:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:23:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-22 15:23:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-22 15:23:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-22 15:23:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-22 15:23:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-22 15:23:43 DEBUG creation - Starting post-init callbacks
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-22 15:23:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-22 15:23:43 DEBUG create - Created new SQL alias : g1_0
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1669931a] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-22 15:23:43 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:23:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-22 15:23:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 15:23:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-22 15:23:43 DEBUG create - Created new SQL alias : b1_0
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c2dd89b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-22 15:23:43 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d84418a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-22 15:23:43 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:23:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-22 15:23:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-22 15:23:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-22 15:23:43 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 15:23:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-22 15:23:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 15:23:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-22 15:23:43 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:23:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 15:23:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:23:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-22 15:23:43 DEBUG create - Created new SQL alias : i1_0
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@18dd7767] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e7bb00e] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-22 15:23:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-22 15:23:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-22 15:23:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-22 15:23:43 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-22 15:23:43 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-22 15:23:43 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-22 15:23:43 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-22 15:23:43 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-22 15:23:43 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@563172d3]
2025-04-22 15:23:43 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-22 15:23:43 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-22 15:23:43 DEBUG Table - No alter strings for table : bookings
2025-04-22 15:23:43 DEBUG Table - No alter strings for table : guests
2025-04-22 15:23:43 DEBUG Table - No alter strings for table : invoices
2025-04-22 15:23:43 DEBUG Table - No alter strings for table : rooms
2025-04-22 15:23:43 DEBUG Table - No alter strings for table : users
2025-04-22 15:23:43 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6c5ae8fd
2025-04-22 15:23:43 DEBUG SessionFactoryRegistry - Registering SessionFactory: 075725a4-2e76-411b-84dd-b18d67e091b1 (my-persistence-unit)
2025-04-22 15:23:43 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-22 15:23:43 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-22 15:23:43 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-22 15:23:43 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-22 15:23:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-22 15:23:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:23:43 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:23:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:23:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-22 15:23:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-22 15:23:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-22 15:23:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:23:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:23:44 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2018545259 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:23:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:23:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 15:23:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 597521407
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 15:23:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 15:23:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@336070ab
2025-04-22 15:23:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:23:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:23:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:23:44 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@876008407 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:23:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:23:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-22 15:23:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 934572255
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:23:44 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-22 15:23:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-22 15:23:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@359ea595
2025-04-22 15:23:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:23:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:23:44 INFO  HomeMenuUI - Login successful: SUPER ADMIN (SUPER_ADMIN)
2025-04-22 15:23:49 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-22 15:23:49 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:23:49 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:23:49 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 15:23:49 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 15:23:49 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 15:23:49 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 15:23:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:23:49 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@710973468 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:23:49 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 909418025
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1853858992
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1820295244
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1049228732
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 630910066
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 919836245
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 649989411
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1466644573
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 627091390
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 262929529
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1504325562
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1468882178
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2012237082
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 661139369
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 800523009
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 15:23:49 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:23:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 15:23:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79fc4e99
2025-04-22 15:23:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:23:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:24:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:24:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:24:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:24:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:24:42 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = false
2025-04-22 15:24:42 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:24:42 DEBUG create - Created new SQL alias : r1_0
2025-04-22 15:24:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-22 15:24:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-22 15:24:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-22 15:24:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-22 15:24:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:24:42 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@13080448 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:24:42 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=false
2025-04-22 15:24:42 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:24:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 15:24:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1342257685
2025-04-22 15:24:42 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 15:24:42 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:24:42 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 15:24:42 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:24:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 15:24:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c46dc02
2025-04-22 15:24:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:24:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:25:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:25:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:25:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:25:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:25:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:25:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:25:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:25:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:25:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:25:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:25:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:25:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:25:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:25:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:26:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:26:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:26:39 DEBUG hql - HQL : FROM User WHERE userRole = 'STAFF'
2025-04-22 15:26:39 DEBUG hql - Unable to resolve unqualified attribute [userRole] in local from-clause
2025-04-22 15:26:39 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(106482501445800)`
            <- [root] - `org.example.entity.User(106482501445800)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(106482501445800)`
          <- [root] - `org.example.entity.User(106482501445800)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(106482501445800).userRole`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:26:39 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:26:39 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(106482501445800))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:26:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(106482501445800).userRole) 
2025-04-22 15:26:39 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(106482501445800)]
 |  +-BasicFetch [org.example.entity.User(106482501445800).email]
 |  +-BasicFetch [org.example.entity.User(106482501445800).isActive]
 |  +-BasicFetch [org.example.entity.User(106482501445800).name]
 |  +-BasicFetch [org.example.entity.User(106482501445800).password]
 |  \-BasicFetch [org.example.entity.User(106482501445800).userRole]

2025-04-22 15:26:39 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(106482501445800)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:26:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:26:39 DEBUG results - Initializer list:
	  org.example.entity.User(106482501445800) -> EntityResultInitializer(org.example.entity.User(106482501445800))@78372190 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:26:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 8
2025-04-22 15:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#8] : 209516740
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#8
2025-04-22 15:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56e78538
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 34
2025-04-22 15:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#34] : 7544750
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#34
2025-04-22 15:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56e78538
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 15:26:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 35
2025-04-22 15:26:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#35] : 70820563
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:26:39 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:26:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#35
2025-04-22 15:26:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56e78538
2025-04-22 15:26:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:26:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:26:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:26:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:27:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:27:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:27:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:27:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:27:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:27:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:27:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:27:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:27:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:27:24 DEBUG results - Initializer list:
	  org.example.entity.User(106482501445800) -> EntityResultInitializer(org.example.entity.User(106482501445800))@1877590088 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:27:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 15:27:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:27:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 8
2025-04-22 15:27:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#8] : 1546957042
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:27:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#8
2025-04-22 15:27:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7dfec0bc
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:27:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 34
2025-04-22 15:27:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#34] : 317366989
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:27:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#34
2025-04-22 15:27:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7dfec0bc
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 15:27:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 35
2025-04-22 15:27:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#35] : 1389162903
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:27:24 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:27:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#35
2025-04-22 15:27:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7dfec0bc
2025-04-22 15:27:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:27:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:27:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:27:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:27:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:27:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:27:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:28:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:28:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:28:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:28:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:28:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:28:45 WARN  AdminMenuUI - Invalid email format entered: 0
2025-04-22 15:28:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:28:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:28:54 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@721840156 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:28:54 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1387827678
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1597156119
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1414727236
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1114852209
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 977612943
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1894076099
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1019746237
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1689840534
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 2003467974
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 757310910
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1370106456
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1919782816
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1448428389
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1718293060
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1712524347
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 15:28:54 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:28:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 15:28:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ae6451d
2025-04-22 15:28:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:28:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:28:58 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:28:58 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@2023591894 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:28:58 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=false
2025-04-22 15:28:58 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:28:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 15:28:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1155846026
2025-04-22 15:28:58 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 15:28:58 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:28:58 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 15:28:58 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:28:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 15:28:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50930bff
2025-04-22 15:28:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:28:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:29:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:29:06 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1351307120 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:29:06 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 210158726
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1051130608
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1876630105
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1438859728
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 881578083
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1030999416
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 181211485
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1171196949
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 791528455
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 211207319
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1848867745
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1403088342
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 309167705
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 677726975
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1576976929
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 15:29:06 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:29:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 15:29:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ceaa9
2025-04-22 15:29:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:29:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:29:08 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 15:29:08 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1954051593 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:29:08 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 15:29:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-22 15:29:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1943764464
2025-04-22 15:29:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:08 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:29:08 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:29:08 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:29:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-22 15:29:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44a485bc
2025-04-22 15:29:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:29:08 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 15:29:08 DEBUG TransactionImpl - begin
2025-04-22 15:29:08 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 15:29:08 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@735738459 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:29:08 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 15:29:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-22 15:29:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1577337565
2025-04-22 15:29:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:29:08 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:29:08 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:29:08 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:29:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-22 15:29:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18e76101
2025-04-22 15:29:08 DEBUG TransactionImpl - committing
2025-04-22 15:29:08 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 15:29:08 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 15:29:08 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 15:29:08 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 15:29:08 DEBUG EntityPrinter - Listing entities:
2025-04-22 15:29:08 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-22 15:29:08 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 15:29:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:29:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:29:08 INFO  RoomDaoImpl - Room with ID 2 marked as under maintenance.
2025-04-22 15:29:08 INFO  RoomServiceImpl - Room with ID 2 marked as under maintenance.
2025-04-22 15:29:08 INFO  AdminMenuUI - Room 2 marked under maintenance.
2025-04-22 15:29:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:29:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:29:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:29:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:29:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:29:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:29:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:29:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:29:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:29:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:29:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:29:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:30:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:30:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:30:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:30:16 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1792172929 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:30:16 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 308332638
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 636002577
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 553790651
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 892609277
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1699525388
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 97281693
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 891020651
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 556534527
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 561514757
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1197894457
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 767356419
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1820750521
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 232226317
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 2040329005
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-22 15:30:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-22 15:30:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-22 15:30:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-22 15:30:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:30:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:30:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:30:21 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@857396971 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:30:21 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=false
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-22 15:30:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-22 15:30:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1155317988
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-22 15:30:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-22 15:30:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2114eb1a
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:30:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-22 15:30:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 2119255170
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:30:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:30:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-22 15:30:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2114eb1a
2025-04-22 15:30:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:30:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:30:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:30:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 15:30:24 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1009195400 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:30:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 15:30:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-22 15:30:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 559389493
2025-04-22 15:30:24 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 15:30:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:30:24 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:30:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:30:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-22 15:30:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25b83dce
2025-04-22 15:30:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:30:24 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 15:30:24 DEBUG TransactionImpl - begin
2025-04-22 15:30:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 15:30:24 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1959627861 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-22 15:30:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-22 15:30:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-22 15:30:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 567367986
2025-04-22 15:30:24 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-22 15:30:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-22 15:30:24 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-22 15:30:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-22 15:30:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-22 15:30:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3966c679
2025-04-22 15:30:24 DEBUG TransactionImpl - committing
2025-04-22 15:30:24 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 15:30:24 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 15:30:24 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 15:30:24 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 15:30:24 DEBUG EntityPrinter - Listing entities:
2025-04-22 15:30:24 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-22 15:30:24 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-22 15:30:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:30:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:30:24 INFO  RoomDaoImpl - Room with ID 2 marked as available.
2025-04-22 15:30:24 INFO  RoomServiceImpl - Room with ID 2 marked as available.
2025-04-22 15:30:24 INFO  AdminMenuUI - Room 2 marked as available.
2025-04-22 15:30:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:30:31 DEBUG results - Initializer list:
	  org.example.entity.User(106482501445800) -> EntityResultInitializer(org.example.entity.User(106482501445800))@960858222 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:30:31 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:30:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 8
2025-04-22 15:30:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#8] : 922985472
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:30:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#8
2025-04-22 15:30:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22105c76
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:30:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 34
2025-04-22 15:30:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#34] : 36924735
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:30:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#34
2025-04-22 15:30:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22105c76
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 15:30:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 35
2025-04-22 15:30:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#35] : 2136918746
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:30:31 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:30:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#35
2025-04-22 15:30:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22105c76
2025-04-22 15:30:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:30:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:30:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:30:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:30:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:30:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:31:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:31:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:31:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:31:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:31:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:31:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:31:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:31:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:31:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:31:19 DEBUG results - Initializer list:
	  org.example.entity.User(106482501445800) -> EntityResultInitializer(org.example.entity.User(106482501445800))@1431782037 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:31:19 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:31:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 8
2025-04-22 15:31:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#8] : 1707510247
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:31:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#8
2025-04-22 15:31:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a6a2c20
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:31:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 34
2025-04-22 15:31:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#34] : 1560607671
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:31:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#34
2025-04-22 15:31:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a6a2c20
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 15:31:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 35
2025-04-22 15:31:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#35] : 229014598
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:31:19 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:31:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#35
2025-04-22 15:31:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a6a2c20
2025-04-22 15:31:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:31:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:31:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:31:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:31:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1551783332 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:31:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:31:36 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:31:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 34
2025-04-22 15:31:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#34] : 1140323469
2025-04-22 15:31:36 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:31:36 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:31:36 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:31:36 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:31:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:31:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#34
2025-04-22 15:31:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d0a4a22
2025-04-22 15:31:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:31:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:31:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:31:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:31:45 INFO  AdminMenuUI - Staff registration denied: abrar@gmail.com
2025-04-22 15:32:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:32:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:32:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:32:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:32:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:32:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:32:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:32:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:32:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:32:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:32:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:32:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:33:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:33:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:33:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:33:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:33:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:33:33 DEBUG results - Initializer list:
	  org.example.entity.User(106482501445800) -> EntityResultInitializer(org.example.entity.User(106482501445800))@429515253 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:33:33 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:33:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 8
2025-04-22 15:33:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#8] : 504672873
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:33:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#8
2025-04-22 15:33:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68543a35
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:33:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 34
2025-04-22 15:33:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#34] : 483012253
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:33:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#34
2025-04-22 15:33:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68543a35
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 15:33:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 35
2025-04-22 15:33:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#35] : 2010366935
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:33:33 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:33:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#35
2025-04-22 15:33:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68543a35
2025-04-22 15:33:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:33:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:33:40 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:33:40 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1290772670 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:33:40 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:33:40 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:33:40 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 34
2025-04-22 15:33:40 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#34] : 569670093
2025-04-22 15:33:40 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:33:40 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:33:40 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:33:40 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:33:40 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:33:40 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#34
2025-04-22 15:33:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@102fd71d
2025-04-22 15:33:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:33:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:33:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:33:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:33:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:33:44 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 15:33:44 DEBUG TransactionImpl - begin
2025-04-22 15:33:44 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:33:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:33:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-22 15:33:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:33:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 15:33:44 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@750529970 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:33:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 15:33:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 34
2025-04-22 15:33:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#34] : 1642133945
2025-04-22 15:33:44 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:33:44 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:33:44 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:33:44 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:33:44 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:33:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#34
2025-04-22 15:33:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2c7c898a
2025-04-22 15:33:44 DEBUG TransactionImpl - committing
2025-04-22 15:33:44 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 15:33:44 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 15:33:44 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 15:33:44 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 15:33:44 DEBUG EntityPrinter - Listing entities:
2025-04-22 15:33:44 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=ABRAR SHAHA, isActive=true, userRole=STAFF, userID=34, email=abrar@gmail.com}
2025-04-22 15:33:44 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 15:33:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:33:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:33:44 INFO  AdminMenuUI - Staff registration approved: abrar@gmail.com
2025-04-22 15:33:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:33:46 DEBUG results - Initializer list:
	  org.example.entity.User(106482501445800) -> EntityResultInitializer(org.example.entity.User(106482501445800))@1018053912 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:33:46 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:33:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 8
2025-04-22 15:33:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#8] : 1838444270
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:33:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#8
2025-04-22 15:33:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23dc70c1
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 15:33:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 35
2025-04-22 15:33:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#35] : 1404635097
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:33:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#35
2025-04-22 15:33:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23dc70c1
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:33:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 34
2025-04-22 15:33:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#34] : 742067400
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:33:46 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:33:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#34
2025-04-22 15:33:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23dc70c1
2025-04-22 15:33:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:33:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:33:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:34:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:34:09 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1654056127 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:34:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:34:09 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:34:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 34
2025-04-22 15:34:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#34] : 417277601
2025-04-22 15:34:09 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:34:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:34:09 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:34:09 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:34:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:34:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#34
2025-04-22 15:34:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c459194
2025-04-22 15:34:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:34:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:34:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:34:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:34:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:34:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:34:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:34:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:34:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:34:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:34:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:34:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:35:06 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 15:35:06 DEBUG TransactionImpl - begin
2025-04-22 15:35:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 15:35:06 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1641587857 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:35:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 15:35:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 34
2025-04-22 15:35:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#34] : 1909951660
2025-04-22 15:35:06 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:35:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:35:06 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:35:06 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:35:06 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:35:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#34
2025-04-22 15:35:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@550f522b
2025-04-22 15:35:06 DEBUG TransactionImpl - committing
2025-04-22 15:35:06 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 15:35:06 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 15:35:06 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 15:35:06 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 15:35:06 DEBUG EntityPrinter - Listing entities:
2025-04-22 15:35:06 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=ABRAR SHAHA, isActive=false, userRole=STAFF, userID=34, email=abrar@gmail.com}
2025-04-22 15:35:06 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 15:35:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:35:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:35:06 INFO  AdminMenuUI - Access revoked for staff: abrar@gmail.com
2025-04-22 15:35:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:35:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:35:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:35:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:35:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:35:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:35:41 WARN  AdminMenuUI - Invalid email format entered: 
2025-04-22 15:35:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:35:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:35:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:35:43 DEBUG results - Initializer list:
	  org.example.entity.User(106482501445800) -> EntityResultInitializer(org.example.entity.User(106482501445800))@1786758337 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:35:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-22 15:35:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 8
2025-04-22 15:35:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#8] : 110932276
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:35:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#8
2025-04-22 15:35:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@125124ea
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-22 15:35:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 35
2025-04-22 15:35:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#35] : 827092873
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:35:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#35
2025-04-22 15:35:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@125124ea
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:35:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(106482501445800)): 34
2025-04-22 15:35:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(106482501445800)#34] : 826609600
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:35:43 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:35:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(106482501445800)#34
2025-04-22 15:35:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@125124ea
2025-04-22 15:35:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:35:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:35:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:35:54 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1387466189 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:35:54 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:35:54 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:35:54 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 34
2025-04-22 15:35:54 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#34] : 43924520
2025-04-22 15:35:54 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:35:54 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:35:54 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:35:54 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:35:54 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:35:54 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#34
2025-04-22 15:35:54 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@480994d3
2025-04-22 15:35:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:35:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:36:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:36:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:36:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:36:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:36:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:36:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:36:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:36:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:36:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:36:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:37:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:37:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:37:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:37:12 WARN  AdminMenuUI - Invalid input '0' for granting/revoking access.
2025-04-22 15:37:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:37:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:37:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:37:26 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1900463850 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:37:26 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-22 15:37:26 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-22 15:37:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 34
2025-04-22 15:37:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#34] : 2105183523
2025-04-22 15:37:26 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:37:26 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:37:26 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:37:26 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:37:26 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:37:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#34
2025-04-22 15:37:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3acc65f0
2025-04-22 15:37:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:37:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:37:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:37:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:37:47 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-22 15:37:47 DEBUG TransactionImpl - begin
2025-04-22 15:37:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-22 15:37:47 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1508661771 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:37:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-22 15:37:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 34
2025-04-22 15:37:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#34] : 1505987317
2025-04-22 15:37:47 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-22 15:37:47 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-22 15:37:47 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-22 15:37:47 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-22 15:37:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-22 15:37:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#34
2025-04-22 15:37:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6244afc4
2025-04-22 15:37:47 DEBUG TransactionImpl - committing
2025-04-22 15:37:47 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-22 15:37:47 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-22 15:37:47 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-22 15:37:47 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-22 15:37:47 DEBUG EntityPrinter - Listing entities:
2025-04-22 15:37:47 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=ABRAR SHAHA, isActive=true, userRole=STAFF, userID=34, email=abrar@gmail.com}
2025-04-22 15:37:47 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-22 15:37:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:37:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:37:47 INFO  AdminMenuUI - Access granted to staff: abrar@gmail.com
2025-04-22 15:38:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:38:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:38:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:38:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:38:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:38:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:38:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:38:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:38:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:38:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:38:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:38:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:39:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:39:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:39:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:39:19 INFO  AdminMenuUI - Fetching all admin users.
2025-04-22 15:39:19 DEBUG hql - HQL : FROM User WHERE userRole = 'ADMIN'
2025-04-22 15:39:19 DEBUG hql - Unable to resolve unqualified attribute [userRole] in local from-clause
2025-04-22 15:39:19 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(107242456731300)`
            <- [root] - `org.example.entity.User(107242456731300)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(107242456731300)`
          <- [root] - `org.example.entity.User(107242456731300)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(107242456731300).userRole`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-22 15:39:19 DEBUG create - Created new SQL alias : u1_0
2025-04-22 15:39:19 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(107242456731300))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-22 15:39:19 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(107242456731300).userRole) 
2025-04-22 15:39:19 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(107242456731300)]
 |  +-BasicFetch [org.example.entity.User(107242456731300).email]
 |  +-BasicFetch [org.example.entity.User(107242456731300).isActive]
 |  +-BasicFetch [org.example.entity.User(107242456731300).name]
 |  +-BasicFetch [org.example.entity.User(107242456731300).password]
 |  \-BasicFetch [org.example.entity.User(107242456731300).userRole]

2025-04-22 15:39:19 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(107242456731300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-22 15:39:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:39:19 DEBUG results - Initializer list:
	  org.example.entity.User(107242456731300) -> EntityResultInitializer(org.example.entity.User(107242456731300))@1186841950 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:39:19 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-22 15:39:19 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:39:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(107242456731300)): 2
2025-04-22 15:39:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(107242456731300)#2] : 1520151464
2025-04-22 15:39:19 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 15:39:19 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:39:19 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 15:39:19 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:39:19 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 15:39:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(107242456731300)#2
2025-04-22 15:39:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72240290
2025-04-22 15:39:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:39:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:39:19 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-22 15:39:19 INFO  AdminMenuUI - Total admins found: 1
2025-04-22 15:39:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:39:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:39:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:40:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:40:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:40:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:40:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:40:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:40:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:40:18 INFO  AdminMenuUI - Fetching all admin users.
2025-04-22 15:40:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:40:18 DEBUG results - Initializer list:
	  org.example.entity.User(107242456731300) -> EntityResultInitializer(org.example.entity.User(107242456731300))@887742093 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:40:18 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-22 15:40:18 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:40:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(107242456731300)): 2
2025-04-22 15:40:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(107242456731300)#2] : 1912920463
2025-04-22 15:40:18 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 15:40:18 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:40:18 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 15:40:18 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:40:18 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 15:40:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(107242456731300)#2
2025-04-22 15:40:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8636cf4
2025-04-22 15:40:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:40:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:40:18 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-22 15:40:18 INFO  AdminMenuUI - Total admins found: 1
2025-04-22 15:40:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:40:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:40:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:40:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:40:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:40:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:40:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:41:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:41:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:41:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:41:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:41:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:41:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:41:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:42:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:42:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:42:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:42:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:42:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:42:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:42:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:42:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
2025-04-22 15:42:37 INFO  AdminMenuUI - Fetching all admin users.
2025-04-22 15:42:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-22 15:42:37 DEBUG results - Initializer list:
	  org.example.entity.User(107242456731300) -> EntityResultInitializer(org.example.entity.User(107242456731300))@149820420 (SingleTableEntityPersister(org.example.entity.User))

2025-04-22 15:42:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-22 15:42:37 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-22 15:42:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(107242456731300)): 2
2025-04-22 15:42:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(107242456731300)#2] : 1804911104
2025-04-22 15:42:37 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-22 15:42:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-22 15:42:37 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-22 15:42:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-22 15:42:37 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-22 15:42:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(107242456731300)#2
2025-04-22 15:42:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1322b542
2025-04-22 15:42:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:42:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-22 15:42:37 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-22 15:42:37 INFO  AdminMenuUI - Total admins found: 1
2025-04-22 15:42:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:42:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:42:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4419bd is alive
2025-04-22 15:43:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:43:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:43:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32cc39a4 is alive
2025-04-22 15:43:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:43:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:43:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-22 15:43:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1914c0b2 is alive
2025-04-22 15:43:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@216a7801 is alive
2025-04-22 15:43:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@421e44b2 is alive
2025-04-22 15:43:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1434f2a5 is alive
2025-04-22 15:44:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45897136 is alive
2025-04-22 15:44:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54e058d5 is alive
2025-04-22 15:44:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-22 15:44:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-22 15:44:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@588b0bf1 is alive
