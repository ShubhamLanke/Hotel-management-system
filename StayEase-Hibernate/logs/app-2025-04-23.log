2025-04-23 11:35:19 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 11:35:19 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 11:35:19 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 11:35:19 DEBUG HikariConfig - autoCommit......................true
2025-04-23 11:35:19 DEBUG HikariConfig - catalog.........................none
2025-04-23 11:35:19 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 11:35:19 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 11:35:19 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 11:35:19 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@49b2a47d
2025-04-23 11:35:19 DEBUG HikariConfig - dataSource......................none
2025-04-23 11:35:19 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 11:35:19 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 11:35:19 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 11:35:19 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 11:35:19 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 11:35:19 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 11:35:19 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 11:35:19 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 11:35:19 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 11:35:19 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 11:35:19 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 11:35:19 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 11:35:19 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 11:35:19 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 11:35:19 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 11:35:19 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 11:35:19 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 11:35:19 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 11:35:19 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 11:35:19 DEBUG HikariConfig - password........................<masked>
2025-04-23 11:35:19 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 11:35:19 DEBUG HikariConfig - readOnly........................false
2025-04-23 11:35:19 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 11:35:19 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 11:35:19 DEBUG HikariConfig - schema..........................none
2025-04-23 11:35:19 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 11:35:19 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 11:35:19 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 11:35:19 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 11:35:19 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4411fbdb-502f-4686-bc26-3c7dea33bb4c)
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Established new connection (4411fbdb-502f-4686-bc26-3c7dea33bb4c)
2025-04-23 11:35:19 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5dcd8c7a
2025-04-23 11:35:19 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 11:35:19 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 11:35:19 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 11:35:19 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 11:35:19 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4768bc3f-92f8-4762-9a32-f326dfde1958)
2025-04-23 11:35:19 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Established new connection (4768bc3f-92f8-4762-9a32-f326dfde1958)
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e9db41b
2025-04-23 11:35:19 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 11:35:19 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (01dd500e-b3c1-4673-940d-a2b573f932c9)
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:35:19 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Established new connection (01dd500e-b3c1-4673-940d-a2b573f932c9)
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5465df6b
2025-04-23 11:35:19 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 11:35:19 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (289bb8e4-1c29-4b5b-8588-3425ffad6c30)
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Established new connection (289bb8e4-1c29-4b5b-8588-3425ffad6c30)
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11674b83
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bbd818f6-70be-43ce-9d22-f3374092a376)
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Established new connection (bbd818f6-70be-43ce-9d22-f3374092a376)
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22e908d8
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@13006998
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7c18432b
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c18432b
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@384fc774
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-23 11:35:19 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@43c67247
2025-04-23 11:35:19 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3e587920] into BootstrapContext; was [null]
2025-04-23 11:35:19 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2ef8a8c3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@24f43aa3]
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2dde5a2c-b720-42bd-8a56-ca3cac370ce8)
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Established new connection (2dde5a2c-b720-42bd-8a56-ca3cac370ce8)
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@20bcdabc
2025-04-23 11:35:19 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 11:35:19 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 11:35:19 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 11:35:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 11:35:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0c5778f4-24c1-4e77-a7eb-c8f70ac4da49)
2025-04-23 11:35:20 DEBUG PoolBase - HikariPool-1 - Established new connection (0c5778f4-24c1-4e77-a7eb-c8f70ac4da49)
2025-04-23 11:35:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5ad8c747
2025-04-23 11:35:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-23 11:35:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2abda865-7055-4bba-b83d-fe4be6867284)
2025-04-23 11:35:20 DEBUG PoolBase - HikariPool-1 - Established new connection (2abda865-7055-4bba-b83d-fe4be6867284)
2025-04-23 11:35:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7148b4cc
2025-04-23 11:35:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-23 11:35:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ff6ce982-fdb1-4b98-b98d-15fca9e01729)
2025-04-23 11:35:20 DEBUG PoolBase - HikariPool-1 - Established new connection (ff6ce982-fdb1-4b98-b98d-15fca9e01729)
2025-04-23 11:35:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b8dddf5
2025-04-23 11:35:20 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 11:35:20 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 11:35:20 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 11:35:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-23 11:35:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5c99b2c3-3add-4de4-b445-b077d33bbd5f)
2025-04-23 11:35:20 DEBUG PoolBase - HikariPool-1 - Established new connection (5c99b2c3-3add-4de4-b445-b077d33bbd5f)
2025-04-23 11:35:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d228d02
2025-04-23 11:35:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-23 11:35:20 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 11:35:20 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 11:35:20 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 11:35:20 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@46678e49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@748e9b20)
2025-04-23 11:35:20 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2063c53e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a9bc08f)
2025-04-23 11:35:20 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 11:35:20 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5c82cd4f
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5c82cd4f
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7c18432b`
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:35:20 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:35:20 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 11:35:20 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4d7aaca2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@604b1e1d]
2025-04-23 11:35:20 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 11:35:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 11:35:20 DEBUG EntityBinder - Import with entity name User
2025-04-23 11:35:20 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property userID
2025-04-23 11:35:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property email
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property isActive
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property name
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property password
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property userRole
2025-04-23 11:35:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 11:35:20 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 11:35:20 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property guestId
2025-04-23 11:35:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property age
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property name
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property user
2025-04-23 11:35:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 11:35:20 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 11:35:20 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property bookingId
2025-04-23 11:35:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property checkIn
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property checkOut
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property room
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property status
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property user
2025-04-23 11:35:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 11:35:20 DEBUG EntityBinder - Import with entity name Room
2025-04-23 11:35:20 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property roomID
2025-04-23 11:35:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property price
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property roomType
2025-04-23 11:35:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 11:35:20 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 11:35:20 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 11:35:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property amount
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property booking
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property issueDate
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 11:35:20 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 11:35:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 11:35:20 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 11:35:20 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:35:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:35:20 DEBUG PropertyBinder - Building property user
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 11:35:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 11:35:20 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 11:35:20 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 11:35:20 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 11:35:20 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 11:35:20 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 11:35:20 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:35:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:35:20 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:35:20 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5d342959, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-23 11:35:20 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@315105f] under count; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@493da830] under every; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1f939a0f] under any; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942] under sinh; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ec7d21] under cosh; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70025b99] under tanh; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63] under pi; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7] under log; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@45ab3bdd] under position; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@64e1377c] under overlay; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@72976b4] under trim; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@696db620] under cast; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6968c1d6] under collate; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2ceee4b6] under extract; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@e784320] under ifnull; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4cad79bc] under pad; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5f05c8d6] under str; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3a3ed300] under format; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2404b5a] under timestampadd; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@46dcbeab] under timestampdiff; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dcb42a9] under current_date; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6af90849] under current_time; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1d06f16f] under current_timestamp; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under local_date; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68dd39d2] under local_time; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a44cfc0] under local_datetime; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e3c26e] under offset_datetime; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@80b122b] under instant; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4b0bd001] under sql; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f9cab00] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70025b99
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ec7d21
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@7c5d1d25] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@68dd39d2
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@4a44cfc0
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@26ca61bf] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@73a0f2b] under bit_length; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@fa5f81c] under octet_length; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d526c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@45ab3bdd
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f2f0109] under bitand; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483b0690] under bitor; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293] under bitxor; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6870c3c2] under bitnot; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb0a08c] under median; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4debbf0] under insert; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@771a7d53] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@64e1377c
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6d6d480c] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@59b32539] under listagg; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5d0b0cb9] under array; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7f7b6639] under array_list; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@1860f3be] under array_agg; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@101ca8da] under array_position; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@343e225a] under array_positions; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@17dad32f] under array_positions_list; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79696332] under array_length; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@1727e03a] under array_concat; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@448b808a] under array_prepend; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7e62cfa3] under array_append; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@75023c53] under array_contains; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@66813e6e] under array_contains_nullable; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5ba03c82] under array_overlaps; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@60df7989] under array_overlaps_nullable; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47f04e4d] under array_get; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@68b366e2] under array_set; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@26837057] under array_remove_index; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2dbc408c] under array_slice; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@991cbde] under array_trim; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@57ddd45b] under array_fill; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2e7bf7b7] under array_fill_list; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@4519f676] under array_to_string; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@642ee49c] under mode; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@294aba23] under percentile_cont; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69909c14] under percentile_disc; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5f5827d0] under rank; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@58a2d9f9] under dense_rank; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4337afd] under percent_rank; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1d02af26] under cume_dist; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5ad1904f] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@a146b11] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f438904] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@22ad1bae] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2eda072] under trunc; prior registration was null
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 11:35:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fa21d49] under date_trunc; prior registration was null
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 11:35:21 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 11:35:21 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 11:35:21 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:35:21 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 11:35:21 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:35:21 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:35:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 11:35:21 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:35:21 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:35:21 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:35:21 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:35:21 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:35:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 11:35:21 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:35:21 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:35:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:35:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:35:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:35:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 11:35:21 DEBUG creation - Starting post-init callbacks
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 11:35:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 11:35:21 DEBUG create - Created new SQL alias : g1_0
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f6494c0] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 11:35:21 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:35:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 11:35:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:35:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 11:35:21 DEBUG create - Created new SQL alias : b1_0
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61911947] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 11:35:21 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@795f6681] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 11:35:21 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:35:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 11:35:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:35:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 11:35:21 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:35:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 11:35:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:35:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 11:35:21 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:35:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 11:35:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:35:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 11:35:21 DEBUG create - Created new SQL alias : i1_0
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1883871b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 11:35:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@539316bb] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 11:35:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 11:35:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 11:35:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 11:35:21 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 11:35:21 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 11:35:21 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 11:35:21 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 11:35:21 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 11:35:21 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4d7aaca2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5bb2fb2b]
2025-04-23 11:35:21 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 11:35:21 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 11:35:21 DEBUG Table - No alter strings for table : bookings
2025-04-23 11:35:21 DEBUG Table - No alter strings for table : guests
2025-04-23 11:35:21 DEBUG Table - No alter strings for table : invoices
2025-04-23 11:35:21 DEBUG Table - No alter strings for table : rooms
2025-04-23 11:35:21 DEBUG Table - No alter strings for table : users
2025-04-23 11:35:21 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@600bbf9e
2025-04-23 11:35:21 DEBUG SessionFactoryRegistry - Registering SessionFactory: 6a4a5cf0-bbcf-4e83-b9b3-b56a5a6dbaae (my-persistence-unit)
2025-04-23 11:35:21 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 11:35:21 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 11:35:21 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 11:35:21 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-23 11:35:22 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-23 11:35:22 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 11:35:22 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:35:22 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:35:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:35:22 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 11:35:22 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 11:35:22 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-23 11:35:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:35:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:35:22 DEBUG results - Initializer list is empty
2025-04-23 11:35:22 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-23 11:35:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2a0c244e
2025-04-23 11:35:22 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-23 11:35:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:35:22 DEBUG results - Initializer list is empty
2025-04-23 11:35:22 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-23 11:35:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2a0c244e
2025-04-23 11:35:22 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-23 11:35:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:22 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 11:35:22 DEBUG TransactionImpl - begin
2025-04-23 11:35:22 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 11:35:22 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 11:35:22 DEBUG results - Initializer list is empty
2025-04-23 11:35:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3387ab0
2025-04-23 11:35:22 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 11:35:22 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@4203529f
2025-04-23 11:35:22 DEBUG TransactionImpl - committing
2025-04-23 11:35:22 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 11:35:22 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 11:35:22 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 11:35:22 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 11:35:22 DEBUG EntityPrinter - Listing entities:
2025-04-23 11:35:22 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SONAM GUPTA, isActive=false, userRole=STAFF, userID=37, email=sonam@gmail.com}
2025-04-23 11:35:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:22 INFO  UserDaoImpl - User registered successfully: User{userID=37, name='SONAM GUPTA', email='sonam@gmail.com', password='!Q1q', userRole=STAFF, isActive=false}
2025-04-23 11:35:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:35:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:35:51 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 11:35:51 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 11:35:51 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:35:51 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:35:51 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:35:51 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 11:35:51 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 11:35:51 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 11:35:51 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:35:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:35:51 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1821038295 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:35:51 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:35:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:35:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 548828006
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:35:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:35:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2337bf27
2025-04-23 11:35:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:35:51 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1228225859 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:35:51 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:35:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:35:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 342907384
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:35:51 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:35:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:35:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@744fb110
2025-04-23 11:35:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:51 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 11:35:57 INFO  UserMenuUI - User 13 is booking a room
2025-04-23 11:35:57 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 11:35:57 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:35:57 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:35:57 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:35:57 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 11:35:57 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 11:35:57 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:35:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:35:57 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1339440195 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:35:57 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1570256460
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1464835638
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 2010850076
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1622464820
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1782473530
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1101786725
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1875310223
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 696123194
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 809729692
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 772109879
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1982828534
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 820849190
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 468780345
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 507538622
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 337252543
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 11:35:57 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:35:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 11:35:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2435c6ae
2025-04-23 11:35:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:35:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:36:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:36:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:36:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:36:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:36:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e9db41b is alive
2025-04-23 11:37:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5dcd8c7a is alive
2025-04-23 11:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5d228d02 is alive
2025-04-23 11:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5465df6b is alive
2025-04-23 11:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@20bcdabc is alive
2025-04-23 11:37:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7148b4cc is alive
2025-04-23 11:37:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11674b83 is alive
2025-04-23 11:37:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@22e908d8 is alive
2025-04-23 11:37:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5ad8c747 is alive
2025-04-23 11:37:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8dddf5 is alive
2025-04-23 11:37:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:37:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:37:34 INFO  UserMenuUI - Collected details for 0 guest(s)
2025-04-23 11:37:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:37:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:38:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:38:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:38:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e9db41b is alive
2025-04-23 11:40:02 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 11:40:03 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 11:40:03 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 11:40:03 DEBUG HikariConfig - autoCommit......................true
2025-04-23 11:40:03 DEBUG HikariConfig - catalog.........................none
2025-04-23 11:40:03 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 11:40:03 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 11:40:03 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 11:40:03 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-23 11:40:03 DEBUG HikariConfig - dataSource......................none
2025-04-23 11:40:03 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 11:40:03 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 11:40:03 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 11:40:03 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 11:40:03 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 11:40:03 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 11:40:03 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 11:40:03 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 11:40:03 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 11:40:03 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 11:40:03 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 11:40:03 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 11:40:03 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 11:40:03 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 11:40:03 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 11:40:03 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 11:40:03 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 11:40:03 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 11:40:03 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 11:40:03 DEBUG HikariConfig - password........................<masked>
2025-04-23 11:40:03 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 11:40:03 DEBUG HikariConfig - readOnly........................false
2025-04-23 11:40:03 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 11:40:03 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 11:40:03 DEBUG HikariConfig - schema..........................none
2025-04-23 11:40:03 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 11:40:03 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 11:40:03 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 11:40:03 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 11:40:03 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5b9392b0-7a9f-42dd-b69b-a2bca2bab0ed)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (5b9392b0-7a9f-42dd-b69b-a2bca2bab0ed)
2025-04-23 11:40:03 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c1156a7
2025-04-23 11:40:03 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 11:40:03 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 11:40:03 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 11:40:03 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 11:40:03 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 11:40:03 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 11:40:03 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ed48f662-3360-4c59-b90d-60d5626da85d)
2025-04-23 11:40:03 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (ed48f662-3360-4c59-b90d-60d5626da85d)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4cd9781a
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:40:03 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 11:40:03 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 11:40:03 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c95381d3-fdbe-40e8-a09d-39bb3fe6bb8a)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (c95381d3-fdbe-40e8-a09d-39bb3fe6bb8a)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4621136a
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70d2e40b
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8b43b11d-4da6-4b33-bff0-44204e7f0782)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-23 11:40:03 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@344344fa] into BootstrapContext; was [null]
2025-04-23 11:40:03 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2db2cd5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa]
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (8b43b11d-4da6-4b33-bff0-44204e7f0782)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32385ca
2025-04-23 11:40:03 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 11:40:03 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 11:40:03 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9866b73a-c7c8-47bd-acf9-76d4bddc9dc5)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (9866b73a-c7c8-47bd-acf9-76d4bddc9dc5)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4bd241c
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3ef6871d-de4f-458e-ae37-8812a2eef60a)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (3ef6871d-de4f-458e-ae37-8812a2eef60a)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32ea427d
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b86516e2-ca68-4124-bdef-6f73cdbd145b)
2025-04-23 11:40:03 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 11:40:03 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 11:40:03 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (b86516e2-ca68-4124-bdef-6f73cdbd145b)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c9ebd09
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (01c43074-a112-4df1-aab7-b53d1d7397c5)
2025-04-23 11:40:03 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (01c43074-a112-4df1-aab7-b53d1d7397c5)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@630c7a85
2025-04-23 11:40:03 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 11:40:03 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 11:40:03 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f0cb5a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1b29d52b)
2025-04-23 11:40:03 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47547132) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@655523dd)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (be141e8d-3662-4533-a739-00b966818b56)
2025-04-23 11:40:03 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 11:40:03 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@41200e0c`
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (be141e8d-3662-4533-a739-00b966818b56)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e7c2f3c
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:40:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:40:03 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 11:40:03 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21f8e55f]
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e8380d6d-c04e-4dc4-83b7-e0fa000ed5a6)
2025-04-23 11:40:03 DEBUG PoolBase - HikariPool-1 - Established new connection (e8380d6d-c04e-4dc4-83b7-e0fa000ed5a6)
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6ee56d24
2025-04-23 11:40:03 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 11:40:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 11:40:03 DEBUG EntityBinder - Import with entity name User
2025-04-23 11:40:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:40:03 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 11:40:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property userID
2025-04-23 11:40:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property email
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property isActive
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property name
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property password
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property userRole
2025-04-23 11:40:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 11:40:04 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 11:40:04 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property guestId
2025-04-23 11:40:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property age
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property name
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property user
2025-04-23 11:40:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 11:40:04 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 11:40:04 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property bookingId
2025-04-23 11:40:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property checkIn
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property checkOut
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property room
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property status
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property user
2025-04-23 11:40:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 11:40:04 DEBUG EntityBinder - Import with entity name Room
2025-04-23 11:40:04 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property roomID
2025-04-23 11:40:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property price
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property roomType
2025-04-23 11:40:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 11:40:04 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 11:40:04 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 11:40:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property amount
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property booking
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property issueDate
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 11:40:04 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 11:40:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 11:40:04 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 11:40:04 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:40:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:40:04 DEBUG PropertyBinder - Building property user
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 11:40:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 11:40:04 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 11:40:04 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 11:40:04 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 11:40:04 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 11:40:04 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 11:40:04 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:40:04 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:40:04 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1e0fdb2f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-23 11:40:04 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@21263314] under count; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5b88b8e] under every; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@58253c57] under any; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133] under sinh; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@430b2699] under cosh; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67536ae0] under tanh; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6413d7e7] under pi; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d16be4f] under log; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7112ce6] under position; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f3560d4] under overlay; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6088451e] under trim; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1163a27] under cast; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549] under collate; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@b0fd744] under extract; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@726934e2] under ifnull; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@798dad3d] under pad; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7d986d83] under str; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@78422efb] under format; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@d48e998] under timestampadd; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7885776b] under timestampdiff; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a3ed300] under current_date; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1984212d] under current_time; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39f5b723] under current_timestamp; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4eaa375c] under local_date; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2404b5a] under local_time; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3af58f76] under local_datetime; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2ead6ba4] under offset_datetime; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31a2a9fa] under instant; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@46dcbeab] under sql; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d16be4f
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36e43829] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67536ae0
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@430b2699
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6413d7e7
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6af90849] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2404b5a
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3af58f76
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4a44cfc0] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60e3c26e] under bit_length; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@80b122b] under octet_length; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7112ce6
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65cf4d6d] under bitand; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b410308] under bitor; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under bitxor; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f9cab00] under bitnot; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10272bbb] under median; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under insert; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@32eae6f2] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f3560d4
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@26ca61bf] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6870c3c2] under listagg; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5d94a2dc] under array; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@cedee22] under array_list; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@40c2ce52] under array_agg; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2b6a0ea9] under array_position; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@659f226a] under array_positions; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1e79d43] under array_positions_list; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@343e225a] under array_length; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@25a7fedf] under array_concat; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@65f40689] under array_prepend; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@29be997f] under array_append; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@46e190ed] under array_contains; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@383c3eb3] under array_contains_nullable; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@54c622a7] under array_overlaps; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@37348491] under array_overlaps_nullable; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66813e6e] under array_get; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@640cc04b] under array_set; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@6723610b] under array_remove_index; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ba03c82] under array_slice; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60df7989] under array_trim; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2d74c81b] under array_fill; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@10b687f2] under array_fill_list; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@991cbde] under array_to_string; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@568750b7] under mode; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3e28fee1] under percentile_cont; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16a2ed51] under percentile_disc; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2fb25f4c] under rank; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@de81be1] under dense_rank; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@342e690b] under percent_rank; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4519f676] under cume_dist; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@781711b7] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@642a16aa] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642ee49c] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4e224df5] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4116f66a] under trunc; prior registration was null
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 11:40:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59c04bee] under date_trunc; prior registration was null
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 11:40:04 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 11:40:04 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 11:40:04 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:40:04 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 11:40:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:40:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:40:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 11:40:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:40:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:40:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:40:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:40:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:40:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 11:40:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:40:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:40:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:40:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:40:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:40:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 11:40:04 DEBUG creation - Starting post-init callbacks
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 11:40:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 11:40:05 DEBUG create - Created new SQL alias : g1_0
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16d41725] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 11:40:05 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:40:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 11:40:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:40:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 11:40:05 DEBUG create - Created new SQL alias : b1_0
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@684372d0] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 11:40:05 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6060146b] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 11:40:05 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:40:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 11:40:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:40:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 11:40:05 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:40:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 11:40:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:40:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 11:40:05 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:40:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 11:40:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:40:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 11:40:05 DEBUG create - Created new SQL alias : i1_0
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d2d8846] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b409a79] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 11:40:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 11:40:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 11:40:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 11:40:05 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 11:40:05 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 11:40:05 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 11:40:05 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 11:40:05 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 11:40:05 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@19bfbe28]
2025-04-23 11:40:05 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 11:40:05 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 11:40:05 DEBUG Table - No alter strings for table : bookings
2025-04-23 11:40:05 DEBUG Table - No alter strings for table : guests
2025-04-23 11:40:05 DEBUG Table - No alter strings for table : invoices
2025-04-23 11:40:05 DEBUG Table - No alter strings for table : rooms
2025-04-23 11:40:05 DEBUG Table - No alter strings for table : users
2025-04-23 11:40:05 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7185e611
2025-04-23 11:40:05 DEBUG SessionFactoryRegistry - Registering SessionFactory: 9891cdb5-8b61-4adf-8af2-46b1a0b9a790 (my-persistence-unit)
2025-04-23 11:40:05 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 11:40:05 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 11:40:05 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 11:40:05 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 11:40:05 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 11:40:05 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:40:05 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:40:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:40:05 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 11:40:05 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 11:40:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 11:40:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:40:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:40:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@613764738 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:40:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:40:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:40:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1276530561
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:40:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:40:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@774304ca
2025-04-23 11:40:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:40:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:40:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:40:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2013611768 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:40:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:40:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:40:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 287096026
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:40:05 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:40:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:40:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@437c1a87
2025-04-23 11:40:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:40:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:40:05 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 11:40:07 INFO  UserMenuUI - User 13 is booking a room
2025-04-23 11:40:07 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 11:40:07 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:40:07 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:40:07 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:40:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 11:40:07 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 11:40:07 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:40:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:40:07 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1958757239 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:40:07 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 242957908
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 187712237
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 521328096
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1711600198
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 202606260
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 87923441
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 210362979
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1298048886
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1567145551
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 887840001
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 2008165125
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1341085586
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1475150566
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 956321359
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1594663017
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 11:40:07 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:40:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 11:40:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b103db7
2025-04-23 11:40:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:40:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:40:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:40:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:41:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:41:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:41:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:41:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:41:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32385ca is alive
2025-04-23 11:41:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cd9781a is alive
2025-04-23 11:41:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-23 11:41:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ee56d24 is alive
2025-04-23 11:41:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c9ebd09 is alive
2025-04-23 11:41:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e7c2f3c is alive
2025-04-23 11:41:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@630c7a85 is alive
2025-04-23 11:41:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4bd241c is alive
2025-04-23 11:41:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4621136a is alive
2025-04-23 11:42:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@32ea427d is alive
2025-04-23 11:42:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:42:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:44:25 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 11:44:25 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 11:44:25 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 11:44:25 DEBUG HikariConfig - autoCommit......................true
2025-04-23 11:44:25 DEBUG HikariConfig - catalog.........................none
2025-04-23 11:44:25 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 11:44:25 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 11:44:25 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 11:44:25 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-23 11:44:25 DEBUG HikariConfig - dataSource......................none
2025-04-23 11:44:25 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 11:44:25 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 11:44:25 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 11:44:25 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 11:44:25 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 11:44:25 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 11:44:25 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 11:44:25 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 11:44:25 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 11:44:25 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 11:44:25 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 11:44:25 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 11:44:25 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 11:44:25 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 11:44:25 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 11:44:25 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 11:44:25 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 11:44:25 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 11:44:25 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 11:44:25 DEBUG HikariConfig - password........................<masked>
2025-04-23 11:44:25 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 11:44:25 DEBUG HikariConfig - readOnly........................false
2025-04-23 11:44:25 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 11:44:25 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 11:44:25 DEBUG HikariConfig - schema..........................none
2025-04-23 11:44:25 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 11:44:25 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 11:44:25 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 11:44:25 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 11:44:25 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 11:44:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (00c443bf-c9fb-47d4-a1a1-a64c45e5c681)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (00c443bf-c9fb-47d4-a1a1-a64c45e5c681)
2025-04-23 11:44:26 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71529963
2025-04-23 11:44:26 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 11:44:26 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 11:44:26 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 11:44:26 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 11:44:26 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 11:44:26 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 11:44:26 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (75aee95d-bb10-418c-9a03-85926c6a2594)
2025-04-23 11:44:26 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (75aee95d-bb10-418c-9a03-85926c6a2594)
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d33e661
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:44:26 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 11:44:26 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 11:44:26 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e138c7e3-1e03-4f7f-808b-84980f40b1b8)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (e138c7e3-1e03-4f7f-808b-84980f40b1b8)
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77cb8d11
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (00ba395b-466d-44a2-8148-32a577935dea)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70e29e14
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-23 11:44:26 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1827a871] into BootstrapContext; was [null]
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (00ba395b-466d-44a2-8148-32a577935dea)
2025-04-23 11:44:26 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48e64352] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7249dadf]
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32c90d8c
2025-04-23 11:44:26 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 11:44:26 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (637c7041-63fa-461e-87e7-054d22092e8b)
2025-04-23 11:44:26 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (637c7041-63fa-461e-87e7-054d22092e8b)
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@50abe55a
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bfafd078-fb00-46a8-bbbc-3deca2ace52e)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (bfafd078-fb00-46a8-bbbc-3deca2ace52e)
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b19947
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8caf79fa-e0f4-4457-9936-427b72b76d8d)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (8caf79fa-e0f4-4457-9936-427b72b76d8d)
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28392f25
2025-04-23 11:44:26 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 11:44:26 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 11:44:26 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (de773e0c-696a-4e70-9ca2-07461ff1c1c8)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (de773e0c-696a-4e70-9ca2-07461ff1c1c8)
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@52e6f2c3
2025-04-23 11:44:26 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 11:44:26 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a907ab2b-0dff-4d47-b9c0-b3e30ef3662b)
2025-04-23 11:44:26 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (a907ab2b-0dff-4d47-b9c0-b3e30ef3662b)
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d685cf0
2025-04-23 11:44:26 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@12958360) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@c6e0f32)
2025-04-23 11:44:26 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f3f0fae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21a66d45)
2025-04-23 11:44:26 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 11:44:26 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@14379273
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14379273
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24be2d9c`
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:44:26 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (59e2219f-e511-42d5-a63f-e76c4f3e412c)
2025-04-23 11:44:26 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 11:44:26 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@724c5cbe]
2025-04-23 11:44:26 DEBUG PoolBase - HikariPool-1 - Established new connection (59e2219f-e511-42d5-a63f-e76c4f3e412c)
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@521c9dbb
2025-04-23 11:44:26 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 11:44:26 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:44:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 11:44:26 DEBUG EntityBinder - Import with entity name User
2025-04-23 11:44:26 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property userID
2025-04-23 11:44:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property email
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property isActive
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property name
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property password
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property userRole
2025-04-23 11:44:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 11:44:26 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 11:44:26 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property guestId
2025-04-23 11:44:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property age
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property name
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property user
2025-04-23 11:44:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 11:44:26 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 11:44:26 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property bookingId
2025-04-23 11:44:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property checkIn
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property checkOut
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property room
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property status
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property user
2025-04-23 11:44:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 11:44:26 DEBUG EntityBinder - Import with entity name Room
2025-04-23 11:44:26 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property roomID
2025-04-23 11:44:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property price
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property roomType
2025-04-23 11:44:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 11:44:26 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 11:44:26 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 11:44:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property amount
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property booking
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property issueDate
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 11:44:26 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 11:44:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 11:44:26 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 11:44:26 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:44:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:44:26 DEBUG PropertyBinder - Building property user
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 11:44:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 11:44:26 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 11:44:26 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 11:44:26 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 11:44:26 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 11:44:26 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 11:44:27 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:44:27 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:44:27 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5fef2aac, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-23 11:44:27 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@71ed560f] under count; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@315105f] under every; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b61bf11] under any; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97] under sinh; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d] under cosh; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031] under tanh; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54] under pi; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb] under log; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@40de8f93] under position; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae] under overlay; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1163a27] under trim; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6a1ef65c] under cast; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4] under collate; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@42f85fa4] under extract; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6968c1d6] under ifnull; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2ceee4b6] under pad; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@e784320] under str; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@50eb4a2c] under format; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7885776b] under timestampadd; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4eaa375c] under timestampdiff; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31a2a9fa] under current_date; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b82e0f] under current_time; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27a09971] under current_timestamp; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6215366a] under local_date; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46dcbeab] under local_time; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36e43829] under local_datetime; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@152c4495] under offset_datetime; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under instant; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4fa4f485] under sql; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d67f5eb
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68dd39d2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@250a9031
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@111d5c97
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c17c3d
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1665fa54
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@999b951] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@46dcbeab
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@36e43829
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@f9cab00] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@10272bbb] under bit_length; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@36d33f4] under octet_length; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@40de8f93
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c5d1d25] under bitand; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@550e9be6] under bitor; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020] under bitxor; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32eae6f2] under bitnot; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26ca61bf] under median; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under insert; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@687e6293] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1642eeae
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6870c3c2] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@771a7d53] under listagg; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@60a7e509] under array; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2e13f304] under array_list; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@53ce2392] under array_agg; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@759de304] under array_position; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@32bb0072] under array_positions; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@889a8a8] under array_positions_list; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f29353f] under array_length; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@fe87ddd] under array_concat; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@23da79eb] under array_prepend; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@168b4cb0] under array_append; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@da28d03] under array_contains; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@ebda593] under array_contains_nullable; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3a17b2e3] under array_overlaps; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5e13f156] under array_overlaps_nullable; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22d322f5] under array_get; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@7ab1127c] under array_set; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3520963d] under array_remove_index; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@388d14e] under array_slice; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd43562] under array_trim; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@456bcb74] under array_fill; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@a9c5b75] under array_fill_list; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3e28fee1] under array_to_string; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@de81be1] under mode; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@342e690b] under percentile_cont; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4519f676] under percentile_disc; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@781711b7] under rank; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642a16aa] under dense_rank; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642ee49c] under percent_rank; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@294aba23] under cume_dist; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32456db0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5f5827d0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58a2d9f9] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f96f020
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4dd90166] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@388623ad] under trunc; prior registration was null
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 11:44:27 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@91f565d] under date_trunc; prior registration was null
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 11:44:27 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 11:44:27 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 11:44:27 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:44:27 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 11:44:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:44:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:44:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 11:44:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:44:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:44:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:44:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:44:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:44:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 11:44:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:44:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:44:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:44:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:44:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:44:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 11:44:27 DEBUG creation - Starting post-init callbacks
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 11:44:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 11:44:27 DEBUG create - Created new SQL alias : g1_0
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57c69937] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 11:44:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:44:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 11:44:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:44:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 11:44:27 DEBUG create - Created new SQL alias : b1_0
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6060146b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 11:44:27 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34cd65ac] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 11:44:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:44:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 11:44:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:44:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 11:44:27 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:44:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 11:44:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:44:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 11:44:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:44:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 11:44:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:44:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 11:44:27 DEBUG create - Created new SQL alias : i1_0
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5940b14e] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 11:44:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74431b9c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 11:44:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 11:44:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 11:44:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 11:44:27 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 11:44:27 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 11:44:27 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 11:44:27 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 11:44:27 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 11:44:27 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@309028af] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@766b6d02]
2025-04-23 11:44:27 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 11:44:27 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 11:44:28 DEBUG Table - No alter strings for table : bookings
2025-04-23 11:44:28 DEBUG Table - No alter strings for table : guests
2025-04-23 11:44:28 DEBUG Table - No alter strings for table : invoices
2025-04-23 11:44:28 DEBUG Table - No alter strings for table : rooms
2025-04-23 11:44:28 DEBUG Table - No alter strings for table : users
2025-04-23 11:44:28 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56e5c8fb
2025-04-23 11:44:28 DEBUG SessionFactoryRegistry - Registering SessionFactory: 72f6533d-36fd-40ff-a79d-833b5343bf2d (my-persistence-unit)
2025-04-23 11:44:28 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 11:44:28 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 11:44:28 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 11:44:28 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 11:44:28 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 11:44:28 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:44:28 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:44:28 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:44:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 11:44:28 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 11:44:28 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 11:44:28 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:44:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:44:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@817902707 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:44:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:44:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:44:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 452471720
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:44:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:44:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6614ecca
2025-04-23 11:44:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:44:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:44:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:44:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@402702819 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:44:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:44:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:44:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1349733610
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:44:28 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:44:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:44:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e6280de
2025-04-23 11:44:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:44:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:44:28 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 11:44:29 INFO  UserMenuUI - User 13 is booking a room
2025-04-23 11:44:29 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 11:44:29 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:44:29 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:44:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:44:29 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 11:44:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 11:44:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:44:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:44:29 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@936908167 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:44:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 393242843
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1567145551
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 887840001
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 2008165125
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1341085586
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1475150566
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 956321359
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1594663017
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1785343965
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1429207620
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1852224664
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1423138517
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1870436181
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1168882980
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 506594173
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 11:44:29 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:44:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 11:44:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d5ea776
2025-04-23 11:44:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:44:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:44:56 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:44:56 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:45:05 INFO  UserMenuUI - Collected details for 1 guest(s)
2025-04-23 11:45:05 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 11:45:05 DEBUG TransactionImpl - begin
2025-04-23 11:45:05 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 11:45:05 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 11:45:05 DEBUG SqlExceptionHelper - could not execute statement [insert into guests (age,name,user_id) values (?,?,?) returning guest_id]
org.postgresql.util.PSQLException: ERROR: new row for relation "guests" violates check constraint "guests_age_check"
  Detail: Failing row contains (19, 13, SONAL GUPTA, -20).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:180) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.execute(ResultSetReturnImpl.java:129) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.InsertReturningDelegate.executeAndExtractReturning(InsertReturningDelegate.java:96) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.AbstractReturningDelegate.performMutation(AbstractReturningDelegate.java:58) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:388) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:302) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:221) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:135) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.addAccompaniedGuest(UserDaoImpl.java:145) [classes/:?]
	at org.example.service.UserServiceImpl.addAccompaniedGuest(UserServiceImpl.java:115) [classes/:?]
	at org.example.controller.UserController.addAccompaniedGuest(UserController.java:83) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.bookRoomByUser(UserMenuUI.java:500) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.displayUserMenu(UserMenuUI.java:69) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:101) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-23 11:45:05 WARN  SqlExceptionHelper - SQL Error: 0, SQLState: 23514
2025-04-23 11:45:05 ERROR SqlExceptionHelper - ERROR: new row for relation "guests" violates check constraint "guests_age_check"
  Detail: Failing row contains (19, 13, SONAL GUPTA, -20).
2025-04-23 11:45:05 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:213) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:541) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:780) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.addAccompaniedGuest(UserDaoImpl.java:145) [classes/:?]
	at org.example.service.UserServiceImpl.addAccompaniedGuest(UserServiceImpl.java:115) [classes/:?]
	at org.example.controller.UserController.addAccompaniedGuest(UserController.java:83) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.bookRoomByUser(UserMenuUI.java:500) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.displayUserMenu(UserMenuUI.java:69) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:101) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-23 11:45:05 DEBUG ProxyConnection - HikariPool-1 - Executed rollback on connection org.postgresql.jdbc.PgConnection@71529963 due to dirty commit state on close().
2025-04-23 11:45:05 DEBUG PoolBase - HikariPool-1 - Reset (autoCommit) on connection org.postgresql.jdbc.PgConnection@71529963
2025-04-23 11:45:40 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 11:45:40 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 11:45:40 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 11:45:40 DEBUG HikariConfig - autoCommit......................true
2025-04-23 11:45:40 DEBUG HikariConfig - catalog.........................none
2025-04-23 11:45:40 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 11:45:40 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 11:45:40 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 11:45:40 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-23 11:45:40 DEBUG HikariConfig - dataSource......................none
2025-04-23 11:45:40 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 11:45:40 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 11:45:40 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 11:45:40 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 11:45:40 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 11:45:40 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 11:45:40 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 11:45:40 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 11:45:40 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 11:45:40 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 11:45:40 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 11:45:40 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 11:45:40 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 11:45:40 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 11:45:40 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 11:45:40 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 11:45:40 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 11:45:40 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 11:45:40 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 11:45:40 DEBUG HikariConfig - password........................<masked>
2025-04-23 11:45:40 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 11:45:40 DEBUG HikariConfig - readOnly........................false
2025-04-23 11:45:40 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 11:45:40 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 11:45:40 DEBUG HikariConfig - schema..........................none
2025-04-23 11:45:40 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 11:45:40 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 11:45:40 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 11:45:40 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 11:45:40 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 11:45:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (57f58771-ad51-47e8-9111-9f39651d26c2)
2025-04-23 11:45:40 DEBUG PoolBase - HikariPool-1 - Established new connection (57f58771-ad51-47e8-9111-9f39651d26c2)
2025-04-23 11:45:40 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70f59913
2025-04-23 11:45:40 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 11:45:40 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 11:45:40 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 11:45:40 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 11:45:40 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 11:45:41 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 11:45:41 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (32b4ddf7-56e2-452b-b9a4-492d9e2aab63)
2025-04-23 11:45:41 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Established new connection (32b4ddf7-56e2-452b-b9a4-492d9e2aab63)
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@61cafcaa
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:45:41 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 11:45:41 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 11:45:41 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ff3cd564-1954-478a-b2e4-da019403ce40)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Established new connection (ff3cd564-1954-478a-b2e4-da019403ce40)
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b3297da
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (79cc8030-a950-4cd6-ac2c-f1699594c4e3)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5d8445d7
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Established new connection (79cc8030-a950-4cd6-ac2c-f1699594c4e3)
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e3004d8
2025-04-23 11:45:41 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@750fe12e] into BootstrapContext; was [null]
2025-04-23 11:45:41 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@f8908f6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e587920]
2025-04-23 11:45:41 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 11:45:41 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 11:45:41 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (98bc07db-a493-476d-aaf4-6c415918a741)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Established new connection (98bc07db-a493-476d-aaf4-6c415918a741)
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18299218
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (07759791-c237-4a46-9911-77a514b1eb81)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Established new connection (07759791-c237-4a46-9911-77a514b1eb81)
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1fd4ede8
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e4280166-9697-4bf2-9445-2f1ce8cfde52)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Established new connection (e4280166-9697-4bf2-9445-2f1ce8cfde52)
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6027258f
2025-04-23 11:45:41 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 11:45:41 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 11:45:41 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (75dd0dc2-a790-4820-ab8c-676d7b37926e)
2025-04-23 11:45:41 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Established new connection (75dd0dc2-a790-4820-ab8c-676d7b37926e)
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e1ffb97
2025-04-23 11:45:41 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 11:45:41 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 11:45:41 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@66f659e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4a68135e)
2025-04-23 11:45:41 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46678e49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@748e9b20)
2025-04-23 11:45:41 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 11:45:41 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (144eb81c-c40f-4339-9bf7-e0e0cca3ad83)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@702ed190`
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:45:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Established new connection (144eb81c-c40f-4339-9bf7-e0e0cca3ad83)
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1a72191e
2025-04-23 11:45:41 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 11:45:41 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f2eda3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34cf294c]
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (47d8fc39-35ab-46e0-b496-0b2db9e374ff)
2025-04-23 11:45:41 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 11:45:41 DEBUG PoolBase - HikariPool-1 - Established new connection (47d8fc39-35ab-46e0-b496-0b2db9e374ff)
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22711c15
2025-04-23 11:45:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 11:45:41 DEBUG EntityBinder - Import with entity name User
2025-04-23 11:45:41 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:45:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property userID
2025-04-23 11:45:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property email
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property isActive
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property name
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property password
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property userRole
2025-04-23 11:45:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 11:45:41 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 11:45:41 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property guestId
2025-04-23 11:45:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property age
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property name
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property user
2025-04-23 11:45:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 11:45:41 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 11:45:41 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property bookingId
2025-04-23 11:45:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property checkIn
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property checkOut
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property room
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property status
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property user
2025-04-23 11:45:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 11:45:41 DEBUG EntityBinder - Import with entity name Room
2025-04-23 11:45:41 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property roomID
2025-04-23 11:45:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property price
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property roomType
2025-04-23 11:45:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 11:45:41 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 11:45:41 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 11:45:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property amount
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property booking
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property issueDate
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 11:45:41 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 11:45:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 11:45:41 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 11:45:41 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:45:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:45:41 DEBUG PropertyBinder - Building property user
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 11:45:41 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 11:45:41 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 11:45:41 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 11:45:41 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 11:45:41 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 11:45:41 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 11:45:42 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:45:42 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:45:42 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@66deec87, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-23 11:45:42 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@124dac75] under count; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14924f41] under every; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@493da830] under any; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6] under sinh; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942] under cosh; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ec7d21] under tanh; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70025b99] under pi; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63] under log; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6088451e] under position; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5416f8db] under overlay; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6a1ef65c] under trim; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@27abb6ca] under cast; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620] under collate; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3a7e365] under extract; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5568c66f] under ifnull; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4bdf] under pad; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@78422efb] under str; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@69d3cf7e] under format; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4eaa375c] under timestampadd; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6215366a] under timestampdiff; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under current_date; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dcb42a9] under current_time; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6af90849] under current_timestamp; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1d06f16f] under local_date; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under local_time; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68dd39d2] under local_datetime; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a44cfc0] under offset_datetime; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e3c26e] under instant; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1b410308] under sql; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ec7d21
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70025b99
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@16736040] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4fa4f485
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@68dd39d2
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@32eae6f2] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@26ca61bf] under bit_length; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@73a0f2b] under octet_length; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6088451e
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d526c] under bitand; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f2f0109] under bitor; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483b0690] under bitxor; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293] under bitnot; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6870c3c2] under median; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c] under insert; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@66a5755] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5416f8db
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@771a7d53] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@cedee22] under listagg; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1c067c0d] under array; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5d0b0cb9] under array_list; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3c0e00a8] under array_agg; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@769bd849] under array_position; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1e79d43] under array_positions; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@d919544] under array_positions_list; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17dad32f] under array_length; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@4a8ffd75] under array_concat; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@23cbbd07] under array_prepend; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@448b808a] under array_append; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@10b4e7f8] under array_contains; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@75023c53] under array_contains_nullable; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6723610b] under array_overlaps; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5ba03c82] under array_overlaps_nullable; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5cf8676a] under array_get; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@59939293] under array_set; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@55f4887d] under array_remove_index; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26837057] under array_slice; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2dbc408c] under array_trim; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3b332962] under array_fill; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@57ddd45b] under array_fill_list; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@342e690b] under array_to_string; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@642a16aa] under mode; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@642ee49c] under percentile_cont; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@294aba23] under percentile_disc; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@32456db0] under rank; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5f5827d0] under dense_rank; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@58a2d9f9] under percent_rank; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4337afd] under cume_dist; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@52227eb2] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5ad1904f] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a146b11] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483b0690
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3135bf25] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3cd26422] under trunc; prior registration was null
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 11:45:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eda072] under date_trunc; prior registration was null
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 11:45:42 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 11:45:42 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 11:45:42 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:45:42 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 11:45:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:45:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:45:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 11:45:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:45:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:45:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:45:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:45:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:45:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 11:45:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:45:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:45:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:45:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:45:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:45:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 11:45:42 DEBUG creation - Starting post-init callbacks
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 11:45:42 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 11:45:42 DEBUG create - Created new SQL alias : g1_0
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c472300] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 11:45:42 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:45:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 11:45:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:45:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 11:45:42 DEBUG create - Created new SQL alias : b1_0
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34cd65ac] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 11:45:42 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1cba0321] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 11:45:42 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:45:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 11:45:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:45:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 11:45:42 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:45:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 11:45:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:45:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 11:45:42 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:45:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 11:45:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:45:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 11:45:42 DEBUG create - Created new SQL alias : i1_0
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f2fb225] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 11:45:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e3283f6] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 11:45:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 11:45:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 11:45:42 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 11:45:42 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 11:45:42 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 11:45:42 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 11:45:42 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 11:45:42 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 11:45:42 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f2eda3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@790ac3e0]
2025-04-23 11:45:42 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 11:45:42 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 11:45:42 DEBUG Table - No alter strings for table : bookings
2025-04-23 11:45:42 DEBUG Table - No alter strings for table : guests
2025-04-23 11:45:42 DEBUG Table - No alter strings for table : invoices
2025-04-23 11:45:42 DEBUG Table - No alter strings for table : rooms
2025-04-23 11:45:42 DEBUG Table - No alter strings for table : users
2025-04-23 11:45:42 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a3b858f
2025-04-23 11:45:42 DEBUG SessionFactoryRegistry - Registering SessionFactory: 394fa3b0-63ba-42b6-8c89-9491bda08dc6 (my-persistence-unit)
2025-04-23 11:45:42 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 11:45:42 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 11:45:42 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 11:45:42 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 11:45:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 11:45:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:45:43 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:45:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:45:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 11:45:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 11:45:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 11:45:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:45:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:45:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@848490487 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:45:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:45:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:45:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1977511945
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:45:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:45:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bc8ffbc
2025-04-23 11:45:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:45:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:45:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:45:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@7881234 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:45:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:45:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:45:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1559261930
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:45:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:45:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:45:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1edac3b4
2025-04-23 11:45:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:45:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:45:43 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 11:45:44 INFO  UserMenuUI - User 13 is booking a room
2025-04-23 11:45:44 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 11:45:44 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:45:44 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:45:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:45:44 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 11:45:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 11:45:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:45:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:45:44 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@521328096 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:45:44 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 87923441
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1785343965
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1429207620
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1852224664
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1423138517
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1870436181
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1168882980
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 506594173
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1348064152
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1528045817
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1129243682
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1307131613
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1404232171
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 702218380
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 486575713
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 11:45:44 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:45:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 11:45:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 11:45:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:45:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:46:02 INFO  UserMenuUI - Collected details for 1 guest(s)
2025-04-23 11:46:02 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 11:46:02 DEBUG TransactionImpl - begin
2025-04-23 11:46:02 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 11:46:02 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 11:46:02 DEBUG results - Initializer list is empty
2025-04-23 11:46:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@33e4068
2025-04-23 11:46:02 DEBUG results - Extracted JDBC value [0] - [20]
2025-04-23 11:46:02 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@b787274
2025-04-23 11:46:02 DEBUG TransactionImpl - committing
2025-04-23 11:46:02 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 11:46:02 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 11:46:02 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 11:46:02 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 11:46:02 DEBUG EntityPrinter - Listing entities:
2025-04-23 11:46:02 DEBUG EntityPrinter - org.example.entity.Guest{name=SONAM GUPTA, guestId=20, user=org.example.entity.User#13, age=23}
2025-04-23 11:46:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:46:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:46:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:46:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:46:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:46:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:46:46 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 11:46:46 DEBUG TransactionImpl - begin
2025-04-23 11:46:46 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 11:46:46 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 11:46:46 DEBUG results - Initializer list is empty
2025-04-23 11:46:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2b0d85bd
2025-04-23 11:46:46 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 11:46:46 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@102ecb61
2025-04-23 11:46:46 DEBUG TransactionImpl - committing
2025-04-23 11:46:46 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 11:46:46 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 11:46:46 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 11:46:46 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 11:46:46 DEBUG EntityPrinter - Listing entities:
2025-04-23 11:46:46 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-23T12:00:09.250328500, checkOut=2125-03-30T12:00:09.250328500, user=org.example.entity.User#13, bookingId=75, room=org.example.entity.Room#8, status=CONFIRMED}
2025-04-23 11:46:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:46:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:46:46 INFO  BookingServiceImpl - Booking created successfully with ID: 75
2025-04-23 11:46:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:46:46 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1580467617 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:46:46 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:46:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 11:46:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1604920443
2025-04-23 11:46:46 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:46:46 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:46:46 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:46:46 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:46:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 11:46:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21ce3b22
2025-04-23 11:46:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:46:46 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 11:46:46 DEBUG TransactionImpl - begin
2025-04-23 11:46:46 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:46:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:46:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 11:46:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:46:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:46:46 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@635655132 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:46:46 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:46:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 11:46:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1023062848
2025-04-23 11:46:46 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:46:46 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:46:46 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:46:46 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:46:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 11:46:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3387ab0
2025-04-23 11:46:46 DEBUG TransactionImpl - committing
2025-04-23 11:46:46 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 11:46:46 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 11:46:46 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 11:46:46 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 11:46:46 DEBUG EntityPrinter - Listing entities:
2025-04-23 11:46:46 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 11:46:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:46:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:46:46 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 11:46:46 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 11:47:08 INFO  UserMenuUI - Generating invoice for user 13 | Booking ID: 75 | Amount: 3.65E8 | Paid: true
2025-04-23 11:47:08 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:47:08 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1069929367 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@633915166 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1468431766)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@444211664 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@196218979)

2025-04-23 11:47:08 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 11:47:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 11:47:08 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 11:47:08 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 11:47:08 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 978105475
2025-04-23 11:47:08 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1299647437
2025-04-23 11:47:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 266426100
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 11:47:08 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 11:47:08 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 11:47:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 11:47:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28a3fc34
2025-04-23 11:47:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:47:08 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:47:08 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1305957096 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:47:08 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:47:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:47:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 903353943
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:47:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:47:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42ef5216
2025-04-23 11:47:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:47:08 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 11:47:08 DEBUG TransactionImpl - begin
2025-04-23 11:47:08 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 11:47:08 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 11:47:08 DEBUG results - Initializer list is empty
2025-04-23 11:47:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5340ccb9
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [0] - [47]
2025-04-23 11:47:08 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@2bc8caa7
2025-04-23 11:47:08 DEBUG TransactionImpl - committing
2025-04-23 11:47:08 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 11:47:08 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 11:47:08 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 11:47:08 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 11:47:08 DEBUG EntityPrinter - Listing entities:
2025-04-23 11:47:08 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3.65E8, booking=org.example.entity.Booking#75, invoiceId=47, issueDate=2025-04-23T11:47:08.775545500, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-23 11:47:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:47:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:47:08 INFO  UserMenuUI - Invoice successfully generated: ID 47
2025-04-23 11:47:08 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:47:08 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@2059190490 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@390901976)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@985925332 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1919184150)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1858263440 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-23 11:47:08 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-23 11:47:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 47
2025-04-23 11:47:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#47] : 1473247236
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 11:47:08 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 11:47:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#47
2025-04-23 11:47:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ca4f762
2025-04-23 11:47:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:47:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:47:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:47:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6027258f is alive
2025-04-23 11:47:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b3297da is alive
2025-04-23 11:47:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@22711c15 is alive
2025-04-23 11:47:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18299218 is alive
2025-04-23 11:47:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3004d8 is alive
2025-04-23 11:47:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 11:47:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a72191e is alive
2025-04-23 11:47:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61cafcaa is alive
2025-04-23 11:47:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1fd4ede8 is alive
2025-04-23 11:47:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e1ffb97 is alive
2025-04-23 11:47:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:47:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:48:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:48:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:48:35 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-23 11:48:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:48:35 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@559705792 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:48:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1886202798
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:48:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3205610d
2025-04-23 11:48:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:48:35 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-23 11:48:35 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 11:48:35 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:48:35 DEBUG create - Created new SQL alias : b1_0
2025-04-23 11:48:35 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 11:48:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e02cc37] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 11:48:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@186d6033] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 11:48:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69419d59] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 11:48:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69419d59] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@186d6033
2025-04-23 11:48:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 11:48:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 11:48:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 11:48:35 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 11:48:35 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 11:48:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:48:35 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@840027268 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@196218979)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1026471930 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1468431766)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@91201775 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 11:48:35 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 716699209
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:48:35 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 11:48:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:48:35 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1386693416 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:48:35 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 932925062
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 11:48:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f4df55e
2025-04-23 11:48:35 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 11:48:35 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 11:48:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:48:35 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1924981513 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:48:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1385623564
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:48:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4727e5fc
2025-04-23 11:48:35 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 11:48:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5487a8f1
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1046246792
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:48:35 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:48:35 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 11:48:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:48:35 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1529869535 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:48:35 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 400280074
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 11:48:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@33765d22
2025-04-23 11:48:35 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 11:48:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5487a8f1
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1869081829
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:48:35 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:48:35 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:48:35 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:48:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-23 11:48:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5487a8f1
2025-04-23 11:48:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:48:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:48:35 INFO  UserMenuUI - 1. Booking ID: 75, Status: CONFIRMED, Room Number: 8, Check-in: 2025-04-23T12:00:09, Check-out: 2125-03-30T12:00:09
2025-04-23 11:48:35 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-23 11:48:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:48:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:48:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6027258f is alive
2025-04-23 11:48:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b3297da is alive
2025-04-23 11:49:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@22711c15 is alive
2025-04-23 11:49:06 WARN  UserMenuUI - Booking ID 0 not found in eligible bookings.
2025-04-23 11:49:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@18299218 is alive
2025-04-23 11:49:10 INFO  UserMenuUI - User 13 is booking a room
2025-04-23 11:49:10 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:49:10 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1423111635 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:49:10 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 130889824
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 94166581
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1138663369
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 759083498
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 2018545259
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 467573282
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 751402567
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1956658133
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 142590204
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1730106459
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 12793273
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1976096999
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 63344258
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 510050093
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 118566821
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 11:49:10 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:49:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 11:49:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44f23927
2025-04-23 11:49:10 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:49:10 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:49:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:49:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:49:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e3004d8 is alive
2025-04-23 11:49:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 11:49:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a72191e is alive
2025-04-23 11:49:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61cafcaa is alive
2025-04-23 11:49:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1fd4ede8 is alive
2025-04-23 11:49:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e1ffb97 is alive
2025-04-23 11:49:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:49:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:50:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:50:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:50:59 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 11:50:59 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 11:50:59 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 11:50:59 DEBUG HikariConfig - autoCommit......................true
2025-04-23 11:50:59 DEBUG HikariConfig - catalog.........................none
2025-04-23 11:50:59 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 11:50:59 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 11:50:59 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 11:50:59 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@448c8166
2025-04-23 11:50:59 DEBUG HikariConfig - dataSource......................none
2025-04-23 11:50:59 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 11:50:59 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 11:50:59 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 11:50:59 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 11:50:59 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 11:50:59 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 11:50:59 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 11:50:59 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 11:50:59 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 11:50:59 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 11:50:59 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 11:50:59 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 11:50:59 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 11:50:59 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 11:50:59 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 11:50:59 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 11:50:59 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 11:50:59 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 11:50:59 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 11:50:59 DEBUG HikariConfig - password........................<masked>
2025-04-23 11:50:59 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 11:50:59 DEBUG HikariConfig - readOnly........................false
2025-04-23 11:50:59 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 11:50:59 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 11:50:59 DEBUG HikariConfig - schema..........................none
2025-04-23 11:50:59 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 11:50:59 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 11:50:59 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 11:50:59 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 11:50:59 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f14263a9-219d-4ceb-9707-c7fc94f8a5ac)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (f14263a9-219d-4ceb-9707-c7fc94f8a5ac)
2025-04-23 11:50:59 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2445445a
2025-04-23 11:50:59 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 11:50:59 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 11:50:59 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 11:50:59 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 11:50:59 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 11:50:59 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 11:50:59 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9ddaf112-9eed-4428-8e7f-3202c0eaae2e)
2025-04-23 11:50:59 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 11:50:59 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (9ddaf112-9eed-4428-8e7f-3202c0eaae2e)
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16c37811
2025-04-23 11:50:59 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 11:50:59 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5b9a89f3-9d3b-44ac-9c32-253407af028d)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (5b9a89f3-9d3b-44ac-9c32-253407af028d)
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c3b1361
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@13006998
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@13006998
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@13006998
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@352c308
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6d6bc158
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5dda6f9
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@10027fc9
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@54afd745
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@677dbd89
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@fff25f1
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@fff25f1
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@fff25f1
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@c00fff0
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@c00fff0
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@263f04ca
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@263f04ca
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2ca47471
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5a021cb9
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5a021cb9
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@51768776
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@51768776
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@f31c0c6
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@b93aad
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@408b35bf
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@408b35bf
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1a15b789
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@57f791c6
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@51650883
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6c4f9535
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5bd1ceca
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@30c31dd7
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@499b2a5c
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@596df867
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@c1fca1e
2025-04-23 11:50:59 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5ea502e0] into BootstrapContext; was [null]
2025-04-23 11:50:59 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@443dbe42] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@473b3b7a]
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (225f38c7-6789-4137-9465-cbf897147975)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (225f38c7-6789-4137-9465-cbf897147975)
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@59398e82
2025-04-23 11:50:59 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 11:50:59 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 11:50:59 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4bf564f7-6896-43d8-9655-9ecea9ddcea9)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (4bf564f7-6896-43d8-9655-9ecea9ddcea9)
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@54376644
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d83b7075-a694-43db-aaed-0f55fbc81821)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (d83b7075-a694-43db-aaed-0f55fbc81821)
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68aa1137
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=5/10, active=1, waiting=0)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (36fcdfef-a8d5-477f-b554-dfef17109ac9)
2025-04-23 11:50:59 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 11:50:59 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 11:50:59 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (36fcdfef-a8d5-477f-b554-dfef17109ac9)
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c4ea758
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d2738db0-94e0-4afc-bf05-49b59a72ace5)
2025-04-23 11:50:59 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (d2738db0-94e0-4afc-bf05-49b59a72ace5)
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@391671cd
2025-04-23 11:50:59 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 11:50:59 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 11:50:59 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@38704ff0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@16ade133)
2025-04-23 11:50:59 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e61e4c2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c6a6c1d)
2025-04-23 11:50:59 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 11:50:59 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ecdb55e9-476c-49ad-8fc6-162de9afd1bc)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@53ac845a
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@53ac845a
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@408b35bf`
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (ecdb55e9-476c-49ad-8fc6-162de9afd1bc)
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@567c35ed
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:50:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 11:50:59 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 11:50:59 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@442f92e6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d070ef5]
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (76213311-ff33-48d0-950f-7b881d70e60c)
2025-04-23 11:50:59 DEBUG PoolBase - HikariPool-1 - Established new connection (76213311-ff33-48d0-950f-7b881d70e60c)
2025-04-23 11:50:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6e67b5bc
2025-04-23 11:51:00 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 11:51:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 11:51:00 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:51:00 DEBUG EntityBinder - Import with entity name User
2025-04-23 11:51:00 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property userID
2025-04-23 11:51:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property email
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property isActive
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property name
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property password
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property userRole
2025-04-23 11:51:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 11:51:00 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 11:51:00 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property guestId
2025-04-23 11:51:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property age
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property name
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property user
2025-04-23 11:51:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 11:51:00 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 11:51:00 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property bookingId
2025-04-23 11:51:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property checkIn
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property checkOut
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property room
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property status
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property user
2025-04-23 11:51:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 11:51:00 DEBUG EntityBinder - Import with entity name Room
2025-04-23 11:51:00 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property roomID
2025-04-23 11:51:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property price
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property roomType
2025-04-23 11:51:00 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 11:51:00 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 11:51:00 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 11:51:00 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property amount
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property booking
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property issueDate
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 11:51:00 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 11:51:00 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 11:51:00 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 11:51:00 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 11:51:00 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 11:51:00 DEBUG PropertyBinder - Building property user
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 11:51:00 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 11:51:00 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 11:51:00 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 11:51:00 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 11:51:00 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 11:51:00 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 11:51:00 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:51:00 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:51:00 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@28369db0, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-23 11:51:00 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6bcb12e6] under count; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7112ce6] under every; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@558b4942] under any; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae] under sinh; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd] under cosh; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28a9494b] under tanh; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a09303] under pi; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27] under log; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1319bc2a] under position; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2ceee4b6] under overlay; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@e784320] under trim; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@78422efb] under cast; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f05c8d6] under collate; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7cfac39f] under extract; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3069a360] under ifnull; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3472947a] under pad; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@39f5b723] under str; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6af90849] under format; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4a44cfc0] under timestampadd; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@f9cab00] under timestampdiff; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under current_date; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550e9be6] under current_time; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f96f020] under current_timestamp; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32eae6f2] under local_date; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26ca61bf] under local_time; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73a0f2b] under local_datetime; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fa5f81c] under offset_datetime; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a1d526c] under instant; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6870c3c2] under sql; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb0a08c] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28a9494b
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a09303
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@60e06f7d] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@26ca61bf
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@73a0f2b
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@e95595b] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5a917723] under bit_length; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7e4579c7] under octet_length; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1319bc2a
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d94a2dc] under bitand; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cedee22] under bitor; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b32539] under bitxor; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under bitnot; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@233db8e9] under median; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18a19e] under insert; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3d24420b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2ceee4b6
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6274670b] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3965bdf9] under listagg; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@759de304] under array; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5649d11a] under array_list; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2582b0ef] under array_agg; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@de7e193] under array_position; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@ed2f2f6] under array_positions; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@35b17c06] under array_positions_list; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45545e7a] under array_length; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2703d91] under array_concat; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@10b4e7f8] under array_prepend; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@75023c53] under array_append; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@47f04e4d] under array_contains; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3520963d] under array_contains_nullable; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@991cbde] under array_overlaps; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@78d71df1] under array_overlaps_nullable; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dac121d] under array_get; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@57ddd45b] under array_set; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@342e690b] under array_remove_index; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4519f676] under array_slice; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78ec89a6] under array_trim; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@32456db0] under array_fill; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5f5827d0] under array_fill_list; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@3fa7df1] under array_to_string; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4ed5a1b0] under mode; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18d003cd] under percentile_cont; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3135bf25] under percentile_disc; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45900b64] under rank; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@f2a1813] under dense_rank; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79f90a3a] under percent_rank; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22bdb1d0] under cume_dist; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@46e3559f] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3b83459e] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32118208] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b32539
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2eda072] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@21bd128b] under trunc; prior registration was null
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 11:51:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d0b05] under date_trunc; prior registration was null
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 11:51:00 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 11:51:00 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 11:51:00 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 11:51:00 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 11:51:00 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:51:00 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 11:51:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 11:51:00 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:51:00 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:51:00 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:51:00 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:51:00 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 11:51:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 11:51:00 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:51:00 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 11:51:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 11:51:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 11:51:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 11:51:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 11:51:01 DEBUG creation - Starting post-init callbacks
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 11:51:01 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 11:51:01 DEBUG create - Created new SQL alias : g1_0
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64a1116a] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 11:51:01 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:51:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 11:51:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:51:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 11:51:01 DEBUG create - Created new SQL alias : b1_0
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2035d65b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 11:51:01 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@394fb736] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 11:51:01 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:51:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 11:51:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 11:51:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 11:51:01 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:51:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 11:51:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:51:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 11:51:01 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:51:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 11:51:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:51:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 11:51:01 DEBUG create - Created new SQL alias : i1_0
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c7cd434] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7604198a] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 11:51:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 11:51:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 11:51:01 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 11:51:01 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 11:51:01 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 11:51:01 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 11:51:01 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 11:51:01 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 11:51:01 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@442f92e6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5dfc2a4]
2025-04-23 11:51:01 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 11:51:01 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 11:51:01 DEBUG Table - No alter strings for table : bookings
2025-04-23 11:51:01 DEBUG Table - No alter strings for table : guests
2025-04-23 11:51:01 DEBUG Table - No alter strings for table : invoices
2025-04-23 11:51:01 DEBUG Table - No alter strings for table : rooms
2025-04-23 11:51:01 DEBUG Table - No alter strings for table : users
2025-04-23 11:51:01 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ed31735
2025-04-23 11:51:01 DEBUG SessionFactoryRegistry - Registering SessionFactory: ad8e7e79-c1c1-4caf-aaff-4bfb6eac8b98 (my-persistence-unit)
2025-04-23 11:51:01 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 11:51:01 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 11:51:01 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 11:51:01 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true AND r.roomID NOT IN (
    SELECT b.room.roomID FROM Booking b WHERE b.status = 'CONFIRMED' AND (:checkIn < b.checkOut AND :checkOut > b.checkIn)
  ) ORDER BY r.roomID ASC

2025-04-23 11:51:01 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkIn)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut)
2025-04-23 11:51:01 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(checkOut)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn)
2025-04-23 11:51:01 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Room(r).isAvailable`
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:51:01 DEBUG create - Created new SQL alias : r1_0
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 11:51:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 11:51:01 DEBUG create - Created new SQL alias : b1_0
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 11:51:01 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6a6e410c] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 11:51:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-23 11:51:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkIn)
2025-04-23 11:51:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkOut) 
2025-04-23 11:51:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(checkOut)
2025-04-23 11:51:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).checkIn) 
2025-04-23 11:51:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 11:51:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 11:51:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:51:01 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@789698697 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:51:01 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true and r1_0.room_id not in (select b1_0.room_id from bookings b1_0 where b1_0.status='CONFIRMED' and (?<b1_0.check_out and ?>b1_0.check_in)) order by r1_0.room_id
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1861138906
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1981418429
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 2054033212
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1367661099
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1872941234
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1237547288
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1138657523
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 880564001
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1294083676
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 528190809
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 676665173
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2126940193
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 571101539
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1633161534
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 11:51:01 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:51:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 11:51:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72998021
2025-04-23 11:51:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:51:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:51:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:51:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:51:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:51:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:52:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:52:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:52:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2445445a is alive
2025-04-23 11:52:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c4ea758 is alive
2025-04-23 11:52:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c3b1361 is alive
2025-04-23 11:52:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@567c35ed is alive
2025-04-23 11:52:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68aa1137 is alive
2025-04-23 11:52:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54376644 is alive
2025-04-23 11:52:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59398e82 is alive
2025-04-23 11:52:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e67b5bc is alive
2025-04-23 11:52:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@391671cd is alive
2025-04-23 11:52:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16c37811 is alive
2025-04-23 11:52:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:52:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:53:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:53:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:53:29 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 11:53:29 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 11:53:29 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:53:29 DEBUG create - Created new SQL alias : u1_0
2025-04-23 11:53:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 11:53:29 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 11:53:29 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 11:53:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 11:53:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 11:53:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:53:29 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@775635860 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:53:29 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:53:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:53:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 327584833
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:53:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:53:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67d55a46
2025-04-23 11:53:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:53:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:53:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:53:30 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1403255947 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:53:30 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:53:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:53:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 341778327
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:53:30 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:53:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:53:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58d4fe33
2025-04-23 11:53:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:53:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:53:30 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 11:53:36 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 11:53:36 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 11:53:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:53:36 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1013106719 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:53:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 516913231
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:53:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@344769b9
2025-04-23 11:53:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:53:36 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-23 11:53:36 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 11:53:36 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:53:36 DEBUG create - Created new SQL alias : b1_0
2025-04-23 11:53:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 11:53:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@17873842] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 11:53:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f381eaf] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 11:53:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@293ba26c] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 11:53:36 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@293ba26c] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1f381eaf
2025-04-23 11:53:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 11:53:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 11:53:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 11:53:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 11:53:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 11:53:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:53:36 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@379671137 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@921452657)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1568740070 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@551104286)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1022837566 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 11:53:36 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1413952420
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:53:36 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 11:53:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:53:36 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@510536150 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:53:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 64605090
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 11:53:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c167296
2025-04-23 11:53:36 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 11:53:36 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 11:53:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:53:36 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1514556391 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:53:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1767672626
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:53:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1adec8d
2025-04-23 11:53:36 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 11:53:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@577f81a0
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 539825188
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:53:36 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:53:36 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 11:53:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:53:36 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@246452498 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:53:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1285287269
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 11:53:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4629dde5
2025-04-23 11:53:36 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 11:53:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@577f81a0
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 2117457731
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:53:36 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:53:36 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:53:36 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:53:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-23 11:53:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@577f81a0
2025-04-23 11:53:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:53:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:53:36 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CONFIRMED
2025-04-23 11:53:36 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 11:53:36 INFO  UserMenuUI - Displayed booking: ID 72 | Check-in: 2025-04-22T12:10 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 11:53:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:53:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:54:11 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-23 11:54:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:54:11 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@641691286 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:54:11 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 967635335
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:54:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@643a73fa
2025-04-23 11:54:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:54:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:54:11 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@231989731 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@921452657)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@646359041 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@551104286)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@2021148063 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 11:54:11 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1324420411
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:54:11 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 11:54:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:54:11 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1956642247 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:54:11 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1368067090
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 11:54:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5af1b221
2025-04-23 11:54:11 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 11:54:11 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 11:54:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:54:11 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1085888709 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:54:11 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 589058590
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:54:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@296949c8
2025-04-23 11:54:11 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 11:54:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1be3a294
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 860892414
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:54:11 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:54:11 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 11:54:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:54:11 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1922896936 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:54:11 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 623717056
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 11:54:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f0b5619
2025-04-23 11:54:11 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 11:54:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1be3a294
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1739573686
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:54:11 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:54:11 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:54:11 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:54:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-23 11:54:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1be3a294
2025-04-23 11:54:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:54:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:54:11 INFO  UserMenuUI - 1. Booking ID: 75, Status: CONFIRMED, Room Number: 8, Check-in: 2025-04-23T12:00:09, Check-out: 2125-03-30T12:00:09
2025-04-23 11:54:11 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-23 11:54:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2445445a is alive
2025-04-23 11:54:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c4ea758 is alive
2025-04-23 11:54:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c3b1361 is alive
2025-04-23 11:54:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@567c35ed is alive
2025-04-23 11:54:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68aa1137 is alive
2025-04-23 11:54:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54376644 is alive
2025-04-23 11:54:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:54:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:54:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59398e82 is alive
2025-04-23 11:54:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e67b5bc is alive
2025-04-23 11:54:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@391671cd is alive
2025-04-23 11:54:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16c37811 is alive
2025-04-23 11:54:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:54:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:55:06 WARN  UserMenuUI - Booking ID 72 not found in eligible bookings.
2025-04-23 11:55:25 INFO  UserMenuUI - User 13 is logging out
2025-04-23 11:55:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:55:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:55:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:55:38 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1881420492 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:55:38 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:55:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:55:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1553991340
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:55:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:55:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dc3eda6
2025-04-23 11:55:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:55:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:55:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:55:38 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@326265195 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:55:38 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:55:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:55:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 844248821
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:55:38 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:55:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:55:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@32eb38e5
2025-04-23 11:55:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:55:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:55:38 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 11:55:41 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-23 11:55:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:55:41 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1935880752 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:55:41 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 55220696
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:55:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e984100
2025-04-23 11:55:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:55:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:55:41 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@333890884 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@921452657)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1818817180 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@551104286)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@993731216 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 11:55:41 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1240016676
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:55:41 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 11:55:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:55:41 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@732214059 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:55:41 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1229465441
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 11:55:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6ac0fd1d
2025-04-23 11:55:41 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 11:55:41 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 11:55:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:55:41 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1950456251 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:55:41 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 156684093
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:55:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@712213ed
2025-04-23 11:55:41 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 11:55:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58189132
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 587573968
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:55:41 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:55:41 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 11:55:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:55:41 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@471180970 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:55:41 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1872337398
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 11:55:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e085259
2025-04-23 11:55:41 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 11:55:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58189132
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1760173749
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:55:41 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:55:41 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:55:41 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:55:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-23 11:55:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58189132
2025-04-23 11:55:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:55:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:55:41 INFO  UserMenuUI - 1. Booking ID: 75, Status: CONFIRMED, Room Number: 8, Check-in: 2025-04-23T12:00:09, Check-out: 2125-03-30T12:00:09
2025-04-23 11:55:41 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-23 11:55:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:55:43 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1281853983 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@560990653 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@551104286)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1615264672 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@921452657)

2025-04-23 11:55:43 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 11:55:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 11:55:43 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 11:55:43 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 11:55:43 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 1968190405
2025-04-23 11:55:43 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 580668724
2025-04-23 11:55:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 1531556319
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 11:55:43 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 11:55:43 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 11:55:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 11:55:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@689eab53
2025-04-23 11:55:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:55:43 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-23 11:55:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-23 11:55:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 11:55:43 DEBUG create - Created new SQL alias : i1_0
2025-04-23 11:55:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 11:55:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@571903ff] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 11:55:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@689ea211] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 11:55:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f1e18b1] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 11:55:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f1e18b1] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@571903ff
2025-04-23 11:55:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-23 11:55:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-23 11:55:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-23 11:55:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-23 11:55:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-23 11:55:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:55:43 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1191732945 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@287735431)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@294395818 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@228963439 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@161445348)

2025-04-23 11:55:43 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [0] - [47]
2025-04-23 11:55:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 47
2025-04-23 11:55:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#47] : 878231139
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 11:55:43 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 11:55:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#47
2025-04-23 11:55:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@748fa354
2025-04-23 11:55:43 INFO  UserMenuUI - Are you sure you want to cancel the booking with ID: 75? (Y/N)
2025-04-23 11:55:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2445445a is alive
2025-04-23 11:55:49 INFO  UserMenuUI - Booking cancellation aborted.
2025-04-23 11:55:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c4ea758 is alive
2025-04-23 11:55:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c3b1361 is alive
2025-04-23 11:55:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@567c35ed is alive
2025-04-23 11:55:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:55:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:56:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68aa1137 is alive
2025-04-23 11:56:07 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-23 11:56:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:56:07 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@779034440 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:56:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 61710314
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:56:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@556e4588
2025-04-23 11:56:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:56:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:56:07 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1331556370 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@921452657)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@955505599 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@551104286)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1464746372 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 11:56:07 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1985918977
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:56:07 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 11:56:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:56:07 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1404671279 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:56:07 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 487571644
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 11:56:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2003edf
2025-04-23 11:56:07 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 11:56:07 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 11:56:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:56:07 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@389407172 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:56:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2119994496
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:56:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46df794e
2025-04-23 11:56:07 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 11:56:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cd6a827
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1825984578
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:56:07 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:56:07 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 11:56:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:56:07 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1987377620 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:56:07 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2091447767
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 11:56:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2dc319cf
2025-04-23 11:56:07 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 11:56:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cd6a827
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 23660841
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:56:07 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:56:07 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:56:07 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:56:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-23 11:56:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cd6a827
2025-04-23 11:56:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:56:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:56:07 INFO  UserMenuUI - 1. Booking ID: 75, Status: CONFIRMED, Room Number: 8, Check-in: 2025-04-23T12:00:09, Check-out: 2125-03-30T12:00:09
2025-04-23 11:56:07 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-23 11:56:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54376644 is alive
2025-04-23 11:56:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:56:22 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@886205032 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@267331432 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@551104286)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@978799163 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@921452657)

2025-04-23 11:56:22 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 11:56:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 11:56:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 11:56:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 11:56:22 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 582627504
2025-04-23 11:56:22 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 582787150
2025-04-23 11:56:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 543198964
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 11:56:22 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 11:56:22 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 11:56:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 11:56:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@30a1b2ad
2025-04-23 11:56:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:56:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:56:22 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1131228089 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@287735431)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@68439370 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@539452434 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@161445348)

2025-04-23 11:56:22 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [0] - [47]
2025-04-23 11:56:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 47
2025-04-23 11:56:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#47] : 300690223
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 11:56:22 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 11:56:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#47
2025-04-23 11:56:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a70daf4
2025-04-23 11:56:22 INFO  UserMenuUI - Are you sure you want to cancel the booking with ID: 75? (Y/N)
2025-04-23 11:56:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59398e82 is alive
2025-04-23 11:56:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:56:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:56:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e67b5bc is alive
2025-04-23 11:56:40 INFO  UserMenuUI - Booking cancellation aborted.
2025-04-23 11:56:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@391671cd is alive
2025-04-23 11:56:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16c37811 is alive
2025-04-23 11:56:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:56:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:57:00 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-23 11:57:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:57:00 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1665400909 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:57:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 176150399
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:57:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49faf815
2025-04-23 11:57:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:57:00 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@805744373 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@921452657)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@371556236 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@551104286)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1645577752 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 11:57:00 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 181021195
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:57:00 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 11:57:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:57:00 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2030568021 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:57:00 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 964416619
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 11:57:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d863bb
2025-04-23 11:57:00 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 11:57:00 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 11:57:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:57:00 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1995167125 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:57:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1641667861
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:57:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4936fbc6
2025-04-23 11:57:00 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 11:57:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b4c89b6
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1425418950
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:57:00 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:57:00 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 11:57:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:57:00 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2078827576 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:57:00 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 265668598
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 11:57:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3724ab90
2025-04-23 11:57:00 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 11:57:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b4c89b6
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1089411380
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:57:00 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:57:00 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:57:00 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:57:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-23 11:57:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b4c89b6
2025-04-23 11:57:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:00 INFO  UserMenuUI - 1. Booking ID: 75, Status: CONFIRMED, Room Number: 8, Check-in: 2025-04-23T12:00:09, Check-out: 2125-03-30T12:00:09
2025-04-23 11:57:00 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-23 11:57:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:57:03 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@689251057 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@140425810 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@551104286)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@439679202 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@921452657)

2025-04-23 11:57:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 11:57:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 11:57:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 11:57:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 11:57:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 1599695386
2025-04-23 11:57:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1654094587
2025-04-23 11:57:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 334348732
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 11:57:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 11:57:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 11:57:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 11:57:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77604a86
2025-04-23 11:57:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:57:03 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1677584330 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@287735431)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@979634668 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1199169341 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@161445348)

2025-04-23 11:57:03 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [0] - [47]
2025-04-23 11:57:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 47
2025-04-23 11:57:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#47] : 608616031
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 11:57:03 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 11:57:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#47
2025-04-23 11:57:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d4f1ddd
2025-04-23 11:57:03 INFO  UserMenuUI - Are you sure you want to cancel the booking with ID: 75? (Y/N)
2025-04-23 11:57:08 INFO  UserMenuUI - Booking cancellation aborted.
2025-04-23 11:57:22 INFO  UserMenuUI - User 13 is logging out
2025-04-23 11:57:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2445445a is alive
2025-04-23 11:57:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c4ea758 is alive
2025-04-23 11:57:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:57:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:57:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:57:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1531478195 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:57:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 11:57:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-23 11:57:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 23436669
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 11:57:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-23 11:57:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6892d403
2025-04-23 11:57:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:57:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1068773063 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:57:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 11:57:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-23 11:57:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1284775193
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:57:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 11:57:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-23 11:57:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5248c05a
2025-04-23 11:57:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:36 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-23 11:57:36 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-23 11:57:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c3b1361 is alive
2025-04-23 11:57:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@567c35ed is alive
2025-04-23 11:57:42 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-23 11:57:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:57:46 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@354359092 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:57:46 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 416322179
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 11:57:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@751b901a
2025-04-23 11:57:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:57:46 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1718792426 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:57:46 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 690419645
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:57:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a20f793
2025-04-23 11:57:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 11:57:46 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@555545211 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@921452657)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@5112121 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@551104286)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@508269970 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 11:57:46 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1978943199
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:57:46 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 11:57:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:57:46 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@928103158 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:57:46 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1802493587
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 11:57:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@51d34f02
2025-04-23 11:57:46 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 11:57:46 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 11:57:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:57:46 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1142383288 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 11:57:46 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1942085027
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 11:57:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c3c63c1
2025-04-23 11:57:46 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 11:57:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ff7e353
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1885867912
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:57:46 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:57:46 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 11:57:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 11:57:46 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2139051082 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 11:57:46 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 3737976
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 11:57:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@561c031
2025-04-23 11:57:46 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 11:57:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ff7e353
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1933826115
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 11:57:46 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 11:57:46 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 11:57:46 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 11:57:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-23 11:57:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ff7e353
2025-04-23 11:57:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 11:57:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68aa1137 is alive
2025-04-23 11:57:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54376644 is alive
2025-04-23 11:57:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:57:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:58:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59398e82 is alive
2025-04-23 11:58:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e67b5bc is alive
2025-04-23 11:58:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:58:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:58:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@391671cd is alive
2025-04-23 11:58:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16c37811 is alive
2025-04-23 11:58:55 INFO  StaffMenuUI - User SHUBHAM LANKE selected: View Available Rooms
2025-04-23 11:58:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:58:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:59:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2445445a is alive
2025-04-23 11:59:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c4ea758 is alive
2025-04-23 11:59:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c3b1361 is alive
2025-04-23 11:59:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@567c35ed is alive
2025-04-23 11:59:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:59:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 11:59:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68aa1137 is alive
2025-04-23 11:59:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54376644 is alive
2025-04-23 11:59:40 INFO  StaffMenuUI - User SHUBHAM LANKE selected: View Available Rooms
2025-04-23 11:59:42 INFO  StaffMenuUI - User SHUBHAM LANKE selected: View Available Rooms
2025-04-23 11:59:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 11:59:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:00:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59398e82 is alive
2025-04-23 12:00:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e67b5bc is alive
2025-04-23 12:00:23 ERROR StaffMenuUI - InputMismatchException: Invalid input by user SHUBHAM LANKE in staff menu
2025-04-23 12:00:28 WARN  StaffMenuUI - Invalid menu choice by user SHUBHAM LANKE: 32
2025-04-23 12:00:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:00:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:00:30 INFO  StaffMenuUI - User SHUBHAM LANKE selected: View Available Rooms
2025-04-23 12:00:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@391671cd is alive
2025-04-23 12:00:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2445445a is alive
2025-04-23 12:00:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16c37811 is alive
2025-04-23 12:00:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c4ea758 is alive
2025-04-23 12:00:44 INFO  StaffMenuUI - User SHUBHAM LANKE selected: View Available Rooms
2025-04-23 12:00:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c3b1361 is alive
2025-04-23 12:00:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@567c35ed is alive
2025-04-23 12:00:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:00:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:01:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68aa1137 is alive
2025-04-23 12:01:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54376644 is alive
2025-04-23 12:01:24 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-23 12:01:24 INFO  StaffMenuUI - Booking room for a user.
2025-04-23 12:01:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:01:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:01:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:01:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@550451891 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:01:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:01:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:01:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 12:01:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 365589282
2025-04-23 12:01:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:01:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:01:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:01:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:01:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:01:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 12:01:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c89c98a
2025-04-23 12:01:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:01:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:01:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59398e82 is alive
2025-04-23 12:01:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:01:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:02:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e67b5bc is alive
2025-04-23 12:02:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2445445a is alive
2025-04-23 12:02:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c4ea758 is alive
2025-04-23 12:02:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:02:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:02:30 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 12:02:30 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:02:30 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:02:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 12:02:30 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 12:02:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 12:02:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 12:02:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:02:30 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@311725690 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:02:30 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1910204163
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1848939096
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 68195016
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 777588278
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1069720017
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1965965859
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1965557916
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 325488817
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 956331813
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1052247420
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 199329503
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 740654090
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 371630068
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1749810089
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1872453377
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 12:02:30 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:02:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 12:02:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@470ad01c
2025-04-23 12:02:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:02:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:02:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@391671cd is alive
2025-04-23 12:02:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c3b1361 is alive
2025-04-23 12:02:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@567c35ed is alive
2025-04-23 12:02:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16c37811 is alive
2025-04-23 12:02:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68aa1137 is alive
2025-04-23 12:02:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:02:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:03:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54376644 is alive
2025-04-23 12:03:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:03:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:03:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59398e82 is alive
2025-04-23 12:03:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2445445a is alive
2025-04-23 12:03:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c4ea758 is alive
2025-04-23 12:03:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:03:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:04:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e67b5bc is alive
2025-04-23 12:04:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c3b1361 is alive
2025-04-23 12:04:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@567c35ed is alive
2025-04-23 12:04:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@391671cd is alive
2025-04-23 12:04:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:04:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:04:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16c37811 is alive
2025-04-23 12:04:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68aa1137 is alive
2025-04-23 12:04:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54376644 is alive
2025-04-23 12:04:59 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:04:59 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:05:18 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 204 from 2025-04-23T12:04 to +2739932-04-26T10:00
2025-04-23 12:05:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59398e82 is alive
2025-04-23 12:05:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2445445a is alive
2025-04-23 12:05:29 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:05:29 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:05:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c4ea758 is alive
2025-04-23 12:05:48 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:05:48 DEBUG TransactionImpl - begin
2025-04-23 12:05:48 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 12:05:48 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 12:05:48 DEBUG SqlExceptionHelper - could not execute statement [insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id]
org.postgresql.util.PSQLException: ERROR: timestamp out of range: "2739932-04-26 10:00:00+05:30"
  Where: unnamed portal parameter $2 = '...'
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:180) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.execute(ResultSetReturnImpl.java:129) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.InsertReturningDelegate.executeAndExtractReturning(InsertReturningDelegate.java:96) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.AbstractReturningDelegate.performMutation(AbstractReturningDelegate.java:58) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:388) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:302) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:221) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:135) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.createBooking(BookingDaoImpl.java:24) [classes/:?]
	at org.example.service.BookingServiceImpl.createBooking(BookingServiceImpl.java:32) [classes/:?]
	at org.example.controller.BookingController.createBooking(BookingController.java:33) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.finalizeBooking(StaffMenuUI.java:378) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:342) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:100) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-23 12:05:48 WARN  SqlExceptionHelper - SQL Error: 0, SQLState: 22008
2025-04-23 12:05:48 ERROR SqlExceptionHelper - ERROR: timestamp out of range: "2739932-04-26 10:00:00+05:30"
  Where: unnamed portal parameter $2 = '...'
2025-04-23 12:05:48 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:213) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:541) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:780) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.createBooking(BookingDaoImpl.java:24) [classes/:?]
	at org.example.service.BookingServiceImpl.createBooking(BookingServiceImpl.java:32) [classes/:?]
	at org.example.controller.BookingController.createBooking(BookingController.java:33) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.finalizeBooking(StaffMenuUI.java:378) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:342) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:100) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-23 12:05:48 DEBUG TransactionImpl - rolling back
2025-04-23 12:05:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:05:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:05:48 ERROR BookingDaoImpl - Error while creating booking for user ID: 13
org.hibernate.exception.DataException: could not execute statement [ERROR: timestamp out of range: "2739932-04-26 10:00:00+05:30"
  Where: unnamed portal parameter $2 = '...'] [insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:103) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.execute(ResultSetReturnImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.InsertReturningDelegate.executeAndExtractReturning(InsertReturningDelegate.java:96) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.AbstractReturningDelegate.performMutation(AbstractReturningDelegate.java:58) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:388) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:302) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:221) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:135) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.createBooking(BookingDaoImpl.java:24) [classes/:?]
	at org.example.service.BookingServiceImpl.createBooking(BookingServiceImpl.java:32) [classes/:?]
	at org.example.controller.BookingController.createBooking(BookingController.java:33) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.finalizeBooking(StaffMenuUI.java:378) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:342) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:100) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.postgresql.util.PSQLException: ERROR: timestamp out of range: "2739932-04-26 10:00:00+05:30"
  Where: unnamed portal parameter $2 = '...'
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:180) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.execute(ResultSetReturnImpl.java:129) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 32 more
2025-04-23 12:05:48 INFO  BookingServiceImpl - Booking created successfully with ID: null
2025-04-23 12:05:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:05:48 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@894025840 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:05:48 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:05:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:05:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 2088857414
2025-04-23 12:05:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:05:48 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:05:48 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:05:48 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:05:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:05:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7307ae6
2025-04-23 12:05:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:05:48 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:05:48 DEBUG TransactionImpl - begin
2025-04-23 12:05:48 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:05:48 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 12:05:48 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 12:05:48 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 12:05:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:05:48 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2063059370 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:05:48 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:05:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:05:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 534955437
2025-04-23 12:05:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:05:48 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:05:48 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:05:48 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:05:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:05:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6334c0d8
2025-04-23 12:05:48 DEBUG TransactionImpl - committing
2025-04-23 12:05:48 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:05:48 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:05:48 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:05:48 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:05:48 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:05:48 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 12:05:48 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 12:05:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:05:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:05:48 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=false}
2025-04-23 12:05:48 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=false}
2025-04-23 12:05:48 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:05:48 DEBUG TransactionImpl - begin
2025-04-23 12:05:48 WARN  UnresolvedEntityInsertActions - HHH000437: Attempting to save one or more entities that have a non-nullable association with an unsaved transient entity. The unsaved transient entity must be saved in an operation prior to saving these dependent entities.
	Unsaved transient entity: ([org.example.entity.Booking#<null>])
	Dependent entities: ([[org.example.entity.Invoice#<null>]])
	Non-nullable association(s): ([org.example.entity.Invoice.booking])
2025-04-23 12:05:48 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:213) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:541) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:150) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:791) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.InvoiceDaoImpl.generateInvoice(InvoiceDaoImpl.java:24) [classes/:?]
	at org.example.service.InvoiceServiceImpl.generateInvoice(InvoiceServiceImpl.java:35) [classes/:?]
	at org.example.controller.InvoiceController.generateInvoice(InvoiceController.java:21) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.finalizeBooking(StaffMenuUI.java:392) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:342) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:100) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-23 12:05:48 DEBUG PoolBase - HikariPool-1 - Reset (autoCommit) on connection org.postgresql.jdbc.PgConnection@2445445a
2025-04-23 12:07:02 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 12:07:02 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 12:07:02 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 12:07:02 DEBUG HikariConfig - autoCommit......................true
2025-04-23 12:07:02 DEBUG HikariConfig - catalog.........................none
2025-04-23 12:07:02 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 12:07:02 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 12:07:02 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 12:07:02 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-23 12:07:02 DEBUG HikariConfig - dataSource......................none
2025-04-23 12:07:02 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 12:07:02 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 12:07:02 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 12:07:02 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 12:07:02 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 12:07:02 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 12:07:02 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 12:07:02 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 12:07:02 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 12:07:02 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 12:07:02 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 12:07:02 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 12:07:02 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 12:07:02 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 12:07:02 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 12:07:02 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 12:07:02 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 12:07:02 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 12:07:02 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 12:07:02 DEBUG HikariConfig - password........................<masked>
2025-04-23 12:07:02 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 12:07:02 DEBUG HikariConfig - readOnly........................false
2025-04-23 12:07:02 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 12:07:02 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 12:07:02 DEBUG HikariConfig - schema..........................none
2025-04-23 12:07:02 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 12:07:02 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 12:07:02 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 12:07:02 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 12:07:02 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 12:07:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (21db17a0-c23a-44ea-b698-68da51e5cdea)
2025-04-23 12:07:02 DEBUG PoolBase - HikariPool-1 - Established new connection (21db17a0-c23a-44ea-b698-68da51e5cdea)
2025-04-23 12:07:02 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70f59913
2025-04-23 12:07:02 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 12:07:02 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 12:07:02 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 12:07:02 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 12:07:02 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 12:07:03 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 12:07:03 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4e239b96-cc8b-49fa-be5f-4c02df06353a)
2025-04-23 12:07:03 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 12:07:03 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Established new connection (4e239b96-cc8b-49fa-be5f-4c02df06353a)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@73ca8adb
2025-04-23 12:07:03 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 12:07:03 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6cc30269-a438-41f1-a71d-b592bf2d097a)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Established new connection (6cc30269-a438-41f1-a71d-b592bf2d097a)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7932e1ab
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8027b03d-6a4b-4ef0-9b84-87ed06381c46)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5d8445d7
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-23 12:07:03 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@750fe12e] into BootstrapContext; was [null]
2025-04-23 12:07:03 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@f8908f6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e587920]
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Established new connection (8027b03d-6a4b-4ef0-9b84-87ed06381c46)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c3060e9
2025-04-23 12:07:03 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 12:07:03 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (24dcbc01-cd0c-4d70-889c-b4c0b5c807f5)
2025-04-23 12:07:03 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Established new connection (24dcbc01-cd0c-4d70-889c-b4c0b5c807f5)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b0ba9e6
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (fa23e156-f4ee-45b4-a29c-a91b5b5940ed)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Established new connection (fa23e156-f4ee-45b4-a29c-a91b5b5940ed)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d461baf
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0a6cd95e-1574-4702-96b1-0c5799b7bc01)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Established new connection (0a6cd95e-1574-4702-96b1-0c5799b7bc01)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@63978c15
2025-04-23 12:07:03 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 12:07:03 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 12:07:03 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4cd23740-49ca-48c4-9b53-b0284c886507)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Established new connection (4cd23740-49ca-48c4-9b53-b0284c886507)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c1f9fa6
2025-04-23 12:07:03 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 12:07:03 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f1455b92-5c29-4746-b779-90f66ab54731)
2025-04-23 12:07:03 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 12:07:03 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@66f659e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4a68135e)
2025-04-23 12:07:03 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46678e49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@748e9b20)
2025-04-23 12:07:03 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 12:07:03 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Established new connection (f1455b92-5c29-4746-b779-90f66ab54731)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1a9d595a
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@702ed190`
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 12:07:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b6be8def-bfde-404e-8f65-8fe902e5dc0f)
2025-04-23 12:07:03 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 12:07:03 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f2eda3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34cf294c]
2025-04-23 12:07:03 DEBUG PoolBase - HikariPool-1 - Established new connection (b6be8def-bfde-404e-8f65-8fe902e5dc0f)
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@27bba2c5
2025-04-23 12:07:03 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 12:07:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 12:07:03 DEBUG EntityBinder - Import with entity name User
2025-04-23 12:07:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:07:03 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property userID
2025-04-23 12:07:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property email
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property isActive
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property name
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property password
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property userRole
2025-04-23 12:07:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 12:07:03 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 12:07:03 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property guestId
2025-04-23 12:07:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property age
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property name
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property user
2025-04-23 12:07:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 12:07:03 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 12:07:03 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property bookingId
2025-04-23 12:07:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property checkIn
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property checkOut
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property room
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property status
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property user
2025-04-23 12:07:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 12:07:03 DEBUG EntityBinder - Import with entity name Room
2025-04-23 12:07:03 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property roomID
2025-04-23 12:07:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property price
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property roomType
2025-04-23 12:07:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 12:07:03 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 12:07:03 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 12:07:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property amount
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property booking
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property issueDate
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 12:07:03 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 12:07:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 12:07:03 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 12:07:03 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 12:07:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:07:03 DEBUG PropertyBinder - Building property user
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 12:07:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 12:07:03 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 12:07:03 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 12:07:03 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 12:07:03 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 12:07:03 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 12:07:04 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 12:07:04 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 12:07:04 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@66deec87, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-23 12:07:04 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@124dac75] under count; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14924f41] under every; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@493da830] under any; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6] under sinh; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942] under cosh; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ec7d21] under tanh; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70025b99] under pi; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63] under log; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6088451e] under position; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5416f8db] under overlay; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6a1ef65c] under trim; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@27abb6ca] under cast; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620] under collate; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3a7e365] under extract; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5568c66f] under ifnull; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4bdf] under pad; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@78422efb] under str; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@69d3cf7e] under format; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4eaa375c] under timestampadd; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6215366a] under timestampdiff; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ec1963c] under current_date; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dcb42a9] under current_time; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6af90849] under current_timestamp; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1d06f16f] under local_date; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under local_time; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68dd39d2] under local_datetime; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a44cfc0] under offset_datetime; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e3c26e] under instant; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1b410308] under sql; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ec7d21
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112ce6
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b4942
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70025b99
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@16736040] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4fa4f485
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@68dd39d2
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@32eae6f2] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@26ca61bf] under bit_length; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@73a0f2b] under octet_length; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa5f81c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6088451e
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1d526c] under bitand; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f2f0109] under bitor; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483b0690] under bitxor; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293] under bitnot; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6870c3c2] under median; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c] under insert; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@66a5755] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5416f8db
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@771a7d53] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@cedee22] under listagg; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1c067c0d] under array; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5d0b0cb9] under array_list; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3c0e00a8] under array_agg; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@769bd849] under array_position; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1e79d43] under array_positions; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@d919544] under array_positions_list; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17dad32f] under array_length; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@4a8ffd75] under array_concat; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@23cbbd07] under array_prepend; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@448b808a] under array_append; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@10b4e7f8] under array_contains; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@75023c53] under array_contains_nullable; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6723610b] under array_overlaps; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5ba03c82] under array_overlaps_nullable; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5cf8676a] under array_get; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@59939293] under array_set; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@55f4887d] under array_remove_index; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26837057] under array_slice; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2dbc408c] under array_trim; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3b332962] under array_fill; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@57ddd45b] under array_fill_list; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@342e690b] under array_to_string; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@642a16aa] under mode; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@642ee49c] under percentile_cont; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@294aba23] under percentile_disc; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@32456db0] under rank; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5f5827d0] under dense_rank; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@58a2d9f9] under percent_rank; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4337afd] under cume_dist; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@52227eb2] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5ad1904f] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a146b11] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483b0690
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3135bf25] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@3cd26422] under trunc; prior registration was null
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 12:07:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eda072] under date_trunc; prior registration was null
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 12:07:04 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 12:07:04 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 12:07:04 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 12:07:04 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 12:07:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:07:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 12:07:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 12:07:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:07:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:07:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:07:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:07:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 12:07:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 12:07:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:07:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 12:07:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 12:07:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 12:07:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 12:07:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 12:07:04 DEBUG creation - Starting post-init callbacks
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 12:07:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 12:07:04 DEBUG create - Created new SQL alias : g1_0
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c472300] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 12:07:04 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:07:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 12:07:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 12:07:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 12:07:04 DEBUG create - Created new SQL alias : b1_0
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34cd65ac] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 12:07:04 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1cba0321] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 12:07:04 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:07:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 12:07:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 12:07:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 12:07:04 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 12:07:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 12:07:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 12:07:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 12:07:04 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 12:07:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 12:07:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 12:07:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 12:07:04 DEBUG create - Created new SQL alias : i1_0
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f2fb225] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 12:07:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e3283f6] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 12:07:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 12:07:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 12:07:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 12:07:04 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 12:07:04 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 12:07:04 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 12:07:04 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 12:07:04 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 12:07:04 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f2eda3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@790ac3e0]
2025-04-23 12:07:04 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 12:07:04 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 12:07:04 DEBUG Table - No alter strings for table : bookings
2025-04-23 12:07:04 DEBUG Table - No alter strings for table : guests
2025-04-23 12:07:04 DEBUG Table - No alter strings for table : invoices
2025-04-23 12:07:04 DEBUG Table - No alter strings for table : rooms
2025-04-23 12:07:04 DEBUG Table - No alter strings for table : users
2025-04-23 12:07:04 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a3b858f
2025-04-23 12:07:04 DEBUG SessionFactoryRegistry - Registering SessionFactory: 55e07cf5-4db1-4e84-a9e3-797b78e07f68 (my-persistence-unit)
2025-04-23 12:07:04 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 12:07:04 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 12:07:04 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 12:07:04 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 12:07:05 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 12:07:05 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:07:05 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:07:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 12:07:05 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 12:07:05 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 12:07:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 12:07:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 12:07:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:07:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@848490487 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:07:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:07:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 12:07:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1977511945
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-23 12:07:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 12:07:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bc8ffbc
2025-04-23 12:07:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:07:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@7881234 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:07:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:07:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 12:07:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1559261930
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:07:05 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-23 12:07:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 12:07:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1edac3b4
2025-04-23 12:07:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:05 INFO  HomeMenuUI - Login successful: SUPER ADMIN (SUPER_ADMIN)
2025-04-23 12:07:08 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 12:07:08 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:07:08 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:07:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 12:07:08 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 12:07:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 12:07:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 12:07:08 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:07:08 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@521328096 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:07:08 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 87923441
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1785343965
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1429207620
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1852224664
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1423138517
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1870436181
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1168882980
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 506594173
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1348064152
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1528045817
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1129243682
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1307131613
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1404232171
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 702218380
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 12:07:08 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:07:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 12:07:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f0ca069
2025-04-23 12:07:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:08 INFO  AdminMenuUI - Displayed 14 available rooms.
2025-04-23 12:07:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:07:29 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1926240621 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:07:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 996471089
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1205343271
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1012812460
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 548395375
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 90547887
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 35386120
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1289671373
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 316935832
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 983339701
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1740813661
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1571834834
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1871846962
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 835006543
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1138692983
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 12:07:29 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:07:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 12:07:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490d9c41
2025-04-23 12:07:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:07:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:07:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:07:59 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@323573179 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:07:59 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:07:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:07:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 948155881
2025-04-23 12:07:59 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 12:07:59 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:07:59 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:07:59 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:07:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:07:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61becbcf
2025-04-23 12:07:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:59 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:07:59 DEBUG TransactionImpl - begin
2025-04-23 12:07:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:07:59 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@20888781 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:07:59 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:07:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:07:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1864548849
2025-04-23 12:07:59 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 12:07:59 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:07:59 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:07:59 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:07:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:07:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ee095c9
2025-04-23 12:07:59 DEBUG TransactionImpl - committing
2025-04-23 12:07:59 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:07:59 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:07:59 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 12:07:59 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:07:59 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:07:59 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 12:07:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:07:59 INFO  RoomDaoImpl - Room with ID 8 marked as under maintenance.
2025-04-23 12:07:59 INFO  RoomServiceImpl - Room with ID 8 marked as under maintenance.
2025-04-23 12:07:59 INFO  AdminMenuUI - Room 8 marked under maintenance.
2025-04-23 12:08:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:08:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:08:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:08:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:08:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:08:35 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1798539562 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:08:35 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1715271127
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 728687687
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 164336254
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 140008669
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 321255783
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1328901016
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 448288866
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1347174748
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1822323955
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 135506771
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1345362299
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1657042048
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 2112011719
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1748949019
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 12:08:35 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:08:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 12:08:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11b14ae3
2025-04-23 12:08:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:08:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:08:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:08:38 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1007775526 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:08:38 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:08:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:08:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 187958805
2025-04-23 12:08:38 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 12:08:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:08:38 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:08:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:08:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:08:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c6b300a
2025-04-23 12:08:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:08:38 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:08:38 DEBUG TransactionImpl - begin
2025-04-23 12:08:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:08:38 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1111951675 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:08:38 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:08:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:08:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1045819065
2025-04-23 12:08:38 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 12:08:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:08:38 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:08:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:08:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:08:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44a13699
2025-04-23 12:08:38 DEBUG TransactionImpl - committing
2025-04-23 12:08:38 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:08:38 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:08:38 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 12:08:38 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:08:38 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:08:38 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 12:08:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:08:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:08:38 INFO  RoomDaoImpl - Room with ID 8 marked as under maintenance.
2025-04-23 12:08:38 INFO  RoomServiceImpl - Room with ID 8 marked as under maintenance.
2025-04-23 12:08:38 INFO  AdminMenuUI - Room 8 marked under maintenance.
2025-04-23 12:08:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:08:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:08:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:08:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:08:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:08:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:08:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:08:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:08:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:08:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:09:02 WARN  AdminMenuUI - Invalid menu input: For input string: "-"
2025-04-23 12:09:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:09:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:09:11 WARN  AdminMenuUI - Invalid menu input: For input string: "100000000000"
2025-04-23 12:09:14 WARN  AdminMenuUI - Invalid menu input: For input string: ""
2025-04-23 12:09:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:09:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:09:46 WARN  AdminMenuUI - Invalid email format entered: 0
2025-04-23 12:09:53 DEBUG hql - HQL : FROM User WHERE userRole = 'STAFF'
2025-04-23 12:09:53 DEBUG hql - Unable to resolve unqualified attribute [userRole] in local from-clause
2025-04-23 12:09:53 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(181083730163300)`
            <- [root] - `org.example.entity.User(181083730163300)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(181083730163300)`
          <- [root] - `org.example.entity.User(181083730163300)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(181083730163300).userRole`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:09:53 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:09:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(181083730163300))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 12:09:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(181083730163300).userRole) 
2025-04-23 12:09:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(181083730163300)]
 |  +-BasicFetch [org.example.entity.User(181083730163300).email]
 |  +-BasicFetch [org.example.entity.User(181083730163300).isActive]
 |  +-BasicFetch [org.example.entity.User(181083730163300).name]
 |  +-BasicFetch [org.example.entity.User(181083730163300).password]
 |  \-BasicFetch [org.example.entity.User(181083730163300).userRole]

2025-04-23 12:09:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(181083730163300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 12:09:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:09:53 DEBUG results - Initializer list:
	  org.example.entity.User(181083730163300) -> EntityResultInitializer(org.example.entity.User(181083730163300))@814987775 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:09:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 8
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#8] : 1598944606
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#8
2025-04-23 12:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72bce309
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 35
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#35] : 256089615
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#35
2025-04-23 12:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72bce309
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 34
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#34] : 1648430623
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#34
2025-04-23 12:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72bce309
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 37
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#37] : 1385623564
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:09:53 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:09:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#37
2025-04-23 12:09:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72bce309
2025-04-23 12:09:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:09:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:10:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:10:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:10:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:10:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:10:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:10:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:10:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:10:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:10:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:10:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:10:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:10:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1193797116 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:10:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:10:36 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:10:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 37
2025-04-23 12:10:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#37] : 1529869535
2025-04-23 12:10:36 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:10:36 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:10:36 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:10:36 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:10:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:10:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#37
2025-04-23 12:10:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23dff243
2025-04-23 12:10:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:10:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:10:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:10:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:10:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:10:49 INFO  AdminMenuUI - ❗ Admin access grant/revoke cancelled by user.
2025-04-23 12:10:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:11:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:11:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:11:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:11:06 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1869081829 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:11:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:11:06 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:11:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 37
2025-04-23 12:11:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#37] : 1560327273
2025-04-23 12:11:06 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:11:06 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:11:06 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:11:06 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:11:06 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:11:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#37
2025-04-23 12:11:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dd07be8
2025-04-23 12:11:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:11:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:11:07 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:11:07 DEBUG TransactionImpl - begin
2025-04-23 12:11:07 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:11:07 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 12:11:07 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 12:11:07 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 12:11:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:11:07 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1138663369 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:11:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:11:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 37
2025-04-23 12:11:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#37] : 467573282
2025-04-23 12:11:07 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:11:07 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:11:07 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:11:07 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:11:07 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:11:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#37
2025-04-23 12:11:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cc97e47
2025-04-23 12:11:07 DEBUG TransactionImpl - committing
2025-04-23 12:11:07 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:11:07 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:11:07 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:11:07 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:11:07 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:11:07 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SONAM GUPTA, isActive=true, userRole=STAFF, userID=37, email=sonam@gmail.com}
2025-04-23 12:11:07 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 12:11:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:11:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:11:07 INFO  AdminMenuUI - Staff registration approved: sonam@gmail.com
2025-04-23 12:11:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:11:09 DEBUG results - Initializer list:
	  org.example.entity.User(181083730163300) -> EntityResultInitializer(org.example.entity.User(181083730163300))@2110335494 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:11:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 8
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#8] : 1699592203
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#8
2025-04-23 12:11:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516037be
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 35
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#35] : 943613748
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#35
2025-04-23 12:11:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516037be
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 34
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#34] : 861958315
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#34
2025-04-23 12:11:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516037be
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 37
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#37] : 1004866348
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:11:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:11:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#37
2025-04-23 12:11:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516037be
2025-04-23 12:11:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:11:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:11:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:11:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:11:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:12:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:12:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:12:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:12:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:12:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1810368041 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:12:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:12:04 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:12:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 37
2025-04-23 12:12:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#37] : 673992821
2025-04-23 12:12:04 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:12:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:12:04 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:12:04 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:04 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#37
2025-04-23 12:12:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ed35f24
2025-04-23 12:12:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:08 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:12:08 DEBUG TransactionImpl - begin
2025-04-23 12:12:08 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:12:08 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@908802124 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:12:08 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:12:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 37
2025-04-23 12:12:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#37] : 1027629029
2025-04-23 12:12:08 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:12:08 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:12:08 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:12:08 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:08 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#37
2025-04-23 12:12:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52c6e959
2025-04-23 12:12:08 DEBUG TransactionImpl - committing
2025-04-23 12:12:08 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:12:08 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:12:08 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:12:08 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:12:08 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:12:08 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SONAM GUPTA, isActive=false, userRole=STAFF, userID=37, email=sonam@gmail.com}
2025-04-23 12:12:08 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 12:12:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:08 INFO  AdminMenuUI - Access revoked for staff: sonam@gmail.com
2025-04-23 12:12:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:12:09 DEBUG results - Initializer list:
	  org.example.entity.User(181083730163300) -> EntityResultInitializer(org.example.entity.User(181083730163300))@842821532 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:12:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 8
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#8] : 433699465
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#8
2025-04-23 12:12:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@484876a1
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 35
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#35] : 538325000
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#35
2025-04-23 12:12:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@484876a1
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 34
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#34] : 1626288305
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#34
2025-04-23 12:12:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@484876a1
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 37
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#37] : 876008407
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:09 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#37
2025-04-23 12:12:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@484876a1
2025-04-23 12:12:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:12:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:12:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:12:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:12:19 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1061181070 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:12:19 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:12:19 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:12:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 37
2025-04-23 12:12:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#37] : 899589525
2025-04-23 12:12:19 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:12:19 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:12:19 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:12:19 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:19 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#37
2025-04-23 12:12:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8d7718e
2025-04-23 12:12:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:21 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:12:21 DEBUG TransactionImpl - begin
2025-04-23 12:12:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:12:21 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@465258717 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:12:21 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:12:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 37
2025-04-23 12:12:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#37] : 2089229540
2025-04-23 12:12:21 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:12:21 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:12:21 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:12:21 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:21 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#37
2025-04-23 12:12:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d3b4e09
2025-04-23 12:12:21 DEBUG TransactionImpl - committing
2025-04-23 12:12:21 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:12:21 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:12:21 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:12:21 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:12:21 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:12:21 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SONAM GUPTA, isActive=true, userRole=STAFF, userID=37, email=sonam@gmail.com}
2025-04-23 12:12:21 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 12:12:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:22 INFO  AdminMenuUI - Access granted to staff: sonam@gmail.com
2025-04-23 12:12:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:12:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:12:24 DEBUG results - Initializer list:
	  org.example.entity.User(181083730163300) -> EntityResultInitializer(org.example.entity.User(181083730163300))@1752151434 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:12:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 8
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#8] : 1487924477
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#8
2025-04-23 12:12:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d79d187
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 35
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#35] : 1046723947
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#35
2025-04-23 12:12:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d79d187
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 34
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#34] : 1209290522
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#34
2025-04-23 12:12:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d79d187
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 37
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#37] : 1870367457
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:24 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#37
2025-04-23 12:12:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d79d187
2025-04-23 12:12:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:12:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:12:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:12:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:12:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:12:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:12:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:12:59 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1821215584 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:12:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:12:59 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-23 12:12:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 34
2025-04-23 12:12:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#34] : 373275593
2025-04-23 12:12:59 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-23 12:12:59 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:12:59 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-23 12:12:59 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:12:59 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:12:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#34
2025-04-23 12:12:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1669f4e5
2025-04-23 12:12:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:12:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:13:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:13:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:13:03 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:13:03 DEBUG TransactionImpl - begin
2025-04-23 12:13:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:13:03 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1852606548 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:13:03 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:13:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 34
2025-04-23 12:13:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#34] : 2046611860
2025-04-23 12:13:03 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-23 12:13:03 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:13:03 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-23 12:13:03 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:13:03 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:13:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#34
2025-04-23 12:13:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73d8c8d7
2025-04-23 12:13:03 DEBUG TransactionImpl - committing
2025-04-23 12:13:03 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:13:03 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:13:03 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:13:03 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:13:03 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:13:03 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=ABRAR SHAHA, isActive=true, userRole=STAFF, userID=34, email=abrar@gmail.com}
2025-04-23 12:13:03 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 12:13:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:13:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:13:03 INFO  AdminMenuUI - Access granted to staff: abrar@gmail.com
2025-04-23 12:13:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:13:05 DEBUG results - Initializer list:
	  org.example.entity.User(181083730163300) -> EntityResultInitializer(org.example.entity.User(181083730163300))@1211317010 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:13:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 8
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#8] : 1549563980
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#8
2025-04-23 12:13:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a299b9d
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 35
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#35] : 910156634
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#35
2025-04-23 12:13:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a299b9d
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 37
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#37] : 170899621
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#37
2025-04-23 12:13:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a299b9d
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181083730163300)): 34
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181083730163300)#34] : 890126260
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:13:05 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:13:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181083730163300)#34
2025-04-23 12:13:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a299b9d
2025-04-23 12:13:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:13:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:13:26 INFO  AdminMenuUI - Fetching all admin users.
2025-04-23 12:13:26 DEBUG hql - HQL : FROM User WHERE userRole = 'ADMIN'
2025-04-23 12:13:26 DEBUG hql - Unable to resolve unqualified attribute [userRole] in local from-clause
2025-04-23 12:13:26 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(181296360788900)`
            <- [root] - `org.example.entity.User(181296360788900)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(181296360788900)`
          <- [root] - `org.example.entity.User(181296360788900)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(181296360788900).userRole`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:13:26 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:13:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(181296360788900))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 12:13:26 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(181296360788900).userRole) 
2025-04-23 12:13:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(181296360788900)]
 |  +-BasicFetch [org.example.entity.User(181296360788900).email]
 |  +-BasicFetch [org.example.entity.User(181296360788900).isActive]
 |  +-BasicFetch [org.example.entity.User(181296360788900).name]
 |  +-BasicFetch [org.example.entity.User(181296360788900).password]
 |  \-BasicFetch [org.example.entity.User(181296360788900).userRole]

2025-04-23 12:13:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(181296360788900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 12:13:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:13:26 DEBUG results - Initializer list:
	  org.example.entity.User(181296360788900) -> EntityResultInitializer(org.example.entity.User(181296360788900))@1513204713 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:13:26 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-23 12:13:26 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 12:13:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181296360788900)): 2
2025-04-23 12:13:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181296360788900)#2] : 390560699
2025-04-23 12:13:26 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-23 12:13:26 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:13:26 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-23 12:13:26 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:13:26 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 12:13:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181296360788900)#2
2025-04-23 12:13:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40fee459
2025-04-23 12:13:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:13:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:13:26 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-23 12:13:26 INFO  AdminMenuUI - Total admins found: 1
2025-04-23 12:13:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:13:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:13:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:13:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:13:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:13:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:14:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:14:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:14:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:14:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:14:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:14:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:14:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:14:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:14:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:14:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:15:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:15:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:15:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:15:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:15:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:15:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:15:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:15:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:15:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:15:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:16:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:16:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:16:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:16:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:16:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:16:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:16:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:16:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:16:41 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-23 12:16:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:16:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:16:56 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1073352504 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:16:56 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:16:56 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-23 12:16:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 34
2025-04-23 12:16:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#34] : 1140572863
2025-04-23 12:16:56 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-23 12:16:56 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:16:56 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-23 12:16:56 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:16:56 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:16:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#34
2025-04-23 12:16:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2c978637
2025-04-23 12:16:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:16:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:16:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:17:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:17:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:17:21 INFO  AdminMenuUI - ❗ Admin access grant/revoke cancelled by user.
2025-04-23 12:17:23 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-23 12:17:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:17:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:17:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:17:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:17:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:17:35 INFO  AdminMenuUI - Fetching all admin users.
2025-04-23 12:17:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:17:35 DEBUG results - Initializer list:
	  org.example.entity.User(181296360788900) -> EntityResultInitializer(org.example.entity.User(181296360788900))@1579620531 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:17:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-23 12:17:35 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 12:17:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181296360788900)): 2
2025-04-23 12:17:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181296360788900)#2] : 1237401293
2025-04-23 12:17:35 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-23 12:17:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:17:35 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-23 12:17:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:17:35 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 12:17:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181296360788900)#2
2025-04-23 12:17:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2f4545c6
2025-04-23 12:17:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:17:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:17:35 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-23 12:17:35 INFO  AdminMenuUI - Total admins found: 1
2025-04-23 12:17:38 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-23 12:17:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:17:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:17:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1210663640 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:17:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:17:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:17:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:17:43 ERROR UserDaoImpl - Error fetching user by email superadmin@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.grantOrRevokeAdminAccess(AdminMenuUI.java:167) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.manageAdmins(AdminMenuUI.java:105) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displaySuperAdminMenu(AdminMenuUI.java:78) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-23 12:17:43 WARN  AdminMenuUI - User not found with email: superadmin@gmail.com
2025-04-23 12:17:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:18:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:18:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:18:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:18:04 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-23 12:18:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:18:12 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1993384592 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:18:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:18:12 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:18:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 12:18:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 505323885
2025-04-23 12:18:12 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:18:12 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:18:12 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:18:12 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:18:12 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-23 12:18:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 12:18:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6da9541c
2025-04-23 12:18:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:18:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:18:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:18:19 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:18:20 DEBUG TransactionImpl - begin
2025-04-23 12:18:20 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:18:20 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@559384732 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:18:20 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:18:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 1
2025-04-23 12:18:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#1] : 417004859
2025-04-23 12:18:20 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:18:20 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:18:20 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:18:20 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:18:20 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-23 12:18:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#1
2025-04-23 12:18:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2954c429
2025-04-23 12:18:20 DEBUG TransactionImpl - committing
2025-04-23 12:18:20 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:18:20 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:18:20 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:18:20 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:18:20 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:18:20 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SUPER ADMIN, isActive=false, userRole=SUPER_ADMIN, userID=1, email=superadmin@dss.com}
2025-04-23 12:18:20 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 12:18:20 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:18:20 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:18:20 INFO  AdminMenuUI - Admin access revoked for user: superadmin@dss.com
2025-04-23 12:18:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:18:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:18:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:18:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:18:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:18:58 INFO  AdminMenuUI - Fetching all admin users.
2025-04-23 12:18:58 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:18:58 DEBUG results - Initializer list:
	  org.example.entity.User(181296360788900) -> EntityResultInitializer(org.example.entity.User(181296360788900))@138303640 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:18:58 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-23 12:18:58 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 12:18:58 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(181296360788900)): 2
2025-04-23 12:18:58 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(181296360788900)#2] : 915526874
2025-04-23 12:18:58 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-23 12:18:58 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:18:58 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-23 12:18:58 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:18:58 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 12:18:58 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(181296360788900)#2
2025-04-23 12:18:58 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c91a008
2025-04-23 12:18:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:18:58 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:18:58 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-23 12:18:58 INFO  AdminMenuUI - Total admins found: 1
2025-04-23 12:19:02 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-23 12:19:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:19:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:19:07 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1861622992 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:19:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:19:07 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 12:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1479320034
2025-04-23 12:19:07 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:19:07 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:19:07 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:19:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:19:07 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-23 12:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 12:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@66226ab
2025-04-23 12:19:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:19:08 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:19:08 DEBUG TransactionImpl - begin
2025-04-23 12:19:08 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:19:08 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@940130302 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:19:08 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:19:08 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 1
2025-04-23 12:19:08 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#1] : 1833765396
2025-04-23 12:19:08 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:19:08 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:19:08 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:19:08 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:19:08 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-23 12:19:08 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#1
2025-04-23 12:19:08 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1cca3e8c
2025-04-23 12:19:08 DEBUG TransactionImpl - committing
2025-04-23 12:19:08 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:19:08 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:19:08 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:19:08 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:19:08 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:19:08 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SUPER ADMIN, isActive=true, userRole=ADMIN, userID=1, email=superadmin@dss.com}
2025-04-23 12:19:08 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 12:19:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:08 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:08 INFO  AdminMenuUI - Admin access granted to user: superadmin@dss.com
2025-04-23 12:19:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:19:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:19:27 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-23 12:19:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:19:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:19:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:19:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:19:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:19:48 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1439235168 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:19:48 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:19:48 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:19:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 12:19:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1313534832
2025-04-23 12:19:48 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:19:48 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:19:48 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:19:48 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:19:48 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 12:19:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 12:19:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cf33d25
2025-04-23 12:19:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:50 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:19:50 DEBUG TransactionImpl - begin
2025-04-23 12:19:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:19:50 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@251266229 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:19:50 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:19:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 1
2025-04-23 12:19:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#1] : 1444353676
2025-04-23 12:19:50 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:19:50 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:19:50 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:19:50 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:19:50 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 12:19:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#1
2025-04-23 12:19:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8167f57
2025-04-23 12:19:50 DEBUG TransactionImpl - committing
2025-04-23 12:19:50 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:19:50 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:19:50 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:19:50 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:19:50 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:19:50 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SUPER ADMIN, isActive=false, userRole=ADMIN, userID=1, email=superadmin@dss.com}
2025-04-23 12:19:50 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 12:19:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:50 INFO  AdminMenuUI - Admin access revoked for user: superadmin@dss.com
2025-04-23 12:19:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:19:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:19:59 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1410897862 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:19:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:19:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 12:19:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1805866468
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 12:19:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 12:19:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b1559f1
2025-04-23 12:19:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:19:59 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1796597388 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:19:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:19:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 12:19:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1506867913
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:19:59 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 12:19:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 12:19:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d3546f9
2025-04-23 12:19:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:19:59 WARN  HomeMenuUI - Inactive account login attempt: superadmin@dss.com
2025-04-23 12:20:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:20:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:20:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:20:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:20:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:20:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:20:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:20:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:20:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:20:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:21:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:21:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:21:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:21:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:21:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:21:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:21:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:21:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:21:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:21:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:21:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:22:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:22:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:22:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:22:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:22:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:22:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:22:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:22:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:22:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1357705014 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:22:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:22:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 12:22:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1854597758
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 12:22:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 12:22:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@59282dc6
2025-04-23 12:22:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:22:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:22:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:22:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1614519627 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:22:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:22:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 12:22:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1668400620
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:22:47 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 12:22:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 12:22:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f9ccd0c
2025-04-23 12:22:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:22:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:22:47 INFO  HomeMenuUI - Login successful: SUPER ADMIN (ADMIN)
2025-04-23 12:22:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:23:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:23:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:23:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:23:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:23:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:23:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:23:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:23:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:23:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:23:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:24:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:24:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:24:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:24:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:24:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:24:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:24:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:24:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:24:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:24:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:25:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:25:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:25:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:25:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:25:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:25:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:25:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:25:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:25:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:25:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1731782834 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:25:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:25:47 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:25:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 37
2025-04-23 12:25:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#37] : 879001432
2025-04-23 12:25:47 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:25:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:25:47 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:25:47 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:25:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:25:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#37
2025-04-23 12:25:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b96c1e
2025-04-23 12:25:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:25:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:25:47 WARN  HomeMenuUI - Invalid login attempt for email: sonam@gmail.com
2025-04-23 12:26:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:26:02 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@580195583 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:26:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:26:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 37
2025-04-23 12:26:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#37] : 776806962
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:26:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#37
2025-04-23 12:26:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24f5e9e8
2025-04-23 12:26:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:26:02 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1357311524 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:26:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 12:26:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 37
2025-04-23 12:26:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#37] : 912373554
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 12:26:02 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 12:26:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#37
2025-04-23 12:26:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5111f814
2025-04-23 12:26:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:02 INFO  HomeMenuUI - Login successful: SONAM GUPTA (STAFF)
2025-04-23 12:26:02 INFO  StaffMenuUI - Staff menu accessed by: SONAM GUPTA (Role: STAFF)
2025-04-23 12:26:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:26:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:26:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:26:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:26:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:26:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:26:25 INFO  StaffMenuUI - User SONAM GUPTA selected: Checkout
2025-04-23 12:26:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:26:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1911225188 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:26:33 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 745578974
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ae74eef
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@626252992 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:26:33 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 929452805
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c683cf5
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user AND b.status = :status
2025-04-23 12:26:33 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 12:26:33 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(status)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).status)
2025-04-23 12:26:33 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [entity-path] - `org.example.entity.Booking(b).user`
                :user
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Booking(b).status`
                :status
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:26:33 DEBUG create - Created new SQL alias : b1_0
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6afaf27] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1983a4e4] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ce7a354] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ce7a354] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1983a4e4
2025-04-23 12:26:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 12:26:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 12:26:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 12:26:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(status)
2025-04-23 12:26:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-23 12:26:33 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 12:26:33 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1648661716 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@951007342 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1965472536 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 12:26:33 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 272755642
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:26:33 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2024413011 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:26:33 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 477578433
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@320e179f
2025-04-23 12:26:33 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 12:26:33 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1847252568 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:26:33 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 917987811
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e27d97b
2025-04-23 12:26:33 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73dd0f23
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@448070390 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@713961699 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@835020577 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)

2025-04-23 12:26:33 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 622274963
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1064414847
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 1530060977
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d1d85d0
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-23 12:26:33 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-23 12:26:33 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:26:33 DEBUG create - Created new SQL alias : i1_0
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e4348c0] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ca907af] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ef396c9] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ef396c9] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@e4348c0
2025-04-23 12:26:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-23 12:26:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-23 12:26:33 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-23 12:26:33 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-23 12:26:33 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1856885570 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@815927219)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@888293905 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1064122091 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1062913415)

2025-04-23 12:26:33 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [0] - [47]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 47
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#47] : 2140101943
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#47
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5cf611
2025-04-23 12:26:33 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:26:33 DEBUG TransactionImpl - begin
2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1941163569 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1062913415)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@1183266411 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@815927219)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@974630100 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-23 12:26:33 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 47
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#47] : 445729280
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#47
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d67348a
2025-04-23 12:26:33 DEBUG TransactionImpl - committing
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:26:33 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:26:33 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3.65E8, booking=<uninitialized>, invoiceId=47, issueDate=2025-04-23T11:47:08.775546, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-23 12:26:33 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:26:33 DEBUG TransactionImpl - begin
2025-04-23 12:26:33 DEBUG create - Created new SQL alias : b1_0
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b0e5d5f] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 12:26:33 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@58b5d5fc] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 12:26:33 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:26:33 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 12:26:33 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1972489169 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1557955737 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@707834059 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)

2025-04-23 12:26:33 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 807661911
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 523938160
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 1377024135
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 12:26:33 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40c6d1ef
2025-04-23 12:26:33 DEBUG TransactionImpl - committing
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:26:33 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:26:33 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 12:26:33 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-23 12:26:33 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-23T12:00:09, checkOut=2125-03-30T12:00:09, user=org.example.entity.User#13, bookingId=75, room=org.example.entity.Room#8, status=CONFIRMED}
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 INFO  BookingServiceImpl - Booking updated successfully with ID: 75
2025-04-23 12:26:33 INFO  StaffMenuUI - Booking ID: 75 status updated to COMPLETED
2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2142582414 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:26:33 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1191049963
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@102aa5fc
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 INFO  RoomServiceImpl - Fetched room with ID 8: Optional[Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=false}]
2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@190091089 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:26:33 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1954824726
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0575d0
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:26:33 DEBUG TransactionImpl - begin
2025-04-23 12:26:33 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:26:33 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 12:26:33 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 12:26:33 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 12:26:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:26:33 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1660295258 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:26:33 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1279249383
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:26:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:26:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:26:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e592ef2
2025-04-23 12:26:33 DEBUG TransactionImpl - committing
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 12:26:33 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:26:33 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:26:33 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 12:26:33 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:26:33 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 12:26:33 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 12:26:33 INFO  StaffMenuUI - Room 204 is now available after checkout
2025-04-23 12:26:33 INFO  StaffMenuUI - Checkout completed successfully for user: SAURAV SHARMA
2025-04-23 12:26:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:26:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:26:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:26:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:27:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:27:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:27:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:27:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:27:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:27:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:27:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:27:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:28:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:28:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:28:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:28:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:28:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:28:14 INFO  StaffMenuUI - User SONAM GUPTA selected: Generate Invoices
2025-04-23 12:28:14 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-23 12:28:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:28:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:28:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:28:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:28:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:28:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:28:41 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@113211374 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1371989877 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@925385170 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)

2025-04-23 12:28:41 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 12:28:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:28:41 INFO  InvoiceServiceImpl - No booking found for ID: 22
2025-04-23 12:28:41 WARN  StaffMenuUI - Invoice not found.
2025-04-23 12:28:47 INFO  StaffMenuUI - User SONAM GUPTA selected: Generate Invoices
2025-04-23 12:28:47 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-23 12:28:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:28:51 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@2011941350 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@45621272 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@86938358 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)

2025-04-23 12:28:51 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 12:28:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 2113229982
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 213762292
2025-04-23 12:28:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 17921215
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 12:28:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 12:28:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f0c1409
2025-04-23 12:28:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:28:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:28:51 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@411756754 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@815927219)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@2052202839 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1886127662 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1062913415)

2025-04-23 12:28:51 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [0] - [47]
2025-04-23 12:28:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 47
2025-04-23 12:28:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#47] : 2078250226
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-23 12:28:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#47
2025-04-23 12:28:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b92a0d1
2025-04-23 12:28:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:28:51 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1268701597 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@968448640 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1053172033 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)

2025-04-23 12:28:51 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 12:28:51 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 18758920
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 633686225
2025-04-23 12:28:51 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 1198139417
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 12:28:51 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 12:28:51 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 12:28:51 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 12:28:51 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@279ab15e
2025-04-23 12:28:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:29:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:29:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:29:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:29:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7932e1ab is alive
2025-04-23 12:29:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:29:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:29:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:29:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:29:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:29:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a9d595a is alive
2025-04-23 12:30:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:30:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:30:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d461baf is alive
2025-04-23 12:30:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:30:14 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7932e1ab: (connection has passed maxLifetime)
2025-04-23 12:30:14 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (47dd893c-2cc9-41b2-adec-e3879ab18b85)
2025-04-23 12:30:15 DEBUG PoolBase - HikariPool-1 - Established new connection (47dd893c-2cc9-41b2-adec-e3879ab18b85)
2025-04-23 12:30:15 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4b9781e1
2025-04-23 12:30:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:30:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:30:28 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1a9d595a: (connection has passed maxLifetime)
2025-04-23 12:30:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2fbe1320-4ec2-4283-9db0-9a4d3d4fec21)
2025-04-23 12:30:28 DEBUG PoolBase - HikariPool-1 - Established new connection (2fbe1320-4ec2-4283-9db0-9a4d3d4fec21)
2025-04-23 12:30:28 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d200a24
2025-04-23 12:30:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:30:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:30:38 INFO  StaffMenuUI - User SONAM GUPTA selected: Checkout
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1554565380 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:30:46 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 964736079
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@237aba92
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1706139228 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:30:46 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 591318674
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a14f7d7
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1717136460 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@22864481 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1422124678 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 12:30:46 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1916505855
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:30:46 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@965190120 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:30:46 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 200063290
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@f60c14e
2025-04-23 12:30:46 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 12:30:46 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@488624810 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:30:46 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 726690425
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48b9773b
2025-04-23 12:30:46 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43ca96a0
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@2087233084 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1413679210 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1463856502 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)

2025-04-23 12:30:46 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 897846988
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1744645655
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 1705173326
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c8689e
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1034296050 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@815927219)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@2018683696 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1098338771 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1062913415)

2025-04-23 12:30:46 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [0] - [47]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 47
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#47] : 1696962359
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#47
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e27bb89
2025-04-23 12:30:46 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:30:46 DEBUG TransactionImpl - begin
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1627979043 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1062913415)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@1953465632 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@815927219)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1027221685 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-23 12:30:46 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 47
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#47] : 812381379
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#47
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cf80dfb
2025-04-23 12:30:46 DEBUG TransactionImpl - committing
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:30:46 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:30:46 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3.65E8, booking=<uninitialized>, invoiceId=47, issueDate=2025-04-23T11:47:08.775546, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:30:46 DEBUG TransactionImpl - begin
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@767266208 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@825281081 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@402346372 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)

2025-04-23 12:30:46 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 1589288513
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 327193443
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 1447901504
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 12:30:46 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58ad0586
2025-04-23 12:30:46 DEBUG TransactionImpl - committing
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:30:46 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:30:46 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 12:30:46 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-23 12:30:46 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-23T12:00:09, checkOut=2125-03-30T12:00:09, user=org.example.entity.User#13, bookingId=75, room=org.example.entity.Room#8, status=CONFIRMED}
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 INFO  BookingServiceImpl - Booking updated successfully with ID: 75
2025-04-23 12:30:46 INFO  StaffMenuUI - Booking ID: 75 status updated to COMPLETED
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1383055428 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:30:46 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1256871900
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@66abc325
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 INFO  RoomServiceImpl - Fetched room with ID 8: Optional[Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}]
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@960510275 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:30:46 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1016689071
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4abdd5e
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 12:30:46 DEBUG TransactionImpl - begin
2025-04-23 12:30:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:30:46 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1725305496 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:30:46 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1458013496
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:30:46 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:30:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:30:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@731fae
2025-04-23 12:30:46 DEBUG TransactionImpl - committing
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 12:30:46 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 12:30:46 DEBUG EntityPrinter - Listing entities:
2025-04-23 12:30:46 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:30:46 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 12:30:46 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 12:30:46 INFO  StaffMenuUI - Room 204 is now available after checkout
2025-04-23 12:30:46 INFO  StaffMenuUI - Checkout completed successfully for user: SAURAV SHARMA
2025-04-23 12:30:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-23 12:31:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:31:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:31:04 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@70f59913: (connection has passed maxLifetime)
2025-04-23 12:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a0b9f20d-e4d3-4d9d-9986-392a8b71fd00)
2025-04-23 12:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (a0b9f20d-e4d3-4d9d-9986-392a8b71fd00)
2025-04-23 12:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6699d6c8
2025-04-23 12:31:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:31:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:31:21 INFO  StaffMenuUI - User SONAM GUPTA selected: Check Guest Details
2025-04-23 12:31:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:31:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:31:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:31:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:31:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@70820563 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:31:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 500934560
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 12:31:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c34b0f2
2025-04-23 12:31:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:31:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:31:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:31:43 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@2113847484 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:31:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 721840156
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 12:31:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20f6b6e0
2025-04-23 12:31:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:31:43 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-23 12:31:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 12:31:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:31:43 DEBUG create - Created new SQL alias : b1_0
2025-04-23 12:31:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 12:31:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c846d55] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 12:31:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@735167e1] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 12:31:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67689c81] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 12:31:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67689c81] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@735167e1
2025-04-23 12:31:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 12:31:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 12:31:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 12:31:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 12:31:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 12:31:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:31:43 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2060069278 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@469053200 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1632141948 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 12:31:43 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1413194465
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:31:43 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 12:31:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:31:43 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1900380536 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:31:43 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 960220523
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 12:31:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64a8d575
2025-04-23 12:31:43 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 12:31:43 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 12:31:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:31:43 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1954051593 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:31:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1943764464
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 12:31:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44a485bc
2025-04-23 12:31:43 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 12:31:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c66cd02
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 492002168
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:31:43 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 12:31:43 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 12:31:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:31:43 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@902795743 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:31:43 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2014166743
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 12:31:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31859960
2025-04-23 12:31:43 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 12:31:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c66cd02
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 1461249916
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 12:31:43 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 12:31:43 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 12:31:43 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 12:31:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-23 12:31:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c66cd02
2025-04-23 12:31:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:31:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:31:43 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@d461baf: (connection has passed maxLifetime)
2025-04-23 12:31:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e87bd37f-c1f9-4f32-9a19-85546340c1e0)
2025-04-23 12:31:43 DEBUG PoolBase - HikariPool-1 - Established new connection (e87bd37f-c1f9-4f32-9a19-85546340c1e0)
2025-04-23 12:31:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6247a142
2025-04-23 12:31:46 INFO  StaffMenuUI - User SONAM GUPTA selected: Checkout
2025-04-23 12:31:48 WARN  StaffMenuUI - Invalid email format entered: SAURAV@GMAIL.COM
2025-04-23 12:31:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:31:59 ERROR StaffMenuUI - InputMismatchException: Invalid input by user SONAM GUPTA in staff menu
2025-04-23 12:32:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:32:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:32:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:32:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:32:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:32:11 INFO  StaffMenuUI - User SONAM GUPTA selected: Checkout
2025-04-23 12:32:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:32:12 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@680034596 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:32:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:32:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 12:32:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 735738459
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:32:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 12:32:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@47374fa5
2025-04-23 12:32:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:32:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:32:12 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-23 12:32:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 12:32:12 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@681419196 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:32:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 12:32:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 12:32:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1264377095
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:32:12 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:32:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 12:32:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e890591
2025-04-23 12:32:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:32:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:32:12 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@447706039 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1699491713)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1931283804 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@864189320)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1577337565 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 12:32:12 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-23 12:32:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:32:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:32:12 ERROR BookingDaoImpl - Error occurred while fetching confirmed booking for user ID: 13
jakarta.persistence.NoResultException: No result found for query [SELECT b FROM Booking b WHERE b.user = :user AND b.status = :status]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getConfirmedBookingByUserId(BookingDaoImpl.java:100) ~[classes/:?]
	at java.util.Optional.flatMap(Optional.java:289) [?:?]
	at org.example.service.BookingServiceImpl.getConfirmedBookingByUserId(BookingServiceImpl.java:79) [classes/:?]
	at org.example.controller.BookingController.getConfirmedBookingByUserId(BookingController.java:74) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.checkoutByStaff(StaffMenuUI.java:234) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:86) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:100) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-23 12:32:12 WARN  StaffMenuUI - No active confirmed booking found for user: saurav@gmail.com
2025-04-23 12:32:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:32:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:32:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:32:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:32:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:32:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73ca8adb is alive
2025-04-23 12:33:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:33:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:33:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:33:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:33:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:33:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:33:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c3060e9 is alive
2025-04-23 12:33:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:33:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:34:00 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3c3060e9: (connection has passed maxLifetime)
2025-04-23 12:34:00 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b0939f29-df23-4f1c-ac0a-8ba7d13bb20c)
2025-04-23 12:34:00 DEBUG PoolBase - HikariPool-1 - Established new connection (b0939f29-df23-4f1c-ac0a-8ba7d13bb20c)
2025-04-23 12:34:00 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b9b5121
2025-04-23 12:34:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:34:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:34:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:34:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:34:16 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@73ca8adb: (connection has passed maxLifetime)
2025-04-23 12:34:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6f1205ae-8d7e-4643-8f74-136589ea7528)
2025-04-23 12:34:16 DEBUG PoolBase - HikariPool-1 - Established new connection (6f1205ae-8d7e-4643-8f74-136589ea7528)
2025-04-23 12:34:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28b3f0cd
2025-04-23 12:34:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:34:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:34:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:34:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63978c15 is alive
2025-04-23 12:34:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c1f9fa6 is alive
2025-04-23 12:35:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:35:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:35:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:35:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:35:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:35:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:35:45 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@63978c15: (connection has passed maxLifetime)
2025-04-23 12:35:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (afb07e8c-35e2-424b-bc62-4472537405b0)
2025-04-23 12:35:45 DEBUG PoolBase - HikariPool-1 - Established new connection (afb07e8c-35e2-424b-bc62-4472537405b0)
2025-04-23 12:35:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41e7fde7
2025-04-23 12:35:48 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5c1f9fa6: (connection has passed maxLifetime)
2025-04-23 12:35:48 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (daf0b4c3-77b2-496b-baaf-ba8a27a15538)
2025-04-23 12:35:48 DEBUG PoolBase - HikariPool-1 - Established new connection (daf0b4c3-77b2-496b-baaf-ba8a27a15538)
2025-04-23 12:35:48 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4b1f9697
2025-04-23 12:35:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:35:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b0ba9e6 is alive
2025-04-23 12:35:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27bba2c5 is alive
2025-04-23 12:35:57 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@27bba2c5: (connection has passed maxLifetime)
2025-04-23 12:35:57 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (880d0ada-774e-4637-8738-c61113178ee0)
2025-04-23 12:35:57 DEBUG PoolBase - HikariPool-1 - Established new connection (880d0ada-774e-4637-8738-c61113178ee0)
2025-04-23 12:35:57 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@53ae175b
2025-04-23 12:36:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:36:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:36:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:36:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:36:16 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1b0ba9e6: (connection has passed maxLifetime)
2025-04-23 12:36:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (66765c95-123b-4c55-ba94-eee6ab04ef0f)
2025-04-23 12:36:16 DEBUG PoolBase - HikariPool-1 - Established new connection (66765c95-123b-4c55-ba94-eee6ab04ef0f)
2025-04-23 12:36:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@13b2bbac
2025-04-23 12:36:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:36:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:36:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:36:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:37:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:37:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:37:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:37:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:37:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:37:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:37:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:37:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:37:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53ae175b is alive
2025-04-23 12:37:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:38:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:38:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:38:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:38:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13b2bbac is alive
2025-04-23 12:38:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:38:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:38:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:38:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:39:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:39:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:39:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:39:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:39:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:39:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:39:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:39:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:39:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:39:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53ae175b is alive
2025-04-23 12:39:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:40:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:40:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:40:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13b2bbac is alive
2025-04-23 12:40:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:40:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:40:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:40:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:40:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:41:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:41:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:41:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:41:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:41:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:41:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:41:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:41:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:41:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:41:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53ae175b is alive
2025-04-23 12:41:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:42:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:42:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:42:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:42:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13b2bbac is alive
2025-04-23 12:42:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:42:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:42:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:42:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:43:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:43:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:43:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:43:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:43:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:43:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:43:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:43:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:43:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:43:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:43:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53ae175b is alive
2025-04-23 12:44:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:44:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:44:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13b2bbac is alive
2025-04-23 12:44:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:44:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:44:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:44:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:45:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:45:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:45:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:45:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:45:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:45:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:45:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:45:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:45:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:45:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:45:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:45:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53ae175b is alive
2025-04-23 12:46:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13b2bbac is alive
2025-04-23 12:46:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:46:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:46:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:46:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:46:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:46:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:46:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:46:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:46:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:47:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:47:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:47:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:47:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:47:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:47:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:47:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:47:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53ae175b is alive
2025-04-23 12:47:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13b2bbac is alive
2025-04-23 12:48:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:48:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:48:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:48:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:48:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:48:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:48:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:48:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:48:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:48:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:49:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:49:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:49:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:49:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:49:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:49:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:49:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53ae175b is alive
2025-04-23 12:49:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13b2bbac is alive
2025-04-23 12:50:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:50:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:50:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:50:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:50:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:50:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:50:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:50:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:50:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:50:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:50:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:51:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:51:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:51:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:51:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:51:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:51:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53ae175b is alive
2025-04-23 12:51:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:51:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:51:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13b2bbac is alive
2025-04-23 12:52:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:52:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:52:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:52:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b3f0cd is alive
2025-04-23 12:52:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b9b5121 is alive
2025-04-23 12:52:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6247a142 is alive
2025-04-23 12:52:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b1f9697 is alive
2025-04-23 12:52:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:52:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:53:03 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:53:03 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:53:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d200a24 is alive
2025-04-23 12:53:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4b9781e1 is alive
2025-04-23 12:53:33 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:53:33 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:53:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41e7fde7 is alive
2025-04-23 12:53:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@53ae175b is alive
2025-04-23 12:53:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13b2bbac is alive
2025-04-23 12:53:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6699d6c8 is alive
2025-04-23 12:58:24 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 12:58:24 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 12:58:24 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 12:58:24 DEBUG HikariConfig - autoCommit......................true
2025-04-23 12:58:24 DEBUG HikariConfig - catalog.........................none
2025-04-23 12:58:24 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 12:58:24 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 12:58:24 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 12:58:24 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@614df0a4
2025-04-23 12:58:24 DEBUG HikariConfig - dataSource......................none
2025-04-23 12:58:24 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 12:58:24 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 12:58:24 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 12:58:24 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 12:58:24 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 12:58:24 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 12:58:24 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 12:58:24 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 12:58:24 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 12:58:24 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 12:58:24 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 12:58:24 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 12:58:24 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 12:58:24 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 12:58:24 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 12:58:24 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 12:58:24 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 12:58:24 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 12:58:24 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 12:58:24 DEBUG HikariConfig - password........................<masked>
2025-04-23 12:58:24 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 12:58:24 DEBUG HikariConfig - readOnly........................false
2025-04-23 12:58:24 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 12:58:24 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 12:58:24 DEBUG HikariConfig - schema..........................none
2025-04-23 12:58:24 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 12:58:24 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 12:58:24 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 12:58:24 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 12:58:24 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 12:58:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d5254b38-0381-42b8-8605-1b46d7a54805)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (d5254b38-0381-42b8-8605-1b46d7a54805)
2025-04-23 12:58:25 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@625e134e
2025-04-23 12:58:25 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 12:58:25 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 12:58:25 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 12:58:25 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 12:58:25 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 12:58:25 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 12:58:25 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (248036c6-f47d-47a9-802c-4a45e131a3e7)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (248036c6-f47d-47a9-802c-4a45e131a3e7)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4f3e8e51
2025-04-23 12:58:25 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 12:58:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 12:58:25 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 12:58:25 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (64e5637a-f239-424a-bc40-95508288e1eb)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (64e5637a-f239-424a-bc40-95508288e1eb)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8b9dd7
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2a90916f-54bc-4368-94fb-adc985821f0c)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (2a90916f-54bc-4368-94fb-adc985821f0c)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@47b69ad1
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@66908383
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56781d96
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6a714237
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6a714237
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4a699efa
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@38499e48
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4905c46b
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@17ae7628
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1136b469
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6579c3d9
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2b87581
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@66434cc8
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42f22995
2025-04-23 12:58:25 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@773bd77b] into BootstrapContext; was [null]
2025-04-23 12:58:25 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6b580b88] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d91790b]
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2c474acf-aa82-4568-a11a-4b64bb2085bd)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (2c474acf-aa82-4568-a11a-4b64bb2085bd)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7283dd42
2025-04-23 12:58:25 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 12:58:25 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 12:58:25 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ee95e397-623f-49c5-94cc-bb3615d076e8)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (ee95e397-623f-49c5-94cc-bb3615d076e8)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@65f102a6
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (109c4cba-e1ed-487b-b319-148978d2496b)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (109c4cba-e1ed-487b-b319-148978d2496b)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@f92d192
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2e0a3736-7a0a-4d23-ab35-8fb0b8221c61)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (2e0a3736-7a0a-4d23-ab35-8fb0b8221c61)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@33662935
2025-04-23 12:58:25 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 12:58:25 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 12:58:25 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (357f9945-1401-484d-b7c9-d5337cc35855)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (357f9945-1401-484d-b7c9-d5337cc35855)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@67d68390
2025-04-23 12:58:25 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 12:58:25 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f7d22de3-8101-46a9-9cbd-d55addf0ba1d)
2025-04-23 12:58:25 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 12:58:25 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@319c3a25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@238bfd6c)
2025-04-23 12:58:25 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ef1695a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58860997)
2025-04-23 12:58:25 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 12:58:25 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 12:58:25 DEBUG PoolBase - HikariPool-1 - Established new connection (f7d22de3-8101-46a9-9cbd-d55addf0ba1d)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6f1fb497
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1daf3b44
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1daf3b44
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6a714237`
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 12:58:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 12:58:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:58:25 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 12:58:25 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@665522c2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@41fe8e5f]
2025-04-23 12:58:25 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 12:58:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 12:58:26 DEBUG EntityBinder - Import with entity name User
2025-04-23 12:58:26 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property userID
2025-04-23 12:58:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property email
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property isActive
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property name
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property password
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property userRole
2025-04-23 12:58:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 12:58:26 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 12:58:26 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property guestId
2025-04-23 12:58:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property age
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property name
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property user
2025-04-23 12:58:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 12:58:26 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 12:58:26 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property bookingId
2025-04-23 12:58:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property checkIn
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property checkOut
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property room
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property status
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property user
2025-04-23 12:58:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 12:58:26 DEBUG EntityBinder - Import with entity name Room
2025-04-23 12:58:26 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property roomID
2025-04-23 12:58:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property price
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property roomType
2025-04-23 12:58:26 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 12:58:26 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 12:58:26 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 12:58:26 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property amount
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property booking
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property issueDate
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 12:58:26 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 12:58:26 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 12:58:26 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 12:58:26 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 12:58:26 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 12:58:26 DEBUG PropertyBinder - Building property user
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 12:58:26 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 12:58:26 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 12:58:26 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 12:58:26 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 12:58:26 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 12:58:26 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 12:58:26 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 12:58:26 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 12:58:26 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@79476a4e, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-23 12:58:26 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2ba1209b] under count; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2b73bd6b] under every; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@157d3a45] under any; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30bf26df] under sinh; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@261bd7b] under cosh; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f9e08d4] under tanh; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@390037e7] under pi; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@704067c6] under log; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1e54a6b1] under position; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5042e3d0] under overlay; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@637791d] under trim; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3fde8f7c] under cast; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11d86b9d] under collate; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@800d065] under extract; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5a0e0886] under ifnull; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@27f3f512] under pad; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2ac519dc] under str; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4872669f] under format; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@68ef01a5] under timestampadd; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@cde8c6c] under timestampdiff; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4aeb0e2b] under current_date; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@648c5fb3] under current_time; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@47b33e07] under current_timestamp; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7126e26] under local_date; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@151ab2b9] under local_time; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13ed066e] under local_datetime; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4d705112] under offset_datetime; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@590765c4] under instant; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4f116ca2] under sql; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@704067c6
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@125d47c4] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f9e08d4
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30bf26df
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@261bd7b
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@390037e7
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@581b1c08] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@151ab2b9
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@13ed066e
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5809fa26] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64763e49] under bit_length; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@23468512] under octet_length; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd7630] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1e54a6b1
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e8279e5] under bitand; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b53840a] under bitor; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3caafa67] under bitxor; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e546734] under bitnot; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53747c4a] under median; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f2276c9] under insert; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1c61eda5] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5042e3d0
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1859ffda] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@7f0b93b4] under listagg; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4262fdeb] under array; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5f0a2638] under array_list; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2c26ba07] under array_agg; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@456f7d9e] under array_position; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6b2dd3df] under array_positions; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@68b7d0ef] under array_positions_list; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7069f076] under array_length; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7ecda95b] under array_concat; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@59498d94] under array_prepend; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@35bfa1bb] under array_append; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@ee21292] under array_contains; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@40c06358] under array_contains_nullable; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@40ce9049] under array_overlaps; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@52ca2652] under array_overlaps_nullable; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5efeb117] under array_get; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@114a5e0] under array_set; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@2bb41f5c] under array_remove_index; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24c685e7] under array_slice; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7da635c0] under array_trim; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@faea4da] under array_fill; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@19b02dfd] under array_fill_list; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@b4732dc] under array_to_string; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4f93bf0a] under mode; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@322204dc] under percentile_cont; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@656a3d6b] under percentile_disc; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@61191222] under rank; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@58833798] under dense_rank; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7f3ca64a] under percent_rank; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4d464510] under cume_dist; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@401c4250] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@1a950fdd] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77724cbe] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3caafa67
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@525b1b70] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@67fb5025] under trunc; prior registration was null
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 12:58:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@787e4357] under date_trunc; prior registration was null
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 12:58:26 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 12:58:26 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 12:58:26 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 12:58:26 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 12:58:26 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:58:26 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 12:58:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 12:58:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 12:58:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:58:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:58:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:58:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:58:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:58:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 12:58:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 12:58:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 12:58:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:58:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 12:58:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 12:58:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 12:58:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 12:58:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 12:58:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 12:58:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 12:58:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 12:58:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 12:58:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 12:58:27 DEBUG creation - Starting post-init callbacks
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 12:58:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 12:58:27 DEBUG create - Created new SQL alias : g1_0
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@315b4202] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 12:58:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:58:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 12:58:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 12:58:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 12:58:27 DEBUG create - Created new SQL alias : b1_0
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@45e11627] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 12:58:27 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@bfe47a8] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 12:58:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:58:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 12:58:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 12:58:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 12:58:27 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 12:58:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 12:58:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 12:58:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 12:58:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 12:58:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 12:58:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 12:58:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 12:58:27 DEBUG create - Created new SQL alias : i1_0
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74d22ddd] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@844e66d] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 12:58:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 12:58:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 12:58:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 12:58:27 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 12:58:27 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 12:58:27 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 12:58:27 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 12:58:27 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 12:58:27 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@665522c2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2bf3ec4]
2025-04-23 12:58:27 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 12:58:27 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 12:58:27 DEBUG Table - No alter strings for table : bookings
2025-04-23 12:58:27 DEBUG Table - No alter strings for table : guests
2025-04-23 12:58:27 DEBUG Table - No alter strings for table : invoices
2025-04-23 12:58:27 DEBUG Table - No alter strings for table : rooms
2025-04-23 12:58:27 DEBUG Table - No alter strings for table : users
2025-04-23 12:58:27 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@47be41c6
2025-04-23 12:58:27 DEBUG SessionFactoryRegistry - Registering SessionFactory: 202562cd-920d-416e-a613-16106d86f0c7 (my-persistence-unit)
2025-04-23 12:58:27 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 12:58:27 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 12:58:27 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 12:58:27 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 12:58:27 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 12:58:27 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:58:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 12:58:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 12:58:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 12:58:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 12:58:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 12:58:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 12:58:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:58:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@63344258 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:58:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:58:28 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:58:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 12:58:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1095575585
2025-04-23 12:58:28 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:58:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:58:28 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:58:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:58:28 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:58:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 12:58:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@362b384c
2025-04-23 12:58:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:58:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:58:28 WARN  HomeMenuUI - Invalid login attempt for email: saurav@gmail.com
2025-04-23 12:58:30 WARN  HomeMenuUI - Invalid email format entered: 3
2025-04-23 12:58:40 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:58:40 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1341083542 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:58:40 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:58:40 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 12:58:40 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1573507674
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:58:40 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 12:58:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@686fb58a
2025-04-23 12:58:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:58:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:58:40 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:58:40 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@743171167 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 12:58:40 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:58:40 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 12:58:40 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1299829127
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 12:58:40 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 12:58:40 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 12:58:40 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e63bd6b
2025-04-23 12:58:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:58:40 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:58:40 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 12:58:43 INFO  UserMenuUI - User 13 is booking a room
2025-04-23 12:58:43 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 12:58:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 12:58:43 DEBUG create - Created new SQL alias : r1_0
2025-04-23 12:58:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 12:58:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 12:58:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 12:58:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 12:58:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 12:58:43 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1476482227 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 12:58:43 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1820295244
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 800523009
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 309276344
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1736587634
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 32593740
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 382329720
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 2100827639
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 193456779
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 13080448
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1498179267
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1692817328
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1342257685
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1816583170
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1443288375
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 742288
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 12:58:43 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 12:58:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 12:58:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27682fa9
2025-04-23 12:58:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:58:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 12:58:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:58:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:59:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:59:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 12:59:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 12:59:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:00:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67d68390 is alive
2025-04-23 13:00:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f3e8e51 is alive
2025-04-23 13:00:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47b69ad1 is alive
2025-04-23 13:00:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b9dd7 is alive
2025-04-23 13:00:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33662935 is alive
2025-04-23 13:00:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7283dd42 is alive
2025-04-23 13:00:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f1fb497 is alive
2025-04-23 13:00:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625e134e is alive
2025-04-23 13:00:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65f102a6 is alive
2025-04-23 13:00:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f92d192 is alive
2025-04-23 13:00:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:00:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:00:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:00:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:01:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:01:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:01:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67d68390 is alive
2025-04-23 13:01:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f3e8e51 is alive
2025-04-23 13:01:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:01:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:01:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47b69ad1 is alive
2025-04-23 13:01:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b9dd7 is alive
2025-04-23 13:01:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33662935 is alive
2025-04-23 13:02:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7283dd42 is alive
2025-04-23 13:02:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f1fb497 is alive
2025-04-23 13:02:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625e134e is alive
2025-04-23 13:02:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65f102a6 is alive
2025-04-23 13:02:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f92d192 is alive
2025-04-23 13:02:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:02:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:02:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:02:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:03:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67d68390 is alive
2025-04-23 13:03:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:03:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:03:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f3e8e51 is alive
2025-04-23 13:03:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47b69ad1 is alive
2025-04-23 13:03:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b9dd7 is alive
2025-04-23 13:03:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33662935 is alive
2025-04-23 13:03:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7283dd42 is alive
2025-04-23 13:03:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f1fb497 is alive
2025-04-23 13:03:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625e134e is alive
2025-04-23 13:03:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:03:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:04:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65f102a6 is alive
2025-04-23 13:04:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f92d192 is alive
2025-04-23 13:04:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:04:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:04:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:04:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:05:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67d68390 is alive
2025-04-23 13:05:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f3e8e51 is alive
2025-04-23 13:05:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:05:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:05:29 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 13:05:29 DEBUG TransactionImpl - begin
2025-04-23 13:05:29 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 13:05:29 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 13:05:29 DEBUG results - Initializer list is empty
2025-04-23 13:05:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@b548f51
2025-04-23 13:05:29 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:05:29 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@5b0575d0
2025-04-23 13:05:29 DEBUG TransactionImpl - committing
2025-04-23 13:05:29 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 13:05:29 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 13:05:29 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 13:05:29 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 13:05:29 DEBUG EntityPrinter - Listing entities:
2025-04-23 13:05:29 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-23T12:00:03.195895200, checkOut=2025-04-24T12:00:03.195895200, user=org.example.entity.User#13, bookingId=76, room=org.example.entity.Room#1, status=CONFIRMED}
2025-04-23 13:05:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47b69ad1 is alive
2025-04-23 13:05:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:29 INFO  BookingServiceImpl - Booking created successfully with ID: 76
2025-04-23 13:05:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:05:29 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1220114235 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:05:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:05:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:05:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1413679210
2025-04-23 13:05:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:05:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:05:29 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:05:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:05:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:05:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5740ad76
2025-04-23 13:05:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:29 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 13:05:29 DEBUG TransactionImpl - begin
2025-04-23 13:05:29 DEBUG create - Created new SQL alias : r1_0
2025-04-23 13:05:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 13:05:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 13:05:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 13:05:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:05:29 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1098338771 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:05:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:05:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:05:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1696962359
2025-04-23 13:05:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:05:29 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:05:29 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:05:29 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:05:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:05:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e27bb89
2025-04-23 13:05:29 DEBUG TransactionImpl - committing
2025-04-23 13:05:29 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 13:05:29 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 13:05:29 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 13:05:29 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 13:05:29 DEBUG EntityPrinter - Listing entities:
2025-04-23 13:05:29 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-23 13:05:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:29 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-23 13:05:29 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-23 13:05:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b9dd7 is alive
2025-04-23 13:05:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33662935 is alive
2025-04-23 13:05:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7283dd42 is alive
2025-04-23 13:05:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f1fb497 is alive
2025-04-23 13:05:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625e134e is alive
2025-04-23 13:05:46 INFO  UserMenuUI - Generating invoice for user 13 | Booking ID: 76 | Amount: 2500.0 | Paid: true
2025-04-23 13:05:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:05:46 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@70820563 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1877590088 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@500934560 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)

2025-04-23 13:05:46 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 13:05:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 76
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-23 13:05:46 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 13:05:46 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 13:05:46 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 553039584
2025-04-23 13:05:46 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1741522169
2025-04-23 13:05:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#76] : 1387827678
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-23 13:05:46 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 13:05:46 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 13:05:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#76
2025-04-23 13:05:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42734b71
2025-04-23 13:05:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:05:46 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1894076099 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:05:46 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:05:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:05:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2003467974
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:05:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:05:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d23a5be
2025-04-23 13:05:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:46 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 13:05:46 DEBUG TransactionImpl - begin
2025-04-23 13:05:46 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 13:05:46 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 13:05:46 DEBUG results - Initializer list is empty
2025-04-23 13:05:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@66130c3b
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [0] - [48]
2025-04-23 13:05:46 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@789d8fd6
2025-04-23 13:05:46 DEBUG TransactionImpl - committing
2025-04-23 13:05:46 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 13:05:46 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 13:05:46 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 13:05:46 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 13:05:46 DEBUG EntityPrinter - Listing entities:
2025-04-23 13:05:46 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=org.example.entity.Booking#76, invoiceId=48, issueDate=2025-04-23T13:05:46.186310, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-23 13:05:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:46 INFO  UserMenuUI - Invoice successfully generated: ID 48
2025-04-23 13:05:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:05:46 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1155846026 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1351814143)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@694943195 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1351307120)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@854671988 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-23 13:05:46 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-23 13:05:46 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 48
2025-04-23 13:05:46 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#48] : 108849833
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [2] - [76]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [3] - [2025-04-23T13:05:46.186310]
2025-04-23 13:05:46 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 13:05:46 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#48
2025-04-23 13:05:46 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53a16dd6
2025-04-23 13:05:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:05:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65f102a6 is alive
2025-04-23 13:05:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:05:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:06:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f92d192 is alive
2025-04-23 13:06:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:06:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:06:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67d68390 is alive
2025-04-23 13:06:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:06:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:06:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f3e8e51 is alive
2025-04-23 13:07:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47b69ad1 is alive
2025-04-23 13:07:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b9dd7 is alive
2025-04-23 13:07:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33662935 is alive
2025-04-23 13:07:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7283dd42 is alive
2025-04-23 13:07:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:07:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:07:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f1fb497 is alive
2025-04-23 13:07:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625e134e is alive
2025-04-23 13:07:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65f102a6 is alive
2025-04-23 13:07:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:07:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:08:02 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-23 13:08:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:02 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1711574174 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:08:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1916559238
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:08:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@301e5d23
2025-04-23 13:08:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:02 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-23 13:08:02 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 13:08:02 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:08:02 DEBUG create - Created new SQL alias : b1_0
2025-04-23 13:08:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 13:08:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3186f8f5] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 13:08:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2a341e3d] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:08:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ee02968] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:08:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ee02968] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@2a341e3d
2025-04-23 13:08:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:08:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:08:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 13:08:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 13:08:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 13:08:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:08:02 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1700153115 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@65112445 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@2094728618 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:08:02 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 2019937411
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:08:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:02 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1555521648 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:08:02 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 309135464
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:08:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@753e4eb5
2025-04-23 13:08:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:08:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:08:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:02 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1899272141 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:08:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 506027903
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:08:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b762988
2025-04-23 13:08:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:08:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24f2608b
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 313124964
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:02 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:08:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:08:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:02 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1177522153 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:08:02 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1444494906
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:08:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6cf3b3d7
2025-04-23 13:08:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:08:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24f2608b
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 779639592
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:02 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:02 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:08:02 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:08:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:08:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24f2608b
2025-04-23 13:08:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:02 INFO  UserMenuUI - 1. Booking ID: 76, Status: CONFIRMED, Room Number: 1, Check-in: 2025-04-23T12:00:03, Check-out: 2025-04-24T12:00:03
2025-04-23 13:08:02 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-23 13:08:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f92d192 is alive
2025-04-23 13:08:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:07 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@4524471 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1911619650 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1572619672 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)

2025-04-23 13:08:07 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 13:08:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 76
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-23 13:08:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 13:08:07 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 13:08:07 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 1093181064
2025-04-23 13:08:07 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 2122810288
2025-04-23 13:08:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#76] : 2022543673
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-23 13:08:07 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 13:08:07 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 13:08:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#76
2025-04-23 13:08:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53d2f0ec
2025-04-23 13:08:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:07 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-23 13:08:07 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-23 13:08:07 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:08:07 DEBUG create - Created new SQL alias : i1_0
2025-04-23 13:08:07 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 13:08:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4452e13c] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 13:08:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d964c9e] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 13:08:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42172065] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 13:08:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42172065] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@4452e13c
2025-04-23 13:08:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-23 13:08:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-23 13:08:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-23 13:08:07 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-23 13:08:07 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-23 13:08:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:08:07 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@913711668 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1351307120)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@419394876 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@804661024 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1351814143)

2025-04-23 13:08:07 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [0] - [48]
2025-04-23 13:08:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 48
2025-04-23 13:08:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#48] : 2085073144
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [2] - [76]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [3] - [2025-04-23T13:05:46.186310]
2025-04-23 13:08:07 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 13:08:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#48
2025-04-23 13:08:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b561f51
2025-04-23 13:08:07 INFO  UserMenuUI - Are you sure you want to cancel the booking with ID: 76? (Y/N)
2025-04-23 13:08:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:09 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@989504415 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@2071663688 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1623990497 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)

2025-04-23 13:08:09 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 76
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 1768140989
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1755926104
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#76] : 1232343668
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#76
2025-04-23 13:08:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a49919c
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:09 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1046160944 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@472015917 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1974219375 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)

2025-04-23 13:08:09 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 76
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 460212065
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 256192809
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#76] : 6565574
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#76
2025-04-23 13:08:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@656302c
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 13:08:09 DEBUG TransactionImpl - begin
2025-04-23 13:08:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:09 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1869228744 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1233162869 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1756600221 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)

2025-04-23 13:08:09 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 76
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 1
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#1] : 521114357
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1949363603
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#76] : 591853434
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#1
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 13:08:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#76
2025-04-23 13:08:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bcfdaf3
2025-04-23 13:08:09 DEBUG TransactionImpl - committing
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 13:08:09 DEBUG EntityPrinter - Listing entities:
2025-04-23 13:08:09 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-23 13:08:09 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-23T12:00:03, checkOut=2025-04-24T12:00:03, user=org.example.entity.User#13, bookingId=76, room=org.example.entity.Room#1, status=CANCELLED}
2025-04-23 13:08:09 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-23 13:08:09 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 INFO  UserMenuUI - Attempting to update room availability. Room ID: 1, Availability: true
2025-04-23 13:08:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:09 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@857396971 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:08:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 555019034
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:08:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e514482
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 INFO  RoomServiceImpl - Fetched room with ID 1: Optional[Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}]
2025-04-23 13:08:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:09 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1009195400 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:08:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 559389493
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:08:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25b83dce
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 13:08:09 DEBUG TransactionImpl - begin
2025-04-23 13:08:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:09 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1959627861 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:08:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 567367986
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:08:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3966c679
2025-04-23 13:08:09 DEBUG TransactionImpl - committing
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 13:08:09 DEBUG EntityPrinter - Listing entities:
2025-04-23 13:08:09 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=101, price=2500.0, roomID=1, roomType=SINGLE}
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-23 13:08:09 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=1, roomNumber=101, roomType=SINGLE, price=2500.0, isAvailable=true}
2025-04-23 13:08:09 INFO  UserMenuUI - Room ID: 1 availability successfully updated to: true
2025-04-23 13:08:09 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 13:08:09 DEBUG TransactionImpl - begin
2025-04-23 13:08:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:09 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1722389892 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1351814143)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@960858222 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1351307120)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@309747389 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-23 13:08:09 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 48
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#48] : 571497590
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [2] - [76]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [3] - [2025-04-23T13:05:46.186310]
2025-04-23 13:08:09 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 13:08:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#48
2025-04-23 13:08:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2336d3f
2025-04-23 13:08:09 DEBUG TransactionImpl - committing
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 13:08:09 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 13:08:09 DEBUG EntityPrinter - Listing entities:
2025-04-23 13:08:09 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2500.0, booking=<uninitialized>, invoiceId=48, issueDate=2025-04-23T13:05:46.186310, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-23 13:08:09 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:09 INFO  UserMenuUI - Booking successfully canceled, and room availability updated.
2025-04-23 13:08:12 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 13:08:12 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 13:08:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:12 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1816626863 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:08:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1560607671
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:08:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@da67c46
2025-04-23 13:08:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:08:12 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1551783332 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@128870695 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@2098066214 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:08:12 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 429515253
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:12 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:08:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:12 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@186623267 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:08:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 504672873
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:08:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68543a35
2025-04-23 13:08:12 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:08:12 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:08:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:12 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@483012253 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:08:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1213257323
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:08:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21f479cd
2025-04-23 13:08:12 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:08:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@102fd71d
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 148900866
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:12 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:08:12 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:08:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:12 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1179476219 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:08:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 579103261
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:08:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@fe38c0e
2025-04-23 13:08:12 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:08:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@102fd71d
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1634190383
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:12 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:12 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:08:12 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:08:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:08:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@102fd71d
2025-04-23 13:08:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:12 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CANCELLED
2025-04-23 13:08:12 INFO  UserMenuUI - Displayed booking: ID 76 | Check-in: 2025-04-23T12:00:03 | Check-out: 2025-04-24T12:00:03 | Status: CANCELLED
2025-04-23 13:08:12 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 13:08:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67d68390 is alive
2025-04-23 13:08:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:08:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:08:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f3e8e51 is alive
2025-04-23 13:08:53 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 13:08:53 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 13:08:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:53 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@571267668 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:08:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 417277601
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:08:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c459194
2025-04-23 13:08:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:08:53 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1641587857 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1617280183 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@32400436 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:08:53 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 407034937
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:53 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:08:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:53 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1786758337 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:08:53 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 110932276
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:08:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@125124ea
2025-04-23 13:08:53 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:08:53 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:08:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:53 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@827092873 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:08:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1239291141
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:08:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1bbc1b90
2025-04-23 13:08:53 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:08:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29e3c28
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 1208587475
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:53 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:08:53 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:08:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:08:53 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1900463850 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:08:53 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2105183523
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:08:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3acc65f0
2025-04-23 13:08:53 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:08:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29e3c28
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1508661771
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:08:53 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:08:53 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:08:53 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:08:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:08:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29e3c28
2025-04-23 13:08:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:08:53 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CANCELLED
2025-04-23 13:08:53 INFO  UserMenuUI - Displayed booking: ID 76 | Check-in: 2025-04-23T12:00:03 | Check-out: 2025-04-24T12:00:03 | Status: CANCELLED
2025-04-23 13:08:53 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 13:08:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:08:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:09:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47b69ad1 is alive
2025-04-23 13:09:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b9dd7 is alive
2025-04-23 13:09:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33662935 is alive
2025-04-23 13:09:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7283dd42 is alive
2025-04-23 13:09:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f1fb497 is alive
2025-04-23 13:09:23 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 13:09:23 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 13:09:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:09:23 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@692264801 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:09:23 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1648668612
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:09:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@534d0cfa
2025-04-23 13:09:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:09:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:09:23 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@522189848 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1515079980 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@489940782 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:09:23 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1846735756
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:09:23 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:09:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:09:23 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1813668855 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:09:23 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 189993419
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:09:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34e9de8d
2025-04-23 13:09:23 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:09:23 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:09:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:09:23 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@866710867 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:09:23 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 140733684
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:09:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c9512c6
2025-04-23 13:09:23 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:09:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f65af91
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 460971859
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:09:23 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:09:23 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:09:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:09:23 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@149820420 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:09:23 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1804911104
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:09:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1322b542
2025-04-23 13:09:23 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:09:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f65af91
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 111768855
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:09:23 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:09:23 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:09:23 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:09:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:09:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f65af91
2025-04-23 13:09:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:09:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:09:23 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CANCELLED
2025-04-23 13:09:23 INFO  UserMenuUI - Displayed booking: ID 76 | Check-in: 2025-04-23T12:00:03 | Check-out: 2025-04-24T12:00:03 | Status: CANCELLED
2025-04-23 13:09:23 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 13:09:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625e134e is alive
2025-04-23 13:09:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:09:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:09:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65f102a6 is alive
2025-04-23 13:09:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:09:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:10:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f92d192 is alive
2025-04-23 13:10:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67d68390 is alive
2025-04-23 13:10:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f3e8e51 is alive
2025-04-23 13:10:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:10:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:10:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47b69ad1 is alive
2025-04-23 13:10:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b9dd7 is alive
2025-04-23 13:10:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33662935 is alive
2025-04-23 13:10:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:10:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:10:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7283dd42 is alive
2025-04-23 13:11:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f1fb497 is alive
2025-04-23 13:11:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625e134e is alive
2025-04-23 13:11:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:11:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:11:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65f102a6 is alive
2025-04-23 13:11:36 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 13:11:36 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 13:11:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:11:36 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@676022399 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:11:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 776006216
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:11:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cba474f
2025-04-23 13:11:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:11:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:11:36 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@688924887 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@726226084 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@49477935 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:11:36 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1352773510
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:11:36 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:11:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:11:36 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1040394205 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:11:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1860273907
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:11:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49fb693d
2025-04-23 13:11:36 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:11:36 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:11:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:11:36 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@941194882 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:11:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1975880178
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:11:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6db04a6
2025-04-23 13:11:36 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:11:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f374de
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 1114182596
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:11:36 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:11:36 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:11:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:11:36 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@465213538 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:11:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1545688642
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:11:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1317ac2c
2025-04-23 13:11:36 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:11:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f374de
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 68600240
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:11:36 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:11:36 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:11:36 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:11:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:11:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8f374de
2025-04-23 13:11:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:11:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:11:36 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CANCELLED
2025-04-23 13:11:36 INFO  UserMenuUI - Displayed booking: ID 76 | Check-in: 2025-04-23T12:00:03 | Check-out: 2025-04-24T12:00:03 | Status: CANCELLED
2025-04-23 13:11:36 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 13:11:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67d68390 is alive
2025-04-23 13:11:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:11:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:11:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f92d192 is alive
2025-04-23 13:12:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f3e8e51 is alive
2025-04-23 13:12:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:12:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:12:30 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 13:12:30 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 13:12:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:12:30 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@909878836 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:12:30 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2089779261
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:12:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@176e839e
2025-04-23 13:12:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:12:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:12:30 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@78384457 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@2087366743 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@2095335823 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:12:30 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1385576505
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:12:30 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:12:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:12:30 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@216054741 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:12:30 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 520171591
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:12:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16361e61
2025-04-23 13:12:30 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:12:30 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:12:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:12:30 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1364618464 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:12:30 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 830804464
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:12:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53564a4c
2025-04-23 13:12:30 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:12:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b6c0b7c
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 1528762150
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:12:30 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:12:30 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:12:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:12:30 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1897978534 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:12:30 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1153624232
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:12:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3340ff7c
2025-04-23 13:12:30 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:12:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b6c0b7c
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 70140977
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:12:30 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:12:30 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:12:30 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:12:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:12:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b6c0b7c
2025-04-23 13:12:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:12:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:12:30 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CANCELLED
2025-04-23 13:12:30 INFO  UserMenuUI - Displayed booking: ID 76 | Check-in: 2025-04-23T12:00:03 | Check-out: 2025-04-24T12:00:03 | Status: CANCELLED
2025-04-23 13:12:30 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 13:12:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47b69ad1 is alive
2025-04-23 13:12:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8b9dd7 is alive
2025-04-23 13:12:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33662935 is alive
2025-04-23 13:12:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7283dd42 is alive
2025-04-23 13:12:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f1fb497 is alive
2025-04-23 13:12:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:12:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:13:02 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 13:13:02 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 13:13:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:13:02 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1578732608 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:13:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1337710988
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:13:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dd227b7
2025-04-23 13:13:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:13:02 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1027310894 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1546957042)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@347766549 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@88950472)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@89961399 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:13:02 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1871293699
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:13:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:13:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:13:02 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@254310990 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:13:02 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1402043538
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:13:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1fa796a4
2025-04-23 13:13:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:13:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:13:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:13:02 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1759413538 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:13:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1942002328
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:13:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f2bf657
2025-04-23 13:13:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:13:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27d6467
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 1542567208
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:13:02 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:13:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:13:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:13:02 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@747827348 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:13:02 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 595755231
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:13:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@182fd26b
2025-04-23 13:13:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:13:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27d6467
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1572937899
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:13:02 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:13:02 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:13:02 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:13:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:13:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27d6467
2025-04-23 13:13:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:02 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CANCELLED
2025-04-23 13:13:02 INFO  UserMenuUI - Displayed booking: ID 76 | Check-in: 2025-04-23T12:00:03 | Check-out: 2025-04-24T12:00:03 | Status: CANCELLED
2025-04-23 13:13:02 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 13:13:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625e134e is alive
2025-04-23 13:13:24 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 13:13:24 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 13:13:24 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 13:13:24 DEBUG HikariConfig - autoCommit......................true
2025-04-23 13:13:24 DEBUG HikariConfig - catalog.........................none
2025-04-23 13:13:24 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 13:13:24 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 13:13:24 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 13:13:24 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-23 13:13:24 DEBUG HikariConfig - dataSource......................none
2025-04-23 13:13:24 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 13:13:24 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 13:13:24 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 13:13:24 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 13:13:24 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 13:13:24 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 13:13:24 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 13:13:24 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 13:13:24 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 13:13:24 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 13:13:24 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 13:13:24 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 13:13:24 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 13:13:24 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 13:13:24 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 13:13:24 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 13:13:24 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 13:13:24 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 13:13:24 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 13:13:24 DEBUG HikariConfig - password........................<masked>
2025-04-23 13:13:24 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 13:13:24 DEBUG HikariConfig - readOnly........................false
2025-04-23 13:13:24 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 13:13:24 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 13:13:24 DEBUG HikariConfig - schema..........................none
2025-04-23 13:13:24 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 13:13:24 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 13:13:24 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 13:13:24 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 13:13:24 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2680837a-8e01-4878-a42e-86e117fc1882)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (2680837a-8e01-4878-a42e-86e117fc1882)
2025-04-23 13:13:24 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c1156a7
2025-04-23 13:13:24 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 13:13:24 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 13:13:24 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 13:13:24 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 13:13:24 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 13:13:24 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 13:13:24 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7ece028b-98f2-4ecc-b951-1d68e0fd59e3)
2025-04-23 13:13:24 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 13:13:24 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 13:13:24 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (7ece028b-98f2-4ecc-b951-1d68e0fd59e3)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4541df9b
2025-04-23 13:13:24 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e8c184f3-93ca-4b8a-a1ae-47350bac98cb)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (e8c184f3-93ca-4b8a-a1ae-47350bac98cb)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4fb9b4eb
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (402b488c-51ae-45fc-93ab-e6486a3b0b8d)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70d2e40b
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-23 13:13:24 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@344344fa] into BootstrapContext; was [null]
2025-04-23 13:13:24 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2db2cd5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa]
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (402b488c-51ae-45fc-93ab-e6486a3b0b8d)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@abb2378
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (67791cc2-35b4-4159-8a30-fdb8e1faa768)
2025-04-23 13:13:24 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 13:13:24 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (67791cc2-35b4-4159-8a30-fdb8e1faa768)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@414d88b3
2025-04-23 13:13:24 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (44e6edf8-8e0b-4def-9f14-2c2123408e85)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (44e6edf8-8e0b-4def-9f14-2c2123408e85)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b7b6de8
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (576348b1-b20b-4892-864b-ef6a7db06f78)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (576348b1-b20b-4892-864b-ef6a7db06f78)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39679880
2025-04-23 13:13:24 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 13:13:24 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 13:13:24 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e67c8a7a-24a1-46f0-91f6-fa1de28dbee9)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (e67c8a7a-24a1-46f0-91f6-fa1de28dbee9)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6a94dc37
2025-04-23 13:13:24 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2e76aa76-c367-435b-bd4c-98d9117c6f8e)
2025-04-23 13:13:24 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 13:13:24 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (2e76aa76-c367-435b-bd4c-98d9117c6f8e)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4731c9c6
2025-04-23 13:13:24 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f0cb5a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1b29d52b)
2025-04-23 13:13:24 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47547132) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@655523dd)
2025-04-23 13:13:24 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 13:13:24 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@41200e0c`
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 13:13:24 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e3de5cf4-7b8f-4e90-b53f-c3812d8fd94c)
2025-04-23 13:13:24 DEBUG PoolBase - HikariPool-1 - Established new connection (e3de5cf4-7b8f-4e90-b53f-c3812d8fd94c)
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@27c5e8e5
2025-04-23 13:13:24 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 13:13:24 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21f8e55f]
2025-04-23 13:13:24 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:13:25 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 13:13:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 13:13:25 DEBUG EntityBinder - Import with entity name User
2025-04-23 13:13:25 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property userID
2025-04-23 13:13:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property email
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property isActive
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property name
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property password
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property userRole
2025-04-23 13:13:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 13:13:25 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 13:13:25 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property guestId
2025-04-23 13:13:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property age
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property name
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property user
2025-04-23 13:13:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 13:13:25 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 13:13:25 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property bookingId
2025-04-23 13:13:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property checkIn
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property checkOut
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property room
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property status
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property user
2025-04-23 13:13:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 13:13:25 DEBUG EntityBinder - Import with entity name Room
2025-04-23 13:13:25 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property roomID
2025-04-23 13:13:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property price
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property roomType
2025-04-23 13:13:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 13:13:25 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 13:13:25 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 13:13:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property amount
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property booking
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property issueDate
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 13:13:25 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 13:13:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 13:13:25 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 13:13:25 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 13:13:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:13:25 DEBUG PropertyBinder - Building property user
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 13:13:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 13:13:25 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 13:13:25 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 13:13:25 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 13:13:25 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 13:13:25 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 13:13:25 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 13:13:25 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 13:13:25 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1e0fdb2f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-23 13:13:25 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@21263314] under count; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5b88b8e] under every; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@58253c57] under any; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133] under sinh; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@430b2699] under cosh; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67536ae0] under tanh; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6413d7e7] under pi; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d16be4f] under log; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7112ce6] under position; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f3560d4] under overlay; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6088451e] under trim; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1163a27] under cast; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549] under collate; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@b0fd744] under extract; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@726934e2] under ifnull; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@798dad3d] under pad; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7d986d83] under str; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@78422efb] under format; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@d48e998] under timestampadd; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7885776b] under timestampdiff; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a3ed300] under current_date; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1984212d] under current_time; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39f5b723] under current_timestamp; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4eaa375c] under local_date; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2404b5a] under local_time; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3af58f76] under local_datetime; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2ead6ba4] under offset_datetime; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31a2a9fa] under instant; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@46dcbeab] under sql; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d16be4f
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36e43829] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67536ae0
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45658133
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@430b2699
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6413d7e7
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@6af90849] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2404b5a
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3af58f76
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4a44cfc0] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60e3c26e] under bit_length; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@80b122b] under octet_length; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@999b951] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7112ce6
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65cf4d6d] under bitand; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b410308] under bitor; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001] under bitxor; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f9cab00] under bitnot; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10272bbb] under median; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under insert; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@32eae6f2] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f3560d4
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@26ca61bf] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6870c3c2] under listagg; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5d94a2dc] under array; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@cedee22] under array_list; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@40c2ce52] under array_agg; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@2b6a0ea9] under array_position; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@659f226a] under array_positions; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1e79d43] under array_positions_list; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@343e225a] under array_length; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@25a7fedf] under array_concat; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@65f40689] under array_prepend; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@29be997f] under array_append; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@46e190ed] under array_contains; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@383c3eb3] under array_contains_nullable; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@54c622a7] under array_overlaps; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@37348491] under array_overlaps_nullable; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66813e6e] under array_get; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@640cc04b] under array_set; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@6723610b] under array_remove_index; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ba03c82] under array_slice; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60df7989] under array_trim; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2d74c81b] under array_fill; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@10b687f2] under array_fill_list; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@991cbde] under array_to_string; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@568750b7] under mode; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3e28fee1] under percentile_cont; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16a2ed51] under percentile_disc; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2fb25f4c] under rank; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@de81be1] under dense_rank; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@342e690b] under percent_rank; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4519f676] under cume_dist; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@781711b7] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@642a16aa] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642ee49c] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b0bd001
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4e224df5] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4116f66a] under trunc; prior registration was null
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 13:13:25 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59c04bee] under date_trunc; prior registration was null
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 13:13:25 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 13:13:25 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 13:13:25 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 13:13:25 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 13:13:25 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:13:25 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 13:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 13:13:25 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 13:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 13:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:13:25 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 13:13:25 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 13:13:25 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 13:13:26 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 13:13:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 13:13:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 13:13:26 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 13:13:26 DEBUG creation - Starting post-init callbacks
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 13:13:26 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 13:13:26 DEBUG create - Created new SQL alias : g1_0
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16d41725] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 13:13:26 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:13:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 13:13:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 13:13:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 13:13:26 DEBUG create - Created new SQL alias : b1_0
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@684372d0] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 13:13:26 DEBUG create - Created new SQL alias : r1_0
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6060146b] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:13:26 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:13:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 13:13:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 13:13:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 13:13:26 DEBUG create - Created new SQL alias : r1_0
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 13:13:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 13:13:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 13:13:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 13:13:26 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 13:13:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 13:13:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 13:13:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 13:13:26 DEBUG create - Created new SQL alias : i1_0
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d2d8846] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b409a79] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 13:13:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 13:13:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 13:13:26 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 13:13:26 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 13:13:26 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 13:13:26 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 13:13:26 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 13:13:26 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 13:13:26 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@19bfbe28]
2025-04-23 13:13:26 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 13:13:26 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 13:13:26 DEBUG Table - No alter strings for table : bookings
2025-04-23 13:13:26 DEBUG Table - No alter strings for table : guests
2025-04-23 13:13:26 DEBUG Table - No alter strings for table : invoices
2025-04-23 13:13:26 DEBUG Table - No alter strings for table : rooms
2025-04-23 13:13:26 DEBUG Table - No alter strings for table : users
2025-04-23 13:13:26 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7185e611
2025-04-23 13:13:26 DEBUG SessionFactoryRegistry - Registering SessionFactory: 2dd74019-203e-488c-9dc4-888705d095b7 (my-persistence-unit)
2025-04-23 13:13:26 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 13:13:26 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 13:13:26 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 13:13:26 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 13:13:26 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 13:13:26 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:13:26 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:13:26 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 13:13:26 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 13:13:26 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 13:13:26 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 13:13:26 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 13:13:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:13:26 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@613764738 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:13:26 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 13:13:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 13:13:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1276530561
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:13:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 13:13:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@774304ca
2025-04-23 13:13:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:26 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:13:26 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2013611768 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:13:26 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 13:13:26 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 13:13:26 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 287096026
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:13:26 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:13:26 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 13:13:26 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@437c1a87
2025-04-23 13:13:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:26 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:26 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 13:13:27 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 13:13:27 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 13:13:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:13:27 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@879042661 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:13:27 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1475814840
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:13:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a0c512b
2025-04-23 13:13:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:27 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-23 13:13:27 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 13:13:27 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:13:27 DEBUG create - Created new SQL alias : b1_0
2025-04-23 13:13:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 13:13:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d5ea776] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 13:13:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fef5792] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:13:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@39004e4f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:13:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@39004e4f] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@4fef5792
2025-04-23 13:13:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:13:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:13:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 13:13:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 13:13:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 13:13:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:13:27 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1138692983 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@485375493)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1676857380 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2066600797)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1079124964 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:13:27 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1300570879
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:13:27 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:13:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:13:27 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1567441485 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:13:27 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1321433666
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:13:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42b500aa
2025-04-23 13:13:27 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:13:27 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:13:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:13:27 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1693900057 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:13:27 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 773511134
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:13:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c56c911
2025-04-23 13:13:27 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:13:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7305cfb1
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 1479286669
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:13:27 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:13:27 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:13:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:13:27 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@570408974 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:13:27 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1730406067
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:13:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3883b5e9
2025-04-23 13:13:27 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:13:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7305cfb1
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1639893967
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:13:27 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:13:27 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:13:27 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:13:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:13:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7305cfb1
2025-04-23 13:13:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:13:27 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CANCELLED
2025-04-23 13:13:27 INFO  UserMenuUI - Displayed booking: ID 76 | Check-in: 2025-04-23T12:00:03 | Check-out: 2025-04-24T12:00:03 | Status: CANCELLED
2025-04-23 13:13:27 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 13:13:54 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:13:54 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:14:18 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 13:14:18 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 13:14:18 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 13:14:18 DEBUG HikariConfig - autoCommit......................true
2025-04-23 13:14:18 DEBUG HikariConfig - catalog.........................none
2025-04-23 13:14:18 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 13:14:18 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 13:14:18 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 13:14:18 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@5d5f10b2
2025-04-23 13:14:18 DEBUG HikariConfig - dataSource......................none
2025-04-23 13:14:18 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 13:14:18 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 13:14:18 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 13:14:18 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 13:14:18 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 13:14:18 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 13:14:18 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 13:14:18 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 13:14:18 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 13:14:18 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 13:14:18 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 13:14:18 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 13:14:18 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 13:14:18 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 13:14:18 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 13:14:18 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 13:14:18 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 13:14:18 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 13:14:18 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 13:14:18 DEBUG HikariConfig - password........................<masked>
2025-04-23 13:14:18 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 13:14:18 DEBUG HikariConfig - readOnly........................false
2025-04-23 13:14:18 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 13:14:18 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 13:14:18 DEBUG HikariConfig - schema..........................none
2025-04-23 13:14:18 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 13:14:18 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 13:14:18 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 13:14:18 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 13:14:18 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 13:14:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d2115b7c-828c-470c-97a4-6582d4e9e153)
2025-04-23 13:14:18 DEBUG PoolBase - HikariPool-1 - Established new connection (d2115b7c-828c-470c-97a4-6582d4e9e153)
2025-04-23 13:14:18 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36b0fcd5
2025-04-23 13:14:18 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 13:14:18 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 13:14:18 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 13:14:18 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 13:14:18 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 13:14:18 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 13:14:18 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 13:14:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 13:14:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bcf29277-7786-452b-9b72-f04ef93b26cb)
2025-04-23 13:14:18 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 13:14:18 DEBUG PoolBase - HikariPool-1 - Established new connection (bcf29277-7786-452b-9b72-f04ef93b26cb)
2025-04-23 13:14:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@26721ea0
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 13:14:18 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 13:14:18 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 13:14:18 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 13:14:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 13:14:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d9f3b469-582a-42c5-a49d-081bc1dc5d0d)
2025-04-23 13:14:18 DEBUG PoolBase - HikariPool-1 - Established new connection (d9f3b469-582a-42c5-a49d-081bc1dc5d0d)
2025-04-23 13:14:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6468f316
2025-04-23 13:14:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 13:14:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b7124fe7-4efc-4775-9a49-1be555b0d69e)
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@66908383
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@66908383
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 13:14:18 DEBUG PoolBase - HikariPool-1 - Established new connection (b7124fe7-4efc-4775-9a49-1be555b0d69e)
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-23 13:14:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5cbf659a
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@710d7aff
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@710d7aff
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3e134896
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-23 13:14:18 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-23 13:14:18 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2e52fb3e] into BootstrapContext; was [null]
2025-04-23 13:14:18 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@16fe9c29] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e9803c2]
2025-04-23 13:14:18 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 13:14:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c2caa7c3-3598-4f7b-aeb9-831910159eeb)
2025-04-23 13:14:19 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Established new connection (c2caa7c3-3598-4f7b-aeb9-831910159eeb)
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@371e44
2025-04-23 13:14:19 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f03b6c70-2c62-4553-bb08-f2ec999fb69e)
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Established new connection (f03b6c70-2c62-4553-bb08-f2ec999fb69e)
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@31a798a4
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (822e2170-6747-493a-8125-a4843c1d5b9e)
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Established new connection (822e2170-6747-493a-8125-a4843c1d5b9e)
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6cddb737
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0d76c2f8-480e-4b07-a839-49fef358e79f)
2025-04-23 13:14:19 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 13:14:19 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 13:14:19 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Established new connection (0d76c2f8-480e-4b07-a839-49fef358e79f)
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f0a2cd2
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (17efbc18-6991-4fe5-91a3-9edbd372a494)
2025-04-23 13:14:19 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 13:14:19 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Established new connection (17efbc18-6991-4fe5-91a3-9edbd372a494)
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e8710be
2025-04-23 13:14:19 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 13:14:19 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@71ad3d8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@47af099e)
2025-04-23 13:14:19 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@700f518a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b835727)
2025-04-23 13:14:19 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 13:14:19 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ccb06c29-dbc8-40d5-8205-0425cc545267)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@42714a7
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@42714a7
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@710d7aff`
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 13:14:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 13:14:19 DEBUG PoolBase - HikariPool-1 - Established new connection (ccb06c29-dbc8-40d5-8205-0425cc545267)
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c9820a2
2025-04-23 13:14:19 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 13:14:19 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67efd2c2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71d9cb05]
2025-04-23 13:14:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:14:19 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 13:14:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 13:14:19 DEBUG EntityBinder - Import with entity name User
2025-04-23 13:14:19 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property userID
2025-04-23 13:14:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property email
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property isActive
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property name
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property password
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property userRole
2025-04-23 13:14:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 13:14:19 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 13:14:19 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property guestId
2025-04-23 13:14:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property age
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property name
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property user
2025-04-23 13:14:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 13:14:19 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 13:14:19 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property bookingId
2025-04-23 13:14:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property checkIn
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property checkOut
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property room
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property status
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property user
2025-04-23 13:14:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 13:14:19 DEBUG EntityBinder - Import with entity name Room
2025-04-23 13:14:19 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property roomID
2025-04-23 13:14:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property price
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property roomType
2025-04-23 13:14:19 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 13:14:19 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 13:14:19 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 13:14:19 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property amount
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property booking
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property issueDate
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 13:14:19 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 13:14:19 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 13:14:19 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 13:14:19 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 13:14:19 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:14:19 DEBUG PropertyBinder - Building property user
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 13:14:19 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 13:14:19 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 13:14:19 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 13:14:19 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 13:14:19 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 13:14:19 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 13:14:19 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 13:14:19 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 13:14:19 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 13:14:19 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@39666e42, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-23 13:14:19 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6fe595dc] under count; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@766a52f5] under every; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4342c13] under any; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4998e74b] under sinh; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d878b25] under cosh; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49] under tanh; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47] under pi; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba] under log; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@704067c6] under position; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1e54a6b1] under overlay; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4e245739] under trim; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1c34365c] under cast; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@348137e8] under collate; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@60f77af] under extract; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3fe512d2] under ifnull; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@11381415] under pad; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@38d80d65] under str; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3cc79c02] under format; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6b4125ed] under timestampadd; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@483f286e] under timestampdiff; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59a2388e] under current_date; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@186d8a71] under current_time; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under current_timestamp; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under local_date; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under local_time; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under local_datetime; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cde8c6c] under offset_datetime; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@174721c4] under instant; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@648c5fb3] under sql; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47b33e07] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4998e74b
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d878b25
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@4d705112] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6518fdfd
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@11d2dd2d
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2d5a1588] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4f116ca2] under bit_length; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@125d47c4] under octet_length; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@193bb809] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@704067c6
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b018f3] under bitand; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under bitor; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under bitxor; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2] under bitnot; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805] under median; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5809fa26] under insert; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7e8279e5] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1e54a6b1
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2b53840a] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@62b475e2] under listagg; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@523a7801] under array; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@718fd7c1] under array_list; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@411cd156] under array_agg; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@37a0ec3c] under array_position; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@2efd2f21] under array_positions; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5bcec67e] under array_positions_list; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2dafae61] under array_length; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7069f076] under array_concat; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7ecda95b] under array_prepend; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@22da2fe6] under array_append; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@2eda4eeb] under array_contains; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5ba90d8a] under array_contains_nullable; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@40c06358] under array_overlaps; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@66e21568] under array_overlaps_nullable; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@543d5863] under array_get; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@40ce9049] under array_set; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@5d05f453] under array_remove_index; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5efeb117] under array_slice; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@160b4809] under array_trim; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@7da635c0] under array_fill; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@2ed9f6f8] under array_fill_list; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@182e7eda] under array_to_string; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@19b02dfd] under mode; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3dce6dd8] under percentile_cont; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69f2cb04] under percentile_disc; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3a7c678b] under rank; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@28babeca] under dense_rank; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ad9b8d3] under percent_rank; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@168ad26f] under cume_dist; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@25b38203] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@778a1250] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55acec99] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@4d464510] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@623e0631] under trunc; prior registration was null
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 13:14:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@359066bc] under date_trunc; prior registration was null
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 13:14:20 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 13:14:20 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 13:14:20 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 13:14:20 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 13:14:20 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:14:20 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 13:14:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 13:14:20 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:14:20 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:14:20 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:14:20 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:14:20 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 13:14:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 13:14:20 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:14:20 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 13:14:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 13:14:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 13:14:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 13:14:20 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 13:14:20 DEBUG creation - Starting post-init callbacks
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 13:14:20 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 13:14:20 DEBUG create - Created new SQL alias : g1_0
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@faec277] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 13:14:20 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:14:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 13:14:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 13:14:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 13:14:20 DEBUG create - Created new SQL alias : b1_0
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a2724d3] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 13:14:20 DEBUG create - Created new SQL alias : r1_0
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@266da047] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:14:20 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:14:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 13:14:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 13:14:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 13:14:20 DEBUG create - Created new SQL alias : r1_0
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 13:14:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 13:14:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 13:14:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 13:14:20 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 13:14:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 13:14:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 13:14:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 13:14:20 DEBUG create - Created new SQL alias : i1_0
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74eec640] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 13:14:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5c8ab9de] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 13:14:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 13:14:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 13:14:20 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 13:14:20 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 13:14:20 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 13:14:20 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 13:14:20 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 13:14:20 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 13:14:20 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67efd2c2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@71b0289b]
2025-04-23 13:14:20 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 13:14:20 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 13:14:20 DEBUG Table - No alter strings for table : bookings
2025-04-23 13:14:20 DEBUG Table - No alter strings for table : guests
2025-04-23 13:14:20 DEBUG Table - No alter strings for table : invoices
2025-04-23 13:14:20 DEBUG Table - No alter strings for table : rooms
2025-04-23 13:14:20 DEBUG Table - No alter strings for table : users
2025-04-23 13:14:20 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@44a93f8a
2025-04-23 13:14:20 DEBUG SessionFactoryRegistry - Registering SessionFactory: dd53277e-f78d-49e6-9e93-66c016677a03 (my-persistence-unit)
2025-04-23 13:14:20 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 13:14:20 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 13:14:21 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 13:14:21 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 13:14:21 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 13:14:21 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:14:21 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:14:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 13:14:21 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 13:14:21 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 13:14:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 13:14:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 13:14:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:14:21 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1138663369 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:14:21 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 13:14:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 13:14:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 721720488
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:14:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 13:14:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@516037be
2025-04-23 13:14:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:14:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:14:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:14:21 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@538325000 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:14:21 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 13:14:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 13:14:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1061181070
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:14:21 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:14:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 13:14:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e47a71e
2025-04-23 13:14:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:14:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:14:21 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 13:14:24 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 13:14:24 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 13:14:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:14:24 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@766302874 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:14:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1090446425
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:14:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@bcd9ed6
2025-04-23 13:14:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:14:24 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-23 13:14:24 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 13:14:24 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:14:24 DEBUG create - Created new SQL alias : b1_0
2025-04-23 13:14:24 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 13:14:24 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e89f5bc] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 13:14:24 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@576b385d] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:14:24 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@fabfc79] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:14:24 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@fabfc79] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@576b385d
2025-04-23 13:14:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:14:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:14:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 13:14:24 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 13:14:24 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 13:14:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:14:24 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1974317504 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1560160481)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@2059996587 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1087598842)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1483270801 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:14:24 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 484801467
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:14:24 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:14:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:14:24 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@112176935 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:14:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1655630081
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:14:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44948ac6
2025-04-23 13:14:24 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:14:24 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:14:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:14:24 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1002690318 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:14:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1169606246
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:14:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@60e80279
2025-04-23 13:14:24 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:14:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@402feb85
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 349517956
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:14:24 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:14:24 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:14:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:14:24 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1452056289 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:14:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1631805946
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:14:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@538a90a5
2025-04-23 13:14:24 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:14:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@402feb85
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1960131939
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:14:24 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:14:24 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:14:24 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:14:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:14:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@402feb85
2025-04-23 13:14:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:14:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:14:24 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CANCELLED
2025-04-23 13:14:24 INFO  UserMenuUI - Displayed booking: ID 76 | Check-in: 2025-04-23T12:00:03 | Check-out: 2025-04-24T12:00:03 | Status: CANCELLED
2025-04-23 13:14:24 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 13:14:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:14:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:15:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:15:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:15:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:15:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:15:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cbf659a is alive
2025-04-23 13:15:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31a798a4 is alive
2025-04-23 13:16:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36b0fcd5 is alive
2025-04-23 13:16:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6468f316 is alive
2025-04-23 13:16:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@26721ea0 is alive
2025-04-23 13:16:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c9820a2 is alive
2025-04-23 13:16:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f0a2cd2 is alive
2025-04-23 13:16:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6cddb737 is alive
2025-04-23 13:16:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e8710be is alive
2025-04-23 13:16:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@371e44 is alive
2025-04-23 13:16:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:16:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:16:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:16:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:17:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:17:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:17:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cbf659a is alive
2025-04-23 13:17:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31a798a4 is alive
2025-04-23 13:17:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36b0fcd5 is alive
2025-04-23 13:17:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:17:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:17:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6468f316 is alive
2025-04-23 13:17:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@26721ea0 is alive
2025-04-23 13:17:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c9820a2 is alive
2025-04-23 13:17:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f0a2cd2 is alive
2025-04-23 13:18:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6cddb737 is alive
2025-04-23 13:18:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e8710be is alive
2025-04-23 13:18:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@371e44 is alive
2025-04-23 13:18:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:18:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:18:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:18:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:19:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:19:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:19:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cbf659a is alive
2025-04-23 13:19:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31a798a4 is alive
2025-04-23 13:19:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36b0fcd5 is alive
2025-04-23 13:19:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6468f316 is alive
2025-04-23 13:19:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c9820a2 is alive
2025-04-23 13:19:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@26721ea0 is alive
2025-04-23 13:19:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f0a2cd2 is alive
2025-04-23 13:19:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:19:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:19:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6cddb737 is alive
2025-04-23 13:19:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e8710be is alive
2025-04-23 13:20:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@371e44 is alive
2025-04-23 13:20:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:20:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:20:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:20:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:21:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cbf659a is alive
2025-04-23 13:21:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31a798a4 is alive
2025-04-23 13:21:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@36b0fcd5 is alive
2025-04-23 13:21:18 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:21:18 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:21:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6468f316 is alive
2025-04-23 13:21:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c9820a2 is alive
2025-04-23 13:21:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@26721ea0 is alive
2025-04-23 13:21:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f0a2cd2 is alive
2025-04-23 13:21:48 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:21:48 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:21:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6cddb737 is alive
2025-04-23 13:21:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e8710be is alive
2025-04-23 13:22:24 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 13:22:24 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 13:22:24 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 13:22:24 DEBUG HikariConfig - autoCommit......................true
2025-04-23 13:22:24 DEBUG HikariConfig - catalog.........................none
2025-04-23 13:22:24 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 13:22:24 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 13:22:24 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 13:22:24 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-23 13:22:24 DEBUG HikariConfig - dataSource......................none
2025-04-23 13:22:24 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 13:22:24 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 13:22:24 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 13:22:24 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 13:22:24 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 13:22:24 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 13:22:24 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 13:22:24 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 13:22:24 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 13:22:24 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 13:22:24 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 13:22:24 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 13:22:24 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 13:22:24 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 13:22:24 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 13:22:24 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 13:22:24 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 13:22:24 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 13:22:24 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 13:22:24 DEBUG HikariConfig - password........................<masked>
2025-04-23 13:22:24 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 13:22:24 DEBUG HikariConfig - readOnly........................false
2025-04-23 13:22:24 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 13:22:24 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 13:22:24 DEBUG HikariConfig - schema..........................none
2025-04-23 13:22:24 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 13:22:24 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 13:22:24 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 13:22:24 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 13:22:24 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 13:22:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7c0bcf22-ba6a-4e40-b9e3-6a71533b516f)
2025-04-23 13:22:24 DEBUG PoolBase - HikariPool-1 - Established new connection (7c0bcf22-ba6a-4e40-b9e3-6a71533b516f)
2025-04-23 13:22:24 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4eed46ee
2025-04-23 13:22:24 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 13:22:24 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 13:22:24 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 13:22:25 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 13:22:25 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cebbd12b-ec79-411c-a074-c0522dd932e4)
2025-04-23 13:22:25 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 13:22:25 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (cebbd12b-ec79-411c-a074-c0522dd932e4)
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6334d8f
2025-04-23 13:22:25 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 13:22:25 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b9999cd5-b373-4e01-8b94-e2c59e2fa828)
2025-04-23 13:22:25 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 13:22:25 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (b9999cd5-b373-4e01-8b94-e2c59e2fa828)
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6efbb23b
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cb33e11e-4be1-48a0-8f74-d57a1327b1d8)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (cb33e11e-4be1-48a0-8f74-d57a1327b1d8)
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@462624a1
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1a7fb6bf-74d1-4070-9ce8-3194abc01331)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a714237
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-23 13:22:25 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b9c1b51] into BootstrapContext; was [null]
2025-04-23 13:22:25 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e52fb3e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@16fe9c29]
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (1a7fb6bf-74d1-4070-9ce8-3194abc01331)
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@334ebfaf
2025-04-23 13:22:25 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 13:22:25 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 13:22:25 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (577c2ff7-7ff8-44d9-b7b0-5eda38f4a073)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (577c2ff7-7ff8-44d9-b7b0-5eda38f4a073)
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68c6807f
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b2b112a7-8f67-4c1d-b9ad-2c697411f455)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (b2b112a7-8f67-4c1d-b9ad-2c697411f455)
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3668ca51
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9d020fd4-1815-4b62-b8a6-756949c2bcec)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (9d020fd4-1815-4b62-b8a6-756949c2bcec)
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c252e3a
2025-04-23 13:22:25 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 13:22:25 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 13:22:25 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df540fc5-8f37-48b7-bf88-297ee040481f)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (df540fc5-8f37-48b7-bf88-297ee040481f)
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2afd4e29
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (14e38af3-1849-443e-99dd-9465b942678b)
2025-04-23 13:22:25 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 13:22:25 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 13:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (14e38af3-1849-443e-99dd-9465b942678b)
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@38ca23e2
2025-04-23 13:22:25 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 13:22:25 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10cd6753) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@71ad3d8a)
2025-04-23 13:22:25 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47af099e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@700f518a)
2025-04-23 13:22:25 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 13:22:25 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 13:22:25 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7a389761
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a389761
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@466d49f0`
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 13:22:25 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 13:22:25 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 13:22:25 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec6a3d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67efd2c2]
2025-04-23 13:22:25 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 13:22:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 13:22:25 DEBUG EntityBinder - Import with entity name User
2025-04-23 13:22:25 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property userID
2025-04-23 13:22:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property email
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property isActive
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property name
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property password
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property userRole
2025-04-23 13:22:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 13:22:25 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 13:22:25 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property guestId
2025-04-23 13:22:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property age
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property name
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property user
2025-04-23 13:22:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 13:22:25 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 13:22:25 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property bookingId
2025-04-23 13:22:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property checkIn
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property checkOut
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property room
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property status
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property user
2025-04-23 13:22:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 13:22:25 DEBUG EntityBinder - Import with entity name Room
2025-04-23 13:22:25 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property roomID
2025-04-23 13:22:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property price
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property roomType
2025-04-23 13:22:25 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 13:22:25 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 13:22:25 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 13:22:25 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property amount
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property booking
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property issueDate
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 13:22:25 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 13:22:25 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 13:22:25 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 13:22:25 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 13:22:25 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 13:22:25 DEBUG PropertyBinder - Building property user
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 13:22:25 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 13:22:25 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 13:22:25 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 13:22:25 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 13:22:25 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 13:22:25 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 13:22:26 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 13:22:26 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 13:22:26 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5e26f1ed, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-23 13:22:26 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7b2bf745] under count; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@27fe059d] under every; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@766a52f5] under any; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d11527] under sinh; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4998e74b] under cosh; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d878b25] under tanh; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49] under pi; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47] under log; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@390037e7] under position; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@29bcf51d] under overlay; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@75fe1619] under trim; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5042e3d0] under cast; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c34365c] under collate; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3b0c3951] under extract; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@422ab737] under ifnull; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6dce59e] under pad; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@691124ee] under str; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3ece79fe] under format; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6be6931f] under timestampadd; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4872669f] under timestampdiff; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68ef01a5] under current_date; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59a2388e] under current_time; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@186d8a71] under current_timestamp; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under local_date; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under local_time; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under local_datetime; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under offset_datetime; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cde8c6c] under instant; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4aeb0e2b] under sql; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@648c5fb3] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d878b25
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d11527
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4998e74b
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@13ed066e] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2db6d68d
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6518fdfd
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@626d2016] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2d5a1588] under bit_length; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4f116ca2] under octet_length; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@125d47c4] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@390037e7
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@193bb809] under bitand; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b018f3] under bitor; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under bitxor; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under bitnot; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2] under median; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f2466c] under insert; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@69cd7630] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@29bcf51d
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7e8279e5] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@12d2ddde] under listagg; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1f736d00] under array; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@523a7801] under array_list; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@4e22368c] under array_agg; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@53aa38be] under array_position; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6ad179b4] under array_positions; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5ef85555] under array_positions_list; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5bcec67e] under array_length; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@68b7d0ef] under array_concat; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6ad1701a] under array_prepend; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7ecda95b] under array_append; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4ea17147] under array_contains; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@2eda4eeb] under array_contains_nullable; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@ee21292] under array_overlaps; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@40c06358] under array_overlaps_nullable; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2282400e] under array_get; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3a1f2a1] under array_set; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@697d6ded] under array_remove_index; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d05f453] under array_slice; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5efeb117] under array_trim; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@24c685e7] under array_fill; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@7da635c0] under array_fill_list; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@79a13920] under array_to_string; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@faea4da] under mode; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@19b02dfd] under percentile_cont; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3dce6dd8] under percentile_disc; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45292ec1] under rank; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3a7c678b] under dense_rank; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@28babeca] under percent_rank; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ad9b8d3] under cume_dist; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@656a3d6b] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@25b38203] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@778a1250] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@7f3ca64a] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@733fb462] under trunc; prior registration was null
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 13:22:26 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@623e0631] under date_trunc; prior registration was null
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 13:22:26 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 13:22:26 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 13:22:26 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 13:22:26 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 13:22:26 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:22:26 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 13:22:26 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 13:22:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 13:22:27 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:22:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:22:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:22:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:22:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:22:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 13:22:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 13:22:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 13:22:27 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:22:27 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 13:22:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 13:22:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 13:22:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 13:22:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 13:22:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 13:22:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 13:22:27 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 13:22:27 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 13:22:27 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 13:22:27 DEBUG creation - Starting post-init callbacks
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 13:22:27 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 13:22:27 DEBUG create - Created new SQL alias : g1_0
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@45571cfc] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 13:22:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:22:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 13:22:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 13:22:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 13:22:27 DEBUG create - Created new SQL alias : b1_0
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@726a8729] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 13:22:27 DEBUG create - Created new SQL alias : r1_0
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5ef2cbe6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:22:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:22:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 13:22:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 13:22:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 13:22:27 DEBUG create - Created new SQL alias : r1_0
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 13:22:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 13:22:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 13:22:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 13:22:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 13:22:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 13:22:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 13:22:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 13:22:27 DEBUG create - Created new SQL alias : i1_0
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b4954b2] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2f1f9515] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 13:22:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 13:22:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 13:22:27 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 13:22:27 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 13:22:27 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 13:22:27 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 13:22:27 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 13:22:27 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 13:22:27 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec6a3d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6f2d3391]
2025-04-23 13:22:27 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 13:22:27 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 13:22:27 DEBUG Table - No alter strings for table : bookings
2025-04-23 13:22:27 DEBUG Table - No alter strings for table : guests
2025-04-23 13:22:27 DEBUG Table - No alter strings for table : invoices
2025-04-23 13:22:27 DEBUG Table - No alter strings for table : rooms
2025-04-23 13:22:27 DEBUG Table - No alter strings for table : users
2025-04-23 13:22:27 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@682266d8
2025-04-23 13:22:27 DEBUG SessionFactoryRegistry - Registering SessionFactory: 8158bca9-4666-4bc8-a5a4-7071f99a527f (my-persistence-unit)
2025-04-23 13:22:27 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 13:22:27 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 13:22:27 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 13:22:27 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 13:22:27 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 13:22:27 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:22:27 DEBUG create - Created new SQL alias : u1_0
2025-04-23 13:22:27 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 13:22:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 13:22:27 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 13:22:27 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 13:22:27 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 13:22:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:22:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@94166581 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:22:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 13:22:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 13:22:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 979259186
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:22:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 13:22:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@654db80b
2025-04-23 13:22:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:22:28 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1212708513 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:22:28 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 13:22:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 13:22:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 876008407
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:22:28 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:22:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 13:22:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f40568e
2025-04-23 13:22:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:28 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 13:22:32 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-23 13:22:32 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-23 13:22:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:22:32 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1513204713 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:22:32 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 390560699
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:22:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40fee459
2025-04-23 13:22:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:32 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-23 13:22:32 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 13:22:32 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:22:32 DEBUG create - Created new SQL alias : b1_0
2025-04-23 13:22:32 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 13:22:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c7f804c] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 13:22:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@26be0d23] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:22:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2560a7be] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 13:22:32 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2560a7be] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@26be0d23
2025-04-23 13:22:32 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:22:32 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:22:32 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 13:22:32 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 13:22:32 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 13:22:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:22:32 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@238457546 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1974317504)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1560160481 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2059996587)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1087598842 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:22:32 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1198167820
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:32 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:22:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:22:32 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@367954017 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:22:32 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 56804492
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:22:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c91f5bf
2025-04-23 13:22:32 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:22:32 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:22:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:22:32 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1338136300 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:22:32 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 413046447
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:22:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45b6c666
2025-04-23 13:22:32 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:22:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6074d638
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 1076882309
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:32 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:22:32 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:22:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:22:32 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1805683209 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:22:32 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 240931578
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:22:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@614361fa
2025-04-23 13:22:32 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:22:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6074d638
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1401589925
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:22:32 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:32 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:22:32 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:22:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:22:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6074d638
2025-04-23 13:22:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:32 INFO  UserMenuUI - Displayed booking: ID 75 | Check-in: 2025-04-23T12:00:09 | Check-out: 2125-03-30T12:00:09 | Status: CANCELLED
2025-04-23 13:22:32 INFO  UserMenuUI - Displayed booking: ID 76 | Check-in: 2025-04-23T12:00:03 | Check-out: 2025-04-24T12:00:03 | Status: CANCELLED
2025-04-23 13:22:32 INFO  UserMenuUI - Displayed booking: ID 73 | Check-in: 2025-04-22T12:50 | Check-out: 2025-04-23T10:00 | Status: COMPLETED
2025-04-23 13:22:36 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-23 13:22:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:22:36 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@713961699 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:22:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2118457232
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:22:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25172993
2025-04-23 13:22:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:22:36 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1064414847 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1974317504)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1530060977 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2059996587)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@220038608 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 13:22:36 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1863410679
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:36 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 13:22:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:22:36 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@239290560 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:22:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1519998011
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 13:22:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e0802e0
2025-04-23 13:22:36 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 13:22:36 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 13:22:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:22:36 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1243144433 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:22:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1984350709
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:22:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b54a0a4
2025-04-23 13:22:36 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 13:22:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@682d9f21
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 778350106
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:36 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:22:36 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 13:22:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:22:36 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1856885570 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:22:36 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1064122091
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 13:22:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f5ac587
2025-04-23 13:22:36 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 13:22:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@682d9f21
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 530942536
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 13:22:36 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:36 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 13:22:36 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 13:22:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 13:22:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@682d9f21
2025-04-23 13:22:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:36 INFO  UserMenuUI - No bookings available for cancellation.
2025-04-23 13:22:37 INFO  UserMenuUI - User 13 is viewing their invoice
2025-04-23 13:22:37 INFO  UserMenuUI - User 13 requested to view their invoices.
2025-04-23 13:22:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 13:22:37 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@61480005 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 13:22:37 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1207145081
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 13:22:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@63ed5dae
2025-04-23 13:22:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:37 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.user = :user
2025-04-23 13:22:37 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Invoice#user(MANY_TO_ONE)
2025-04-23 13:22:37 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:22:37 DEBUG create - Created new SQL alias : i1_0
2025-04-23 13:22:37 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 13:22:37 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@566cc6af] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 13:22:37 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d70dbeb] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 13:22:37 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7f8f5d37] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 13:22:37 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7f8f5d37] for NavigablePath [org.example.entity.Invoice(i).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@d70dbeb
2025-04-23 13:22:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:22:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 13:22:37 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).user) 
2025-04-23 13:22:37 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-23 13:22:37 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Invoice(i).user) {
            }
          }
        }
      }
    }

2025-04-23 13:22:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:22:37 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@886119570 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@833784282)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1481141739 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1318272241 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1922735165)

2025-04-23 13:22:37 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.user_id=?
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [0] - [42]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 42
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#42] : 459077137
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [2] - [70]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [3] - [2025-04-22T11:40:12.391542]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#42
2025-04-23 13:22:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c7269ad
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [0] - [43]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 43
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#43] : 472114025
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [2] - [71]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [3] - [2025-04-22T11:53:28.943694]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#43
2025-04-23 13:22:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c7269ad
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [0] - [44]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 44
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#44] : 944002819
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [2] - [72]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [3] - [2025-04-22T12:10:28.326355]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#44
2025-04-23 13:22:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c7269ad
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [0] - [45]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 45
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#45] : 1152281446
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [2] - [73]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [3] - [2025-04-22T12:50:40.800160]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#45
2025-04-23 13:22:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c7269ad
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [0] - [47]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 47
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#47] : 1527668063
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#47
2025-04-23 13:22:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c7269ad
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [0] - [48]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 48
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#48] : 1488311804
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [2] - [76]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [1] - [2500.0]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [3] - [2025-04-23T13:05:46.186310]
2025-04-23 13:22:37 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-23 13:22:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#48
2025-04-23 13:22:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c7269ad
2025-04-23 13:22:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:22:37 INFO  UserMenuUI - Displayed invoice: ID 42 | Booking ID 70 | Amount: 2500.0 | Payment Status: CANCELED
2025-04-23 13:22:37 INFO  UserMenuUI - Displayed invoice: ID 43 | Booking ID 71 | Amount: 2500.0 | Payment Status: CANCELED
2025-04-23 13:22:37 INFO  UserMenuUI - Displayed invoice: ID 44 | Booking ID 72 | Amount: 2500.0 | Payment Status: PAID
2025-04-23 13:22:37 INFO  UserMenuUI - Displayed invoice: ID 45 | Booking ID 73 | Amount: 2500.0 | Payment Status: PAID
2025-04-23 13:22:37 INFO  UserMenuUI - Displayed invoice: ID 47 | Booking ID 75 | Amount: 3.65E8 | Payment Status: CANCELED
2025-04-23 13:22:37 INFO  UserMenuUI - Displayed invoice: ID 48 | Booking ID 76 | Amount: 2500.0 | Payment Status: CANCELED
2025-04-23 13:22:55 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:22:55 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 13:23:18 INFO  UserMenuUI - User 13 is booking a room
2025-04-23 13:23:18 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 13:23:18 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 13:23:18 DEBUG create - Created new SQL alias : r1_0
2025-04-23 13:23:18 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 13:23:18 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 13:23:18 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 13:23:18 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 13:23:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 13:23:18 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@18758920 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 13:23:18 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 664449374
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1477474090
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1319941841
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1020198427
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 177368500
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1373696747
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 2052185144
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 832887631
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 675475202
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 2120431435
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 178754723
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 500058139
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 583765599
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1165311010
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1933687459
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 13:23:18 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 13:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 13:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@571c2ed8
2025-04-23 13:23:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:23:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 13:23:25 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 13:23:25 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 16:50:44 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 16:50:44 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 16:50:44 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 16:50:44 DEBUG HikariConfig - autoCommit......................true
2025-04-23 16:50:44 DEBUG HikariConfig - catalog.........................none
2025-04-23 16:50:44 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 16:50:44 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 16:50:44 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 16:50:44 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-23 16:50:44 DEBUG HikariConfig - dataSource......................none
2025-04-23 16:50:44 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 16:50:44 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 16:50:44 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 16:50:44 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 16:50:44 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 16:50:44 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 16:50:44 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 16:50:44 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 16:50:44 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 16:50:44 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 16:50:44 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 16:50:44 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 16:50:44 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 16:50:44 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 16:50:44 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 16:50:44 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 16:50:44 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 16:50:44 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 16:50:44 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 16:50:44 DEBUG HikariConfig - password........................<masked>
2025-04-23 16:50:44 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 16:50:44 DEBUG HikariConfig - readOnly........................false
2025-04-23 16:50:44 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 16:50:44 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 16:50:44 DEBUG HikariConfig - schema..........................none
2025-04-23 16:50:44 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 16:50:44 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 16:50:44 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 16:50:44 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 16:50:44 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 16:50:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2d2975c7-5385-4d8b-871b-4414444f16eb)
2025-04-23 16:50:44 DEBUG PoolBase - HikariPool-1 - Established new connection (2d2975c7-5385-4d8b-871b-4414444f16eb)
2025-04-23 16:50:44 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e3181aa
2025-04-23 16:50:44 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 16:50:45 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 16:50:45 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 16:50:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 16:50:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 16:50:45 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 16:50:45 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d1961472-28f6-4f94-b29c-dffca06be292)
2025-04-23 16:50:45 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 16:50:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 16:50:45 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 16:50:45 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Established new connection (d1961472-28f6-4f94-b29c-dffca06be292)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@43759e58
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (74c1824f-74bd-4336-904d-fb1ba1a8d74d)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Established new connection (74c1824f-74bd-4336-904d-fb1ba1a8d74d)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@498df528
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@21362712
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@641856
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@352c308
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (85d57a0a-cc19-4cda-a807-d0d99e0ef73a)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@71e9a896
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43c67247
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@fac80
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@726386ed
2025-04-23 16:50:45 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24f43aa3] into BootstrapContext; was [null]
2025-04-23 16:50:45 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@63fd4873] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1e11bc55]
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Established new connection (85d57a0a-cc19-4cda-a807-d0d99e0ef73a)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c8f627d
2025-04-23 16:50:45 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 16:50:45 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4da4c131-7850-41f8-9207-68efb6385bd6)
2025-04-23 16:50:45 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Established new connection (4da4c131-7850-41f8-9207-68efb6385bd6)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@63e7aaea
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bbfbea85-7e79-4641-bec8-54d34b84702e)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Established new connection (bbfbea85-7e79-4641-bec8-54d34b84702e)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d490e88
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0bb5d668-db4b-4bec-9b60-6331cdd36d97)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Established new connection (0bb5d668-db4b-4bec-9b60-6331cdd36d97)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bcb98bc
2025-04-23 16:50:45 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 16:50:45 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 16:50:45 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ef54ad89-0b14-4625-89ba-752e90fe6699)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Established new connection (ef54ad89-0b14-4625-89ba-752e90fe6699)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6ca09d32
2025-04-23 16:50:45 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b288c2cd-6d4d-46de-87d6-ee5172820d18)
2025-04-23 16:50:45 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 16:50:45 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 16:50:45 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2063c53e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2a9bc08f)
2025-04-23 16:50:45 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50f40653) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a3d0f6)
2025-04-23 16:50:45 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 16:50:45 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Established new connection (b288c2cd-6d4d-46de-87d6-ee5172820d18)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@324edab6
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70e29e14`
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 16:50:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (926b2d47-7e1d-4820-b402-c6e17d4d7975)
2025-04-23 16:50:45 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 16:50:45 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f1ea80d]
2025-04-23 16:50:45 DEBUG PoolBase - HikariPool-1 - Established new connection (926b2d47-7e1d-4820-b402-c6e17d4d7975)
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4706af39
2025-04-23 16:50:45 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 16:50:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 16:50:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 16:50:45 DEBUG EntityBinder - Import with entity name User
2025-04-23 16:50:45 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property userID
2025-04-23 16:50:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property email
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property isActive
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property name
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property password
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property userRole
2025-04-23 16:50:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 16:50:45 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 16:50:45 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property guestId
2025-04-23 16:50:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property age
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property name
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property user
2025-04-23 16:50:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 16:50:45 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 16:50:45 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property bookingId
2025-04-23 16:50:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property checkIn
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property checkOut
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property room
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property status
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property user
2025-04-23 16:50:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 16:50:45 DEBUG EntityBinder - Import with entity name Room
2025-04-23 16:50:45 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property roomID
2025-04-23 16:50:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property price
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property roomType
2025-04-23 16:50:45 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 16:50:45 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 16:50:45 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 16:50:45 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property amount
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property booking
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property issueDate
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 16:50:45 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 16:50:45 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 16:50:45 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 16:50:45 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 16:50:45 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 16:50:45 DEBUG PropertyBinder - Building property user
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 16:50:45 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 16:50:45 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 16:50:45 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 16:50:45 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 16:50:45 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 16:50:45 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 16:50:46 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 16:50:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 16:50:46 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@42cc183e, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-23 16:50:46 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3ff54f3d] under count; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@430b2699] under every; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67536ae0] under any; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63] under sinh; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7] under cosh; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5] under tanh; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93] under pi; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc] under log; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3440e9cd] under position; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6a1ef65c] under overlay; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@e280403] under trim; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@77f991c] under cast; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7e365] under collate; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5568c66f] under extract; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4bdf] under ifnull; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@78422efb] under pad; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@d48e998] under str; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4eaa375c] under format; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@31a2a9fa] under timestampadd; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5ec1963c] under timestampdiff; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fa4f485] under current_date; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68dd39d2] under current_time; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a44cfc0] under current_timestamp; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e3c26e] under local_date; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@80b122b] under local_time; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@999b951] under local_datetime; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under offset_datetime; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under instant; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@36d33f4] under sql; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16736040] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efa3f63
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7134b8a7
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@32eae6f2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@80b122b
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@999b951
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6a1d526c] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1f2f0109] under bit_length; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@483b0690] under octet_length; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@687e6293] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3440e9cd
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6870c3c2] under bitand; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb0a08c] under bitor; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c] under bitxor; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4debbf0] under bitnot; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a5e167a] under median; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under insert; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a917723] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6a1ef65c
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7e4579c7] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@40c2ce52] under listagg; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3965bdf9] under array; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3c0e00a8] under array_list; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3408f695] under array_agg; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@682abca7] under array_position; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@713ec32d] under array_positions; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@fe87ddd] under array_positions_list; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4eea94a4] under array_length; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@168b4cb0] under array_concat; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@383c3eb3] under array_prepend; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@20ab76ee] under array_append; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3a17b2e3] under array_contains; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@5e13f156] under array_contains_nullable; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@6e60f18] under array_overlaps; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@5cf8676a] under array_overlaps_nullable; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd43562] under array_get; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@55f4887d] under array_set; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@78d71df1] under array_remove_index; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@456bcb74] under array_slice; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a9c5b75] under array_trim; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@de81be1] under array_fill; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@342e690b] under array_fill_list; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@7237f3c1] under array_to_string; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d3b58ca] under mode; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4e224df5] under percentile_cont; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32456db0] under percentile_disc; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1d02af26] under rank; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fa7df1] under dense_rank; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4dd90166] under percent_rank; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@52227eb2] under cume_dist; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4ed5a1b0] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@18d003cd] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3135bf25] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@45900b64] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@6e31d989] under trunc; prior registration was null
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 16:50:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b01a0d] under date_trunc; prior registration was null
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 16:50:46 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 16:50:46 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 16:50:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 16:50:46 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 16:50:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 16:50:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 16:50:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 16:50:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 16:50:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 16:50:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 16:50:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 16:50:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 16:50:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 16:50:46 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 16:50:46 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 16:50:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 16:50:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 16:50:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 16:50:46 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 16:50:46 DEBUG creation - Starting post-init callbacks
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 16:50:46 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 16:50:46 DEBUG create - Created new SQL alias : g1_0
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@781dac73] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 16:50:46 DEBUG create - Created new SQL alias : u1_0
2025-04-23 16:50:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 16:50:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 16:50:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 16:50:46 DEBUG create - Created new SQL alias : b1_0
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7272ee51] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 16:50:46 DEBUG create - Created new SQL alias : r1_0
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@762a10b6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 16:50:46 DEBUG create - Created new SQL alias : u1_0
2025-04-23 16:50:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 16:50:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 16:50:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 16:50:46 DEBUG create - Created new SQL alias : r1_0
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 16:50:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 16:50:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 16:50:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 16:50:46 DEBUG create - Created new SQL alias : u1_0
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 16:50:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 16:50:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 16:50:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 16:50:46 DEBUG create - Created new SQL alias : i1_0
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2035d65b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 16:50:46 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72224107] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 16:50:46 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 16:50:46 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 16:50:46 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 16:50:46 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 16:50:46 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 16:50:46 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 16:50:46 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 16:50:46 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 16:50:46 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@56d6a1b1]
2025-04-23 16:50:46 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 16:50:46 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 16:50:46 DEBUG Table - No alter strings for table : bookings
2025-04-23 16:50:46 DEBUG Table - No alter strings for table : guests
2025-04-23 16:50:46 DEBUG Table - No alter strings for table : invoices
2025-04-23 16:50:46 DEBUG Table - No alter strings for table : rooms
2025-04-23 16:50:46 DEBUG Table - No alter strings for table : users
2025-04-23 16:50:46 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2475fba3
2025-04-23 16:50:46 DEBUG SessionFactoryRegistry - Registering SessionFactory: d3d89dbe-a7c5-4ef7-b389-0491eecee5e8 (my-persistence-unit)
2025-04-23 16:50:46 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 16:50:46 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 16:50:47 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 16:50:47 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 16:50:47 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 16:50:47 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 16:50:47 DEBUG create - Created new SQL alias : u1_0
2025-04-23 16:50:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 16:50:47 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 16:50:47 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 16:50:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 16:50:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 16:50:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 16:50:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1244989872 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 16:50:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 16:50:47 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 16:50:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 16:50:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1599677423
2025-04-23 16:50:47 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 16:50:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 16:50:47 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 16:50:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 16:50:47 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 16:50:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 16:50:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40b70f31
2025-04-23 16:50:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:50:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:50:47 WARN  HomeMenuUI - Invalid login attempt for email: saurav@gmail.com
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: private list<guest> collectguestdetails() {
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:     list<guest> guests = new arraylist<>();
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:     while (true) {
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         system.out.print("will the user have accompanied guests?\n1. yes\n2. no\n(0 to cancel)\nenter option: ");
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         int option = scanner.nextint();
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         scanner.nextline();
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         if (option == 0 || option == 2) return guests;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         if (option != 1) {
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             system.out.println("invalid option. try again.");
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             continue;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         }
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         int guestcount = -1;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         while (true) {
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             system.out.print("enter number of guests (1–16) or (0 to cancel): ");
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             guestcount = scanner.nextint();
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             scanner.nextline();
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             if (guestcount == 0) return guests;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             if (guestcount > 0 && guestcount <= 16) break;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             system.out.println("guest count must be between 1 and 16.");
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         }
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         for (int i = 1; i <= guestcount; i++) {
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             string name;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             while (true) {
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 system.out.print("enter guest name for guest " + i + " (or 0 to cancel): ");
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 name = scanner.nextline().touppercase();
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 if (name.equals("0")) return guests;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 if (validator.isvalidname(name)) break;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 log.warn("invalid name format: {}", name);
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 system.out.println("invalid name format. try again.");
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             }
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             int age;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             while (true) {
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 system.out.print("enter guest age for guest " + i + " (1–100, 0 to cancel): ");
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 age = scanner.nextint();
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 scanner.nextline();
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 if (age == 0) return guests;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 if (age > 0 && age <= 100) break;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:                 system.out.println("invalid age. try again.");
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             }
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:             guests.add(new guest(null, name, age, null));
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         }
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         log.info("collected details for {} guest(s)", guests.size());
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:         return guests;
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered:     }
2025-04-23 16:51:00 WARN  HomeMenuUI - Invalid email format entered: }
2025-04-23 16:51:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 16:51:11 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@517653428 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 16:51:11 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 16:51:11 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 16:51:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 16:51:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 285646508
2025-04-23 16:51:11 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 16:51:11 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 16:51:11 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 16:51:11 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 16:51:11 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 16:51:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 16:51:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5909285b
2025-04-23 16:51:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:51:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:51:11 WARN  HomeMenuUI - Invalid login attempt for email: saurav@gmail.com
2025-04-23 16:51:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 16:51:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 16:51:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 16:51:22 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@542766981 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 16:51:22 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 768028708
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42cd0fc6
2025-04-23 16:51:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:51:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:51:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 16:51:22 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@240673986 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 16:51:22 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1765223454
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 16:51:22 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24842b8e
2025-04-23 16:51:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:51:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:51:22 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-23 16:51:25 INFO  UserMenuUI - User 13 is booking a room
2025-04-23 16:51:25 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 16:51:25 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 16:51:25 DEBUG create - Created new SQL alias : r1_0
2025-04-23 16:51:25 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 16:51:25 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 16:51:25 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 16:51:25 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 16:51:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 16:51:25 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1429207620 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 16:51:25 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1870436181
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 421217482
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1575109563
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 743241707
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 891684741
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1993877759
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 963138052
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1926240621
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 2010067613
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1080517451
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 996471089
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1225628737
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1205343271
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1012812460
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 548395375
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 16:51:25 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 16:51:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 16:51:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d008e61
2025-04-23 16:51:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:51:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:51:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 16:51:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 16:51:45 ERROR UserMenuUI - Invalid input by user 13: null
2025-04-23 16:51:59 INFO  UserMenuUI - User 13 is booking a room
2025-04-23 16:51:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 16:51:59 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@485375493 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 16:51:59 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 1079124964
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1487381901
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1300570879
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 479819176
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 948110109
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1567441485
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 958071237
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1853364091
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1321433666
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 2039166717
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 419370272
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 907152011
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1674995553
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1128958264
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 595382884
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 16:51:59 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 16:51:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 16:51:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2d2133fd
2025-04-23 16:51:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:51:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:52:07 WARN  UserMenuUI - Invalid name format: -1
2025-04-23 16:52:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 16:52:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 16:52:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@498df528 is alive
2025-04-23 16:52:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d490e88 is alive
2025-04-23 16:52:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c8f627d is alive
2025-04-23 16:52:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ca09d32 is alive
2025-04-23 16:52:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bcb98bc is alive
2025-04-23 16:52:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@63e7aaea is alive
2025-04-23 16:52:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43759e58 is alive
2025-04-23 16:52:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-23 16:52:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4706af39 is alive
2025-04-23 16:52:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@324edab6 is alive
2025-04-23 16:52:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 16:52:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 16:52:56 INFO  UserMenuUI - Collected details for 1 guest(s)
2025-04-23 16:52:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 16:52:56 DEBUG TransactionImpl - begin
2025-04-23 16:52:56 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 16:52:56 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 16:52:56 DEBUG results - Initializer list is empty
2025-04-23 16:52:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5e2b512b
2025-04-23 16:52:56 DEBUG results - Extracted JDBC value [0] - [21]
2025-04-23 16:52:56 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@644e6a8e
2025-04-23 16:52:56 DEBUG TransactionImpl - committing
2025-04-23 16:52:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 16:52:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 16:52:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 16:52:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 16:52:56 DEBUG EntityPrinter - Listing entities:
2025-04-23 16:52:56 DEBUG EntityPrinter - org.example.entity.Guest{name=JONITA KAUR, guestId=21, user=org.example.entity.User#13, age=23}
2025-04-23 16:52:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:52:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 16:53:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 16:53:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 16:53:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 16:53:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 16:54:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@498df528 is alive
2025-04-23 16:54:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 16:54:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:23:10 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 17:23:10 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 17:23:10 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 17:23:10 DEBUG HikariConfig - autoCommit......................true
2025-04-23 17:23:10 DEBUG HikariConfig - catalog.........................none
2025-04-23 17:23:10 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 17:23:10 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 17:23:10 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 17:23:10 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-23 17:23:10 DEBUG HikariConfig - dataSource......................none
2025-04-23 17:23:10 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 17:23:10 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 17:23:10 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 17:23:10 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 17:23:10 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 17:23:10 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 17:23:10 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 17:23:10 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 17:23:10 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 17:23:10 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 17:23:10 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 17:23:10 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 17:23:10 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 17:23:10 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 17:23:10 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 17:23:10 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 17:23:10 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 17:23:10 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 17:23:10 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 17:23:10 DEBUG HikariConfig - password........................<masked>
2025-04-23 17:23:10 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 17:23:10 DEBUG HikariConfig - readOnly........................false
2025-04-23 17:23:10 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 17:23:10 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 17:23:10 DEBUG HikariConfig - schema..........................none
2025-04-23 17:23:10 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 17:23:10 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 17:23:10 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 17:23:10 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 17:23:10 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (99e3bfe3-bf66-4468-a7bc-8ae9a6bbef2e)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (99e3bfe3-bf66-4468-a7bc-8ae9a6bbef2e)
2025-04-23 17:23:10 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@475835b1
2025-04-23 17:23:10 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 17:23:10 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 17:23:10 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 17:23:10 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 17:23:10 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 17:23:10 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 17:23:10 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3584dd2e-e771-474b-8101-cc6de8dae664)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (3584dd2e-e771-474b-8101-cc6de8dae664)
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1be1814c
2025-04-23 17:23:10 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 17:23:10 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 17:23:10 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 17:23:10 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6ca0c1db-4e62-4a61-9ac4-1d6b7773d196)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (6ca0c1db-4e62-4a61-9ac4-1d6b7773d196)
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@780b41f2
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ea0f1019-87a1-41fc-89fb-96e4ad7e97d1)
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@66908383
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (ea0f1019-87a1-41fc-89fb-96e4ad7e97d1)
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41a99731
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2e3a5237
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-23 17:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-23 17:23:10 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3e9803c2] into BootstrapContext; was [null]
2025-04-23 17:23:10 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4525d1d3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c974942]
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3eff53b6-398d-41ce-aa44-8290613658d2)
2025-04-23 17:23:10 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 17:23:10 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (3eff53b6-398d-41ce-aa44-8290613658d2)
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e969fbe
2025-04-23 17:23:10 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e722c8bf-3c28-4a80-b968-8895cdbd6325)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (e722c8bf-3c28-4a80-b968-8895cdbd6325)
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@65aa74c0
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (251c7bd8-c7a3-4b13-9f0d-0e9ae98ff5b2)
2025-04-23 17:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (251c7bd8-c7a3-4b13-9f0d-0e9ae98ff5b2)
2025-04-23 17:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f7d1d7d
2025-04-23 17:23:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-23 17:23:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (245b5841-a6fb-4ad7-83ca-d3a0447b2dc1)
2025-04-23 17:23:11 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 17:23:11 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 17:23:11 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 17:23:11 DEBUG PoolBase - HikariPool-1 - Established new connection (245b5841-a6fb-4ad7-83ca-d3a0447b2dc1)
2025-04-23 17:23:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@643dc6b2
2025-04-23 17:23:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-23 17:23:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3445bb6d-b8ca-4a98-8c59-6447f3270886)
2025-04-23 17:23:11 DEBUG PoolBase - HikariPool-1 - Established new connection (3445bb6d-b8ca-4a98-8c59-6447f3270886)
2025-04-23 17:23:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23f82830
2025-04-23 17:23:11 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 17:23:11 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 17:23:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-23 17:23:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (286a9912-f1cc-4e67-ae2c-05c82cfa9d9e)
2025-04-23 17:23:11 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 17:23:11 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@700f518a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b835727)
2025-04-23 17:23:11 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13da7ab0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c8662ac)
2025-04-23 17:23:11 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 17:23:11 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@65327f5`
2025-04-23 17:23:11 DEBUG PoolBase - HikariPool-1 - Established new connection (286a9912-f1cc-4e67-ae2c-05c82cfa9d9e)
2025-04-23 17:23:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f88c426
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 17:23:11 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 17:23:11 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:23:11 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 17:23:11 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36bf84e]
2025-04-23 17:23:11 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 17:23:11 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 17:23:11 DEBUG EntityBinder - Import with entity name User
2025-04-23 17:23:11 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property userID
2025-04-23 17:23:11 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property email
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property isActive
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property name
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property password
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property userRole
2025-04-23 17:23:11 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 17:23:11 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 17:23:11 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property guestId
2025-04-23 17:23:11 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property age
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property name
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property user
2025-04-23 17:23:11 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 17:23:11 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 17:23:11 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property bookingId
2025-04-23 17:23:11 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property checkIn
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property checkOut
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property room
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property status
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property user
2025-04-23 17:23:11 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 17:23:11 DEBUG EntityBinder - Import with entity name Room
2025-04-23 17:23:11 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property roomID
2025-04-23 17:23:11 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property price
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property roomType
2025-04-23 17:23:11 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 17:23:11 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 17:23:11 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 17:23:11 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property amount
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property booking
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property issueDate
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 17:23:11 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 17:23:11 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 17:23:11 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 17:23:11 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 17:23:11 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 17:23:11 DEBUG PropertyBinder - Building property user
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 17:23:11 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 17:23:11 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 17:23:11 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 17:23:11 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 17:23:11 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 17:23:11 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 17:23:11 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 17:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 17:23:11 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 17:23:11 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@9b23822, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-23 17:23:11 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3a8cea24] under count; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2ba1209b] under every; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7c241a9f] under any; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49] under sinh; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47] under cosh; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba] under tanh; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0] under pi; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680] under log; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6002e944] under position; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d] under overlay; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@469a7575] under trim; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@412c5e8b] under cast; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@637791d] under collate; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@18b6d3c1] under extract; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d86b9d] under ifnull; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@800d065] under pad; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5a0e0886] under str; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@262a1fad] under format; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@e7b265e] under timestampadd; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@33f2cfda] under timestampdiff; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dc40ab9] under current_date; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2db6d68d] under current_time; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6518fdfd] under current_timestamp; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11d2dd2d] under local_date; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cde8c6c] under local_time; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@174721c4] under local_datetime; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3592c1c4] under offset_datetime; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@322e49ee] under instant; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7126e26] under sql; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@433d9680
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@151ab2b9] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3663d0ba
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28279a49
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@384fda47
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575cabf0
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@19489b27] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@cde8c6c
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@174721c4
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@125d47c4] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@193bb809] under bit_length; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64b018f3] under octet_length; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20801cbb] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6002e944
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@581b1c08] under bitand; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c240cf2] under bitor; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805] under bitxor; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f2466c] under bitnot; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5809fa26] under median; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23468512] under insert; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3caafa67] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3b24087d
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e546734] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1c61eda5] under listagg; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4bc6da03] under array; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4f59a516] under array_list; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3e046e39] under array_agg; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@62a54948] under array_position; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@316cda31] under array_positions; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7a2fce12] under array_positions_list; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66e17eff] under array_length; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@764b14b8] under array_concat; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@100ad67e] under array_prepend; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@713a35c5] under array_append; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@309dcdf3] under array_contains; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7573b9ee] under array_contains_nullable; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@7f73ce28] under array_overlaps; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@611b35d6] under array_overlaps_nullable; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dd3f8aa] under array_get; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@65c5bf0e] under array_set; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@160b4809] under array_remove_index; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@149b4d20] under array_slice; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@664e848c] under array_trim; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@251c4280] under array_fill; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@35650279] under array_fill_list; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@420a8042] under array_to_string; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@69f2cb04] under mode; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@13803a94] under percentile_cont; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@b4732dc] under percentile_disc; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ad9b8d3] under rank; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@168ad26f] under dense_rank; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f93bf0a] under percent_rank; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@322204dc] under cume_dist; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@55acec99] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@61191222] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58833798] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78b7f805
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@2519026b] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@385dfb63] under trunc; prior registration was null
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 17:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@364fd4ae] under date_trunc; prior registration was null
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 17:23:11 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 17:23:11 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 17:23:12 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 17:23:12 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 17:23:12 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 17:23:12 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 17:23:12 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 17:23:12 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 17:23:12 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 17:23:12 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 17:23:12 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 17:23:12 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 17:23:12 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 17:23:12 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 17:23:12 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 17:23:12 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 17:23:12 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 17:23:12 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 17:23:12 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 17:23:12 DEBUG creation - Starting post-init callbacks
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 17:23:12 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 17:23:12 DEBUG create - Created new SQL alias : g1_0
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1669931a] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 17:23:12 DEBUG create - Created new SQL alias : u1_0
2025-04-23 17:23:12 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 17:23:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 17:23:12 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 17:23:12 DEBUG create - Created new SQL alias : b1_0
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c2dd89b] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 17:23:12 DEBUG create - Created new SQL alias : r1_0
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d84418a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 17:23:12 DEBUG create - Created new SQL alias : u1_0
2025-04-23 17:23:12 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 17:23:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 17:23:12 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 17:23:12 DEBUG create - Created new SQL alias : r1_0
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 17:23:12 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 17:23:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 17:23:12 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 17:23:12 DEBUG create - Created new SQL alias : u1_0
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 17:23:12 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 17:23:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 17:23:12 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 17:23:12 DEBUG create - Created new SQL alias : i1_0
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@18dd7767] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 17:23:12 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e7bb00e] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 17:23:12 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 17:23:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 17:23:12 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 17:23:12 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 17:23:12 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 17:23:12 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 17:23:12 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 17:23:12 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 17:23:12 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c2d509] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@563172d3]
2025-04-23 17:23:12 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 17:23:12 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 17:23:12 DEBUG Table - No alter strings for table : bookings
2025-04-23 17:23:12 DEBUG Table - No alter strings for table : guests
2025-04-23 17:23:12 DEBUG Table - No alter strings for table : invoices
2025-04-23 17:23:12 DEBUG Table - No alter strings for table : rooms
2025-04-23 17:23:12 DEBUG Table - No alter strings for table : users
2025-04-23 17:23:12 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6c5ae8fd
2025-04-23 17:23:12 DEBUG SessionFactoryRegistry - Registering SessionFactory: 7fbd44e2-bfc8-440e-ad3b-d3f07b0009bb (my-persistence-unit)
2025-04-23 17:23:12 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 17:23:12 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 17:23:12 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 17:23:12 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 17:23:13 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 17:23:13 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 17:23:13 DEBUG create - Created new SQL alias : u1_0
2025-04-23 17:23:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 17:23:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 17:23:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 17:23:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 17:23:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 17:23:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:23:13 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2018545259 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:23:13 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 17:23:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-23 17:23:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 597521407
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 17:23:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-23 17:23:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@336070ab
2025-04-23 17:23:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:23:13 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@876008407 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:23:13 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 17:23:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-23 17:23:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 934572255
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:23:13 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 17:23:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-23 17:23:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@359ea595
2025-04-23 17:23:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:13 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-23 17:23:13 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-23 17:23:17 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-23 17:23:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:23:35 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@262005245 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:23:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1027296777
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 17:23:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dc9d25a
2025-04-23 17:23:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:23:35 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@614978515 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:23:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1579620531
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 17:23:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@440461ef
2025-04-23 17:23:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:35 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-23 17:23:35 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 17:23:35 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 17:23:35 DEBUG create - Created new SQL alias : b1_0
2025-04-23 17:23:35 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 17:23:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@59aa2fba] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 17:23:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2fb70301] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 17:23:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67823972] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 17:23:35 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67823972] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@2fb70301
2025-04-23 17:23:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 17:23:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 17:23:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 17:23:35 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 17:23:35 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 17:23:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:23:35 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@484801467 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@367954017 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@832578794 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 17:23:35 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 428057828
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 17:23:35 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 17:23:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:23:35 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@689218344 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:23:35 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 668330752
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 17:23:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7fc56d61
2025-04-23 17:23:35 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 17:23:35 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 17:23:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:23:35 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1618269752 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:23:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 309326241
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 17:23:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@546c30c2
2025-04-23 17:23:35 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 17:23:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e5c52fa
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 1631805946
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 17:23:35 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 17:23:35 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 17:23:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:23:35 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1648661716 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:23:35 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 864189320
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 17:23:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7526bb18
2025-04-23 17:23:35 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 17:23:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e5c52fa
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 1897050650
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 17:23:35 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 17:23:35 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 17:23:35 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 17:23:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 17:23:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e5c52fa
2025-04-23 17:23:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:23:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:23:44 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-23 17:23:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:23:50 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2024413011 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:23:50 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 17:23:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 17:23:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 886037892
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:23:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 17:23:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c7744c1
2025-04-23 17:23:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:50 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-23 17:23:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:23:50 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@839784351 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:23:50 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:23:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 17:23:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1215157782
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:23:50 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:23:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 17:23:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a1d926b
2025-04-23 17:23:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:50 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user AND b.status = :status
2025-04-23 17:23:50 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-23 17:23:50 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(status)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).status)
2025-04-23 17:23:50 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [entity-path] - `org.example.entity.Booking(b).user`
                :user
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Booking(b).status`
                :status
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 17:23:50 DEBUG create - Created new SQL alias : b1_0
2025-04-23 17:23:50 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 17:23:50 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44a485bc] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 17:23:50 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c66cd02] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 17:23:50 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d535b78] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 17:23:50 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d535b78] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1c66cd02
2025-04-23 17:23:50 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 17:23:50 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-23 17:23:50 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-23 17:23:50 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(status)
2025-04-23 17:23:50 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-23 17:23:50 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-23 17:23:50 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-23 17:23:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:23:50 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@895177676 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@627597596 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@735738459 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 17:23:50 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-23 17:23:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:23:50 ERROR BookingDaoImpl - Error occurred while fetching confirmed booking for user ID: 13
jakarta.persistence.NoResultException: No result found for query [SELECT b FROM Booking b WHERE b.user = :user AND b.status = :status]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getConfirmedBookingByUserId(BookingDaoImpl.java:100) ~[classes/:?]
	at java.util.Optional.flatMap(Optional.java:289) [?:?]
	at org.example.service.BookingServiceImpl.getConfirmedBookingByUserId(BookingServiceImpl.java:79) [classes/:?]
	at org.example.controller.BookingController.getConfirmedBookingByUserId(BookingController.java:74) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.checkoutByStaff(StaffMenuUI.java:234) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:86) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:100) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:13) [classes/:?]
2025-04-23 17:23:50 WARN  StaffMenuUI - No active confirmed booking found for user: saurav@gmail.com
2025-04-23 17:24:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:24:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:24:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:24:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:24:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:24:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:24:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:24:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:25:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:25:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:25:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:25:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:25:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:25:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:25:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:25:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:25:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:25:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:26:08 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-23 17:26:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:26:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:26:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:26:14 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1819508699 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:26:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1182586041
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 17:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69a3bf40
2025-04-23 17:26:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:14 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@745740822 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:26:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2128619880
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 17:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a773f08
2025-04-23 17:26:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:26:14 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1085805965 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@619120762 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1538514663 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 17:26:14 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 878915766
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 17:26:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 17:26:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1910670395 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:26:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 2138645808
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 17:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1adfb5b8
2025-04-23 17:26:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 17:26:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 17:26:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:14 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@625788232 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:26:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1998741793
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 17:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3117ac8d
2025-04-23 17:26:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 17:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@760c777d
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 2124429748
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 17:26:14 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 17:26:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-23 17:26:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@451900456 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:26:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2082475607
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-23 17:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d0f7bcf
2025-04-23 17:26:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [4] - [CANCELLED]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 17:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@760c777d
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 219040114
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 17:26:14 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).room#1] - using loading instance
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 17:26:14 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 17:26:14 DEBUG results - Extracted JDBC value [4] - [COMPLETED]
2025-04-23 17:26:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 17:26:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@760c777d
2025-04-23 17:26:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:22 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-23 17:26:24 INFO  StaffMenuUI - Cancellation process started for Booking ID: 0
2025-04-23 17:26:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:24 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@2094728618 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@544865532 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@2000689527 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)

2025-04-23 17:26:24 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 17:26:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:24 WARN  InvoiceServiceImpl - Invalid booking ID: 0
2025-04-23 17:26:27 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-23 17:26:34 WARN  StaffMenuUI - Invalid email format entered: saurav@ganil.com
2025-04-23 17:26:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:26:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:26:40 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-23 17:26:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:26:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@309135464 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:26:45 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1664191318
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19e5e110
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@506027903 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:26:45 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 313124964
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@462f8fe9
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1013957837 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@187571699 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1444494906 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 17:26:45 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1438780049
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 17:26:45 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#8) : 8
2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1244993277 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:26:45 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1893180571
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4509b7
2025-04-23 17:26:45 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#8] : 8 has being loaded by session.internalLoad.
2025-04-23 17:26:45 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1911619650 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:26:45 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 950172366
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41289e88
2025-04-23 17:26:45 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e8783b0
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@2022543673 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1406333164 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1443621056 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)

2025-04-23 17:26:45 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 1146282300
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1301695646
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 1108811877
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b6f3d0b
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-23 17:26:45 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-23 17:26:45 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 17:26:45 DEBUG create - Created new SQL alias : i1_0
2025-04-23 17:26:45 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 17:26:45 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e20c20b] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 17:26:45 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d167630] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 17:26:45 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3bc18fec] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 17:26:45 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3bc18fec] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@2e20c20b
2025-04-23 17:26:45 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-23 17:26:45 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-23 17:26:45 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-23 17:26:45 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-23 17:26:45 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1067809448 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@2102123480)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@780435057 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@2036555904 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1837573438)

2025-04-23 17:26:45 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [0] - [47]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 47
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#47] : 1232343668
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#47
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@656302c
2025-04-23 17:26:45 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:26:45 DEBUG TransactionImpl - begin
2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1268473253 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1837573438)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@1609735819 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@2102123480)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@2060439492 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-23 17:26:45 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 47
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#47] : 698263942
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [75]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [3.65E8]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [2025-04-23T11:47:08.775546]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#47
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dd9a3ae
2025-04-23 17:26:45 DEBUG TransactionImpl - committing
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:26:45 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:26:45 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3.65E8, booking=<uninitialized>, invoiceId=47, issueDate=2025-04-23T11:47:08.775546, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:26:45 DEBUG TransactionImpl - begin
2025-04-23 17:26:45 DEBUG create - Created new SQL alias : b1_0
2025-04-23 17:26:45 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 17:26:45 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6167c42f] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 17:26:45 DEBUG create - Created new SQL alias : r1_0
2025-04-23 17:26:45 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2cbc2db2] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 17:26:45 DEBUG create - Created new SQL alias : u1_0
2025-04-23 17:26:45 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 17:26:45 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1056511221 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1642133945 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@746359178 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)

2025-04-23 17:26:45 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 75
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 8
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#8] : 1516588549
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 303934490
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#75] : 1838444270
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#8
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 17:26:45 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [2125-03-30T12:00:09]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#75
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23dc70c1
2025-04-23 17:26:45 DEBUG TransactionImpl - committing
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:26:45 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:26:45 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 17:26:45 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-23 17:26:45 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-23T12:00:09, checkOut=2025-04-23T17:26:45.622267200, user=org.example.entity.User#13, bookingId=75, room=org.example.entity.Room#8, status=COMPLETED}
2025-04-23 17:26:45 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 INFO  BookingServiceImpl - Booking updated successfully with ID: 75
2025-04-23 17:26:45 INFO  StaffMenuUI - Booking ID: 75 status updated to COMPLETED
2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1802242940 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:26:45 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1824222273
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6787bd41
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 INFO  RoomServiceImpl - Fetched room with ID 8: Optional[Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}]
2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1357984916 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:26:45 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 41772135
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bf1b528
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:26:45 DEBUG TransactionImpl - begin
2025-04-23 17:26:45 DEBUG create - Created new SQL alias : r1_0
2025-04-23 17:26:45 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 17:26:45 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 17:26:45 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 17:26:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:26:45 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@473637407 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:26:45 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 8
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#8] : 1572937899
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 17:26:45 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:26:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#8
2025-04-23 17:26:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49c4118b
2025-04-23 17:26:45 DEBUG TransactionImpl - committing
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 17:26:45 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:26:45 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:26:45 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=204, price=10000.0, roomID=8, roomType=DELUXE}
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:26:45 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 17:26:45 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=8, roomNumber=204, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 17:26:45 INFO  StaffMenuUI - Room 204 is now available after checkout
2025-04-23 17:26:45 INFO  StaffMenuUI - Checkout completed successfully for user: SAURAV SHARMA
2025-04-23 17:26:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:26:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:26:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:26:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:26:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:27:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:27:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:27:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:27:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:27:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:27:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:27:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:28:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:28:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:28:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:28:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:28:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:28:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:28:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:28:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:28:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:28:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:28:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:29:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:29:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:29:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:29:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:29:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:29:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:29:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:30:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:30:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:30:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:30:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:30:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:30:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:30:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:30:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:30:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:30:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:30:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:30:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:31:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:31:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:31:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:31:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:31:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:31:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:31:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:31:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:32:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:32:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:32:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:32:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:32:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:32:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:32:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:32:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:32:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:32:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:32:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:32:59 INFO  StaffMenuUI - User SHUBHAM LANKE is logging out
2025-04-23 17:33:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:33:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:33:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:33:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:33:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@405654827 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:33:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 17:33:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-23 17:33:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 1678404939
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 17:33:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-23 17:33:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1238a074
2025-04-23 17:33:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:33:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:33:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:33:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@901087828 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:33:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 17:33:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-23 17:33:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 318869248
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:33:16 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 17:33:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-23 17:33:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@abf1816
2025-04-23 17:33:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:33:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:33:16 INFO  HomeMenuUI - Login successful: ADMIN (ADMIN)
2025-04-23 17:33:22 DEBUG hql - HQL :  SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room ORDER BY b.checkIn DESC 
2025-04-23 17:33:22 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
              -> [joins]
                -> [attribute] - `org.example.entity.Booking(b).user(200493215152500)`
                    [fetched = true]
                <- [attribute] - `org.example.entity.Booking(b).user(200493215152500)`
                -> [attribute] - `org.example.entity.Booking(b).room(200493218242000)`
                    [fetched = true]
                <- [attribute] - `org.example.entity.Booking(b).room(200493218242000)`
              <- [joins]
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
            -> [joins]
              -> [attribute] - `org.example.entity.Booking(b).user(200493215152500)`
                  [fetched = true]
              <- [attribute] - `org.example.entity.Booking(b).user(200493215152500)`
              -> [attribute] - `org.example.entity.Booking(b).room(200493218242000)`
                  [fetched = true]
              <- [attribute] - `org.example.entity.Booking(b).room(200493218242000)`
            <- [joins]
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-04-23 17:33:22 DEBUG create - Created new SQL alias : b1_0
2025-04-23 17:33:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 17:33:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7910e307] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 17:33:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@698e1bf5] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 17:33:22 DEBUG create - Created new SQL alias : r1_0
2025-04-23 17:33:22 DEBUG create - Created new SQL alias : u1_0
2025-04-23 17:33:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking(b).room(200493218242000)]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking(b).user(200493215152500)]

2025-04-23 17:33:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Booking(b).user(200493215152500)) {
              primaryTableReference : users as u1_0
            }
             join LazyTableGroup (r1 : org.example.entity.Booking(b).room(200493218242000)) {
              primaryTableReference : rooms as r1_0
            }
          }
        }
      }
    }

2025-04-23 17:33:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:33:22 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room(200493218242000) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).room(200493218242000))@2055593048 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)
	  org.example.entity.Booking(b).user(200493215152500) -> EntityJoinedFetchInitializer(org.example.entity.Booking(b).user(200493215152500))@786542615 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@2141086055 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 17:33:22 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join users u1_0 on u1_0.user_id=b1_0.user_id join rooms r1_0 on r1_0.room_id=b1_0.room_id order by b1_0.check_in desc
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [0] - [75]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 75
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [4] - [8]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(200493218242000)): 8
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [3] - [8]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(200493215152500)): 13
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).room(200493218242000)#8] : 296190991
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).user(200493215152500)#13] : 490625541
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#75] : 1331459452
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [7] - [204]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).room(200493218242000)#8
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).user(200493215152500)#13
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:09]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [2] - [2025-04-23T17:26:46]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [9] - [COMPLETED]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#75
2025-04-23 17:33:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fec840
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [0] - [76]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 76
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(200493218242000)): 1
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(200493215152500)): 13
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).room(200493218242000)#1] : 2144647660
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#76] : 274020961
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [6] - [2500.0]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [7] - [101]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [8] - [SINGLE]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).room(200493218242000)#1
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [1] - [2025-04-23T12:00:03]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [2] - [2025-04-24T12:00:03]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#76
2025-04-23 17:33:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fec840
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [0] - [74]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 74
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [4] - [4]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(200493218242000)): 4
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [11] - [35]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(200493215152500)): 35
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [10] - [35]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).room(200493218242000)#4] : 1015958146
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).user(200493215152500)#35] : 412494235
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#74] : 1121446076
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [7] - [104]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).room(200493218242000)#4
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [12] - [shahid@gmail.com]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [14] - [SHAHID SHAIKH]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [16] - [STAFF]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).user(200493215152500)#35
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [1] - [2025-04-23T11:00]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [2] - [2025-04-28T18:33:27]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#74
2025-04-23 17:33:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fec840
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [0] - [73]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 73
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(200493218242000)): 1
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(200493215152500)): 13
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#73] : 2070434997
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:50]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [9] - [COMPLETED]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#73
2025-04-23 17:33:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fec840
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [0] - [72]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 72
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(200493218242000)): 1
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(200493215152500)): 13
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#72] : 897374976
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [1] - [2025-04-22T12:10]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [9] - [COMPLETED]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#72
2025-04-23 17:33:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fec840
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [0] - [71]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 71
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [4] - [1]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(200493218242000)): 1
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(200493215152500)): 13
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#71] : 470804165
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:53]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#71
2025-04-23 17:33:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fec840
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [0] - [70]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 70
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).room(200493218242000)): 3
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking(b).user(200493215152500)): 13
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking(b).room(200493218242000)#3] : 1633714160
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#70] : 1486115477
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-23 17:33:22 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking(b).room(200493218242000)#3
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [1] - [2025-04-22T11:40]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [2] - [2025-04-30T10:00]
2025-04-23 17:33:22 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-23 17:33:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#70
2025-04-23 17:33:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fec840
2025-04-23 17:33:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:33:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:33:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:33:35 DEBUG hql - HQL : FROM User WHERE userRole = 'STAFF'
2025-04-23 17:33:35 DEBUG hql - Unable to resolve unqualified attribute [userRole] in local from-clause
2025-04-23 17:33:35 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(200506496929800)`
            <- [root] - `org.example.entity.User(200506496929800)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(200506496929800)`
          <- [root] - `org.example.entity.User(200506496929800)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(200506496929800).userRole`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 17:33:35 DEBUG create - Created new SQL alias : u1_0
2025-04-23 17:33:35 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(200506496929800))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 17:33:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(200506496929800).userRole) 
2025-04-23 17:33:35 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(200506496929800)]
 |  +-BasicFetch [org.example.entity.User(200506496929800).email]
 |  +-BasicFetch [org.example.entity.User(200506496929800).isActive]
 |  +-BasicFetch [org.example.entity.User(200506496929800).name]
 |  +-BasicFetch [org.example.entity.User(200506496929800).password]
 |  \-BasicFetch [org.example.entity.User(200506496929800).userRole]

2025-04-23 17:33:35 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(200506496929800)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 17:33:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:33:35 DEBUG results - Initializer list:
	  org.example.entity.User(200506496929800) -> EntityResultInitializer(org.example.entity.User(200506496929800))@2047162261 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:33:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(200506496929800)): 8
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(200506496929800)#8] : 951116455
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(200506496929800)#8
2025-04-23 17:33:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bdad3bb
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [0] - [35]
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(200506496929800)): 35
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(200506496929800)#35] : 121548383
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [1] - [shahid@gmail.com]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [3] - [SHAHID SHAIKH]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(200506496929800)#35
2025-04-23 17:33:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bdad3bb
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(200506496929800)): 37
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(200506496929800)#37] : 1224918404
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [1] - [sonam@gmail.com]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [3] - [SONAM GUPTA]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(200506496929800)#37
2025-04-23 17:33:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bdad3bb
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [0] - [34]
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(200506496929800)): 34
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(200506496929800)#34] : 1989714905
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:33:35 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 17:33:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(200506496929800)#34
2025-04-23 17:33:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bdad3bb
2025-04-23 17:33:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:33:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:33:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:33:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:33:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:34:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:34:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:34:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:34:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:34:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:34:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:34:18 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1264775610 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:34:18 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 17:34:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-23 17:34:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1436082162
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 17:34:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-23 17:34:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@92b1bda
2025-04-23 17:34:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:34:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:34:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:34:18 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1472186938 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:34:18 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 17:34:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-23 17:34:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 439946124
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 17:34:18 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-23 17:34:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-23 17:34:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@337eeceb
2025-04-23 17:34:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:34:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:34:18 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-23 17:34:18 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-23 17:34:22 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-23 17:34:22 INFO  StaffMenuUI - Booking room for a user.
2025-04-23 17:34:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:34:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:34:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:34:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:34:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:34:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:35:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:35:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:35:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:35:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:35:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:35:36 WARN  StaffMenuUI - Invalid email format entered: 
2025-04-23 17:35:38 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-23 17:35:38 INFO  StaffMenuUI - Booking room for a user.
2025-04-23 17:35:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:35:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:35:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:35:45 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@595396133 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:35:45 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:35:45 DEBUG results - Extracted JDBC value [0] - [36]
2025-04-23 17:35:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 36
2025-04-23 17:35:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#36] : 391056646
2025-04-23 17:35:45 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:35:45 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:35:45 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:35:45 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:35:45 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:35:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#36
2025-04-23 17:35:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc87de4
2025-04-23 17:35:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:35:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:35:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:35:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:35:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:36:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:36:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:36:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:36:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:36:34 INFO  StaffMenuUI - Collected details for 1 guest(s)
2025-04-23 17:36:34 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:36:34 DEBUG TransactionImpl - begin
2025-04-23 17:36:34 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 17:36:34 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 17:36:34 DEBUG results - Initializer list is empty
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@54b35809
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [22]
2025-04-23 17:36:34 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@9fc2f89
2025-04-23 17:36:34 DEBUG TransactionImpl - committing
2025-04-23 17:36:34 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:36:34 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:36:34 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 17:36:34 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:36:34 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:36:34 DEBUG EntityPrinter - org.example.entity.Guest{name=GHARY JHA, guestId=22, user=org.example.entity.User#36, age=25}
2025-04-23 17:36:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:34 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-23 17:36:34 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 17:36:34 DEBUG create - Created new SQL alias : r1_0
2025-04-23 17:36:34 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 17:36:34 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-23 17:36:34 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-23 17:36:34 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 17:36:34 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:36:34 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1007717381 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:36:34 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 408648902
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1384781563
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 913564177
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1972176213
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1215858771
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1254584937
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1670210122
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 2125952195
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1912688982
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 61088069
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 196316233
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1315430544
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 907314155
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 345518693
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 56505723
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1917593312
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:36:34 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:36:34 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-23 17:36:34 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2093bb6c
2025-04-23 17:36:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:34 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:36:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:36:47 INFO  StaffMenuUI - Creating booking for user chetan@gmail.com in room 404 from 2025-04-23T17:36 to 2025-04-25T10:00
2025-04-23 17:36:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:36:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:36:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:36:55 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:36:55 DEBUG TransactionImpl - begin
2025-04-23 17:36:55 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 17:36:55 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 17:36:55 DEBUG results - Initializer list is empty
2025-04-23 17:36:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3fa50a24
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [0] - [77]
2025-04-23 17:36:55 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@58041b11
2025-04-23 17:36:55 DEBUG TransactionImpl - committing
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:36:55 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:36:55 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-23T17:36, checkOut=2025-04-25T10:00, user=org.example.entity.User#36, bookingId=77, room=org.example.entity.Room#16, status=CONFIRMED}
2025-04-23 17:36:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:55 INFO  BookingServiceImpl - Booking created successfully with ID: 77
2025-04-23 17:36:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:36:55 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1226973575 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:36:55 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:36:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:36:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 985514269
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:36:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:36:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@624be1d4
2025-04-23 17:36:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:55 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:36:55 DEBUG TransactionImpl - begin
2025-04-23 17:36:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:36:55 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@862853054 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:36:55 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:36:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:36:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 1359899539
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:36:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:36:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@129e45eb
2025-04-23 17:36:55 DEBUG TransactionImpl - committing
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:36:55 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:36:55 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=404, price=10000.0, roomID=16, roomType=DELUXE}
2025-04-23 17:36:55 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 17:36:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:55 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=false}
2025-04-23 17:36:55 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=false}
2025-04-23 17:36:55 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:36:55 DEBUG TransactionImpl - begin
2025-04-23 17:36:55 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-23 17:36:55 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 17:36:55 DEBUG results - Initializer list is empty
2025-04-23 17:36:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@131c5bd
2025-04-23 17:36:55 DEBUG results - Extracted JDBC value [0] - [49]
2025-04-23 17:36:55 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@394331a8
2025-04-23 17:36:55 DEBUG TransactionImpl - committing
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 17:36:55 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:36:55 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:36:55 DEBUG EntityPrinter - org.example.entity.Invoice{amount=20000.0, booking=org.example.entity.Booking#77, invoiceId=49, issueDate=2025-04-23T17:36:55.540657800, user=org.example.entity.User#36, paymentStatus=PAID}
2025-04-23 17:36:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:36:55 INFO  StaffMenuUI - Room booked successfully for user: chetan@gmail.com
2025-04-23 17:36:59 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-23 17:37:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:37:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1898859288 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:37:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:37:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:37:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:37:04 ERROR UserDaoImpl - Error fetching user by email chetan@gnail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.searchUserDetails(StaffMenuUI.java:595) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:74) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:100) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:13) [classes/:?]
2025-04-23 17:37:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:37:07 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-23 17:37:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:37:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:37:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:37:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:37:14 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@563383249 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:37:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [0] - [36]
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 36
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#36] : 1170391958
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#36
2025-04-23 17:37:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@408d12fc
2025-04-23 17:37:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:37:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:37:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:37:14 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1775639151 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:37:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 36
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#36] : 245652059
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#36
2025-04-23 17:37:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@57f83c82
2025-04-23 17:37:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:37:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:37:14 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2053115425 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1775349092 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1166754951 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 17:37:14 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [0] - [77]
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 77
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#77] : 1303659291
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [5] - [36]
2025-04-23 17:37:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#16) : 16
2025-04-23 17:37:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:37:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1384421718 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:37:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 526655415
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:37:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69dc7b24
2025-04-23 17:37:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#16] : 16 has being loaded by session.internalLoad.
2025-04-23 17:37:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#36) : 36
2025-04-23 17:37:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:37:14 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@695489783 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:37:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 36
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#36] : 1434590943
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#36
2025-04-23 17:37:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e5a2b74
2025-04-23 17:37:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#36] : 36 has being loaded by session.internalLoad.
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [1] - [2025-04-23T17:36]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [2] - [2025-04-25T10:00]
2025-04-23 17:37:14 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 17:37:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#77
2025-04-23 17:37:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@658098a2
2025-04-23 17:37:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:37:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:37:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:37:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:37:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:37:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:37:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:38:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:38:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:38:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:38:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:38:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:38:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:38:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:38:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:38:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:38:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:39:03 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-23 17:39:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:39:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:39:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1348632704 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:39:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [0] - [36]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 36
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#36] : 2079936145
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#36
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3fdbb7ee
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 INFO  StaffMenuUI - Initiating checkout for user: CHETAN ADARI (chetan@gmail.com)
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@851478032 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:39:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 36
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#36] : 391554161
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#36
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2190508d
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@118186765 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1927406983 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1345757830 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 17:39:12 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [0] - [77]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 77
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#77] : 1392412640
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [5] - [36]
2025-04-23 17:39:12 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#16) : 16
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@926498219 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:39:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 889633931
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bac0be5
2025-04-23 17:39:12 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#16] : 16 has being loaded by session.internalLoad.
2025-04-23 17:39:12 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#36) : 36
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@915231178 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:39:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 36
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#36] : 17714374
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#36
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5d515e2c
2025-04-23 17:39:12 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#36] : 36 has being loaded by session.internalLoad.
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [2025-04-23T17:36]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [2025-04-25T10:00]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#77
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53b8a0f7
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1295679363 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1050768030 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1767304024 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)

2025-04-23 17:39:12 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 77
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [11] - [36]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 36
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [10] - [36]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 1411863742
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#36] : 183859529
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#77] : 260256291
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [12] - [chetan@gmail.com]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [14] - [CHETAN ADARI]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#36
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [2025-04-23T17:36]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [2025-04-25T10:00]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#77
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5186b78a
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1063951264 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@2102123480)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@510956085 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@141601266 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1837573438)

2025-04-23 17:39:12 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [0] - [49]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 49
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#49] : 1034783710
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [77]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [5] - [36]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [20000.0]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [2025-04-23T17:36:55.540658]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#49
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@301f9aa0
2025-04-23 17:39:12 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:39:12 DEBUG TransactionImpl - begin
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@797107151 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1837573438)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@977574204 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@2102123480)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1801848529 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-23 17:39:12 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 49
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#49] : 30912386
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [77]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [5] - [36]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [20000.0]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [2025-04-23T17:36:55.540658]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#49
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5adc71e7
2025-04-23 17:39:12 DEBUG TransactionImpl - committing
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:39:12 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:39:12 DEBUG EntityPrinter - org.example.entity.Invoice{amount=20000.0, booking=<uninitialized>, invoiceId=49, issueDate=2025-04-23T17:36:55.540658, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-23 17:39:12 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:39:12 DEBUG TransactionImpl - begin
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1191220798 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@356324579 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@991393180 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)

2025-04-23 17:39:12 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 77
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [11] - [36]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 36
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [10] - [36]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 803441523
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#36] : 1360670846
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#77] : 2062516224
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [12] - [chetan@gmail.com]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [14] - [CHETAN ADARI]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 17:39:12 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#36
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [2025-04-23T17:36]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [2025-04-25T10:00]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#77
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@10d97b64
2025-04-23 17:39:12 DEBUG TransactionImpl - committing
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:39:12 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:39:12 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=404, price=10000.0, roomID=16, roomType=DELUXE}
2025-04-23 17:39:12 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=CHETAN ADARI, isActive=false, userRole=GUEST, userID=36, email=chetan@gmail.com}
2025-04-23 17:39:12 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-23T17:36, checkOut=2025-04-23T17:39:12.609291400, user=org.example.entity.User#36, bookingId=77, room=org.example.entity.Room#16, status=COMPLETED}
2025-04-23 17:39:12 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 INFO  BookingServiceImpl - Booking updated successfully with ID: 77
2025-04-23 17:39:12 INFO  StaffMenuUI - Booking ID: 77 status updated to COMPLETED
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@600543179 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:39:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 1267523139
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34c6b52e
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 INFO  RoomServiceImpl - Fetched room with ID 16: Optional[Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=false}]
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@116901088 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:39:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 157226018
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31b7112d
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:39:12 DEBUG TransactionImpl - begin
2025-04-23 17:39:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:39:12 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@75483598 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:39:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 2030920346
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:39:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:39:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:39:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@346e5cc
2025-04-23 17:39:12 DEBUG TransactionImpl - committing
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-23 17:39:12 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:39:12 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:39:12 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=404, price=10000.0, roomID=16, roomType=DELUXE}
2025-04-23 17:39:12 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:39:12 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 17:39:12 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 17:39:12 INFO  StaffMenuUI - Room 404 is now available after checkout
2025-04-23 17:39:12 INFO  StaffMenuUI - Checkout completed successfully for user: CHETAN ADARI
2025-04-23 17:39:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:39:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:39:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:39:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:39:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:40:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:40:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:40:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:40:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:40:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:40:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:40:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:40:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:40:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:40:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:41:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:41:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:41:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:41:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:41:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:41:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:41:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:41:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:41:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:42:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:42:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:42:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:42:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:42:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:42:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:42:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:42:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:42:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:43:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:43:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:43:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:43:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:43:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:43:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:43:29 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-23 17:43:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:43:39 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@219665748 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:43:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [0] - [36]
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 36
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#36] : 294886047
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#36
2025-04-23 17:43:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@229d508c
2025-04-23 17:43:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:43:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:43:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:43:39 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1585654158 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:43:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 36
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#36] : 888980963
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#36
2025-04-23 17:43:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@737445ab
2025-04-23 17:43:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:43:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:43:39 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1016921310 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@792492836 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@2109567229 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 17:43:39 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [0] - [77]
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 77
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#77] : 1002305589
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [5] - [36]
2025-04-23 17:43:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#16) : 16
2025-04-23 17:43:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:43:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@756108583 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:43:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 701666903
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:43:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e0d9e3f
2025-04-23 17:43:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#16] : 16 has being loaded by session.internalLoad.
2025-04-23 17:43:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#36) : 36
2025-04-23 17:43:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:43:39 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1365333429 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:43:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 36
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#36] : 643565394
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#36
2025-04-23 17:43:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d4b32d1
2025-04-23 17:43:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#36] : 36 has being loaded by session.internalLoad.
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [1] - [2025-04-23T17:36]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [2] - [2025-04-23T17:39:13]
2025-04-23 17:43:39 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 17:43:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#77
2025-04-23 17:43:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a75183d
2025-04-23 17:43:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:43:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:43:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:43:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:43:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:43:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:43:48 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-23 17:44:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:44:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1818951921 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:44:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [0] - [36]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 36
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#36] : 1869172855
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#36
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b31a9e3
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 INFO  StaffMenuUI - Initiating checkout for user: CHETAN ADARI (chetan@gmail.com)
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@2630208 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:44:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 36
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#36] : 1212077582
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#36
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9c5d76b
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2048174950 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1417153600 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1791508071 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-23 17:44:04 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [0] - [77]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 77
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#77] : 110041993
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [5] - [36]
2025-04-23 17:44:04 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#16) : 16
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@757020217 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:44:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 168947686
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e6bbe63
2025-04-23 17:44:04 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#16] : 16 has being loaded by session.internalLoad.
2025-04-23 17:44:04 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#36) : 36
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1765108426 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 17:44:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 36
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#36] : 2095538351
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [chetan@gmail.com]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [CHETAN ADARI]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#36
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e4636c3
2025-04-23 17:44:04 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#36] : 36 has being loaded by session.internalLoad.
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [2025-04-23T17:36]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [2025-04-23T17:39:13]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#77
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b6b466a
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1720078459 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@555984412 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@777813205 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)

2025-04-23 17:44:04 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 77
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [11] - [36]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 36
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [10] - [36]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 1734079809
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#36] : 715949995
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#77] : 202685355
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [12] - [chetan@gmail.com]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [14] - [CHETAN ADARI]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#36
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [2025-04-23T17:36]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [2025-04-23T17:39:13]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#77
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43cc7951
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1971524077 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@2102123480)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1966314043 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1147765156 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1837573438)

2025-04-23 17:44:04 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [0] - [49]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 49
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#49] : 1625681616
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [77]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [5] - [36]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [20000.0]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [2025-04-23T17:36:55.540658]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#49
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@680937c9
2025-04-23 17:44:04 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:44:04 DEBUG TransactionImpl - begin
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@2007836519 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@239471777 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@112176935)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1092280535 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@54929108)

2025-04-23 17:44:04 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 77
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [16]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 16
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [16]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [11] - [36]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 36
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [10] - [36]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#16] : 1075420510
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#36] : 1452528082
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#77] : 1461482866
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [7] - [404]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#16
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [12] - [chetan@gmail.com]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [14] - [CHETAN ADARI]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-23 17:44:04 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#36
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [2025-04-23T17:36]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [2025-04-23T17:39:13]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#77
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c6a3f47
2025-04-23 17:44:04 DEBUG TransactionImpl - committing
2025-04-23 17:44:04 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:44:04 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:44:04 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-23 17:44:04 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:44:04 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:44:04 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=404, price=10000.0, roomID=16, roomType=DELUXE}
2025-04-23 17:44:04 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=CHETAN ADARI, isActive=false, userRole=GUEST, userID=36, email=chetan@gmail.com}
2025-04-23 17:44:04 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-23T17:36, checkOut=2025-04-23T17:44:04.384342800, user=org.example.entity.User#36, bookingId=77, room=org.example.entity.Room#16, status=COMPLETED}
2025-04-23 17:44:04 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 INFO  BookingServiceImpl - Booking updated successfully with ID: 77
2025-04-23 17:44:04 INFO  StaffMenuUI - Booking ID: 77 status updated to COMPLETED
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1212214376 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:44:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 204554655
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43dddfdd
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 INFO  RoomServiceImpl - Fetched room with ID 16: Optional[Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=true}]
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@583021646 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:44:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 1506971749
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a13ad55
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-23 17:44:04 DEBUG TransactionImpl - begin
2025-04-23 17:44:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-23 17:44:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@809350665 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-23 17:44:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 16
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#16] : 170101390
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-23 17:44:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-23 17:44:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#16
2025-04-23 17:44:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5773f83d
2025-04-23 17:44:04 DEBUG TransactionImpl - committing
2025-04-23 17:44:04 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-23 17:44:04 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-23 17:44:04 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-23 17:44:04 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-23 17:44:04 DEBUG EntityPrinter - Listing entities:
2025-04-23 17:44:04 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=404, price=10000.0, roomID=16, roomType=DELUXE}
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 17:44:04 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 17:44:04 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=16, roomNumber=404, roomType=DELUXE, price=10000.0, isAvailable=true}
2025-04-23 17:44:04 INFO  StaffMenuUI - Room 404 is now available after checkout
2025-04-23 17:44:04 INFO  StaffMenuUI - Checkout completed successfully for user: CHETAN ADARI
2025-04-23 17:44:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:44:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:44:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:44:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:44:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:44:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:44:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1be1814c is alive
2025-04-23 17:44:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:44:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:45:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:45:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:45:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:45:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@780b41f2 is alive
2025-04-23 17:45:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:45:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:45:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:45:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:45:50 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@780b41f2: (connection has passed maxLifetime)
2025-04-23 17:45:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (29e5dc31-0ce5-46fd-9fc1-d1ccc8eedbd4)
2025-04-23 17:45:50 DEBUG PoolBase - HikariPool-1 - Established new connection (29e5dc31-0ce5-46fd-9fc1-d1ccc8eedbd4)
2025-04-23 17:45:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b139e7a
2025-04-23 17:45:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:46:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:46:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:46:21 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1be1814c: (connection has passed maxLifetime)
2025-04-23 17:46:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b9675b29-0dd1-4fd6-9b1f-09fd2dfcbfa6)
2025-04-23 17:46:21 DEBUG PoolBase - HikariPool-1 - Established new connection (b9675b29-0dd1-4fd6-9b1f-09fd2dfcbfa6)
2025-04-23 17:46:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d63a95c
2025-04-23 17:46:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:46:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:46:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:46:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:46:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:46:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:47:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e969fbe is alive
2025-04-23 17:47:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:47:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:47:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:47:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@41a99731 is alive
2025-04-23 17:47:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:47:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:47:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 17:47:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f7d1d7d is alive
2025-04-23 17:48:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 17:48:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:48:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:48:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:48:32 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@41a99731: (connection has passed maxLifetime)
2025-04-23 17:48:32 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (59bd7e95-af51-4862-8d9f-b916c8b25ec7)
2025-04-23 17:48:32 DEBUG PoolBase - HikariPool-1 - Established new connection (59bd7e95-af51-4862-8d9f-b916c8b25ec7)
2025-04-23 17:48:32 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@661fdbf4
2025-04-23 17:48:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:48:34 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2f7d1d7d: (connection has passed maxLifetime)
2025-04-23 17:48:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3adad26c-4bc5-4b1a-858f-99f77a350052)
2025-04-23 17:48:34 DEBUG PoolBase - HikariPool-1 - Established new connection (3adad26c-4bc5-4b1a-858f-99f77a350052)
2025-04-23 17:48:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@12f4880a
2025-04-23 17:48:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:48:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:48:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:48:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:48:49 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5e969fbe: (connection has passed maxLifetime)
2025-04-23 17:48:49 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9670a304-7080-4f97-a103-375dfcfe080d)
2025-04-23 17:48:49 DEBUG PoolBase - HikariPool-1 - Established new connection (9670a304-7080-4f97-a103-375dfcfe080d)
2025-04-23 17:48:49 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@56f7f45b
2025-04-23 17:49:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:49:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:49:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:49:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 17:49:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:49:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:49:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 17:50:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:50:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:50:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 17:50:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 17:50:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:50:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:50:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-23 17:50:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:50:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:50:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:50:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 17:51:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:51:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:51:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65aa74c0 is alive
2025-04-23 17:51:20 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@65aa74c0: (connection has passed maxLifetime)
2025-04-23 17:51:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3a5a0168-85aa-4c8a-9cf9-4c90b729a964)
2025-04-23 17:51:20 DEBUG PoolBase - HikariPool-1 - Established new connection (3a5a0168-85aa-4c8a-9cf9-4c90b729a964)
2025-04-23 17:51:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@66dcdce8
2025-04-23 17:51:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 17:51:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 17:51:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:51:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:51:44 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@475835b1: (connection has passed maxLifetime)
2025-04-23 17:51:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a097dc11-9670-4347-a9be-e6279de437d5)
2025-04-23 17:51:44 DEBUG PoolBase - HikariPool-1 - Established new connection (a097dc11-9670-4347-a9be-e6279de437d5)
2025-04-23 17:51:44 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d7b3cb9
2025-04-23 17:51:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 17:51:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 17:52:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@643dc6b2 is alive
2025-04-23 17:52:09 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@643dc6b2: (connection has passed maxLifetime)
2025-04-23 17:52:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d9d908b7-d299-4f5e-be6b-c2640a6235d8)
2025-04-23 17:52:09 DEBUG PoolBase - HikariPool-1 - Established new connection (d9d908b7-d299-4f5e-be6b-c2640a6235d8)
2025-04-23 17:52:09 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@261f0bf7
2025-04-23 17:52:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:52:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:52:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@23f82830 is alive
2025-04-23 17:52:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f88c426 is alive
2025-04-23 17:52:35 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@23f82830: (connection has passed maxLifetime)
2025-04-23 17:52:35 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6bcb11bb-da6d-4d24-bba4-4e5fa48c25dd)
2025-04-23 17:52:35 DEBUG PoolBase - HikariPool-1 - Established new connection (6bcb11bb-da6d-4d24-bba4-4e5fa48c25dd)
2025-04-23 17:52:35 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@624709d4
2025-04-23 17:52:36 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2f88c426: (connection has passed maxLifetime)
2025-04-23 17:52:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6b5347d2-ee72-4198-894d-1c32bfe4de48)
2025-04-23 17:52:36 DEBUG PoolBase - HikariPool-1 - Established new connection (6b5347d2-ee72-4198-894d-1c32bfe4de48)
2025-04-23 17:52:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16a81e33
2025-04-23 17:52:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:52:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:52:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 17:53:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 17:53:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:53:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:53:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 17:53:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 17:53:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 17:53:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 17:53:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 17:53:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:53:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:53:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 17:54:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:54:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:54:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 17:54:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 17:54:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:54:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:54:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 17:54:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 17:55:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 17:55:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 17:55:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 17:55:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:55:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:55:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 17:55:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 17:55:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:55:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:55:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 17:56:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 17:56:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 17:56:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:56:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:56:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 17:56:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 17:56:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:56:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:56:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 17:56:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 17:57:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 17:57:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 17:57:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:57:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:57:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 17:57:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 17:57:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:57:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:57:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 17:57:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 17:58:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 17:58:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:58:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:58:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 17:58:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:58:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:58:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 17:58:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 17:58:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 17:58:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 17:59:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:59:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:59:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 17:59:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 17:59:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 17:59:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 17:59:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 17:59:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 17:59:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 17:59:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:00:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:00:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:00:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 18:00:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 18:00:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 18:00:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:00:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:00:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:00:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 18:01:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:01:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:01:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:01:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 18:01:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 18:01:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:01:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 18:01:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:01:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:02:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:02:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:02:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 18:02:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 18:02:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 18:02:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:02:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:02:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:02:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 18:02:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:03:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:03:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 18:03:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:03:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:03:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 18:03:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 18:03:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:03:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:03:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 18:04:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:04:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:04:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 18:04:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 18:04:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:04:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 18:04:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:04:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:04:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:04:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:04:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 18:04:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 18:05:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:05:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:05:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 18:05:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 18:05:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:05:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:06:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:06:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:06:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 18:06:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 18:06:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:06:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:06:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:06:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 18:06:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 18:06:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:06:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:06:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 18:07:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:07:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:07:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 18:07:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 18:07:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:07:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:07:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:08:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 18:08:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 18:08:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:08:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:08:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:08:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d63a95c is alive
2025-04-23 18:08:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:08:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 18:08:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 18:08:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:08:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:09:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 18:09:06 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3d63a95c: (connection has passed maxLifetime)
2025-04-23 18:09:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (461e5fa0-f292-4c16-8c02-6258506bdbdf)
2025-04-23 18:09:06 DEBUG PoolBase - HikariPool-1 - Established new connection (461e5fa0-f292-4c16-8c02-6258506bdbdf)
2025-04-23 18:09:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@47fd660e
2025-04-23 18:09:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 18:09:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:09:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:09:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:09:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:09:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:09:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 18:09:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:09:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 18:10:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:10:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:10:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:10:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 18:10:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 18:10:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:10:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:10:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 18:10:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47fd660e is alive
2025-04-23 18:11:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 18:11:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:11:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:11:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:11:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 18:11:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:11:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:11:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:11:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b139e7a is alive
2025-04-23 18:11:48 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5b139e7a: (connection has passed maxLifetime)
2025-04-23 18:11:48 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (625a4bf2-d239-40d2-8905-32bd438e3a71)
2025-04-23 18:11:48 DEBUG PoolBase - HikariPool-1 - Established new connection (625a4bf2-d239-40d2-8905-32bd438e3a71)
2025-04-23 18:11:48 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4cd6843b
2025-04-23 18:11:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 18:12:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:12:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:12:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:12:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 18:12:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 18:12:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47fd660e is alive
2025-04-23 18:12:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:12:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:12:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:12:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 18:13:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:13:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:13:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:13:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 18:13:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cd6843b is alive
2025-04-23 18:13:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:13:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:13:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 18:13:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:14:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@661fdbf4 is alive
2025-04-23 18:14:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:14:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:14:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47fd660e is alive
2025-04-23 18:14:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:14:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56f7f45b is alive
2025-04-23 18:14:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:14:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:14:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 18:15:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:15:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@261f0bf7 is alive
2025-04-23 18:15:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:15:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:15:13 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@261f0bf7: (connection has passed maxLifetime)
2025-04-23 18:15:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (79f06386-e676-4ca6-8fcb-7008ae0f7456)
2025-04-23 18:15:13 DEBUG PoolBase - HikariPool-1 - Established new connection (79f06386-e676-4ca6-8fcb-7008ae0f7456)
2025-04-23 18:15:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7bda6866
2025-04-23 18:15:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cd6843b is alive
2025-04-23 18:15:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@16a81e33 is alive
2025-04-23 18:15:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:15:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:15:45 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@661fdbf4: (connection has passed maxLifetime)
2025-04-23 18:15:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (702a8e42-5236-4cd7-8c73-b8993fbbddf3)
2025-04-23 18:15:45 DEBUG PoolBase - HikariPool-1 - Established new connection (702a8e42-5236-4cd7-8c73-b8993fbbddf3)
2025-04-23 18:15:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7f46e473
2025-04-23 18:15:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:16:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f4880a is alive
2025-04-23 18:16:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47fd660e is alive
2025-04-23 18:16:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:16:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:16:16 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@56f7f45b: (connection has passed maxLifetime)
2025-04-23 18:16:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8b79e9b3-8ce7-42aa-9a4d-8a40de80d81d)
2025-04-23 18:16:16 DEBUG PoolBase - HikariPool-1 - Established new connection (8b79e9b3-8ce7-42aa-9a4d-8a40de80d81d)
2025-04-23 18:16:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@44eac958
2025-04-23 18:16:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:16:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:16:43 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@16a81e33: (connection has passed maxLifetime)
2025-04-23 18:16:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7302b550-b7d6-418e-899a-2e8c29512ea3)
2025-04-23 18:16:43 DEBUG PoolBase - HikariPool-1 - Established new connection (7302b550-b7d6-418e-899a-2e8c29512ea3)
2025-04-23 18:16:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7a74ff2c
2025-04-23 18:16:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:16:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7d7b3cb9 is alive
2025-04-23 18:16:52 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@12f4880a: (connection has passed maxLifetime)
2025-04-23 18:16:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3a7c71dc-4105-4b41-b988-953f3d2d8dd9)
2025-04-23 18:16:52 DEBUG PoolBase - HikariPool-1 - Established new connection (3a7c71dc-4105-4b41-b988-953f3d2d8dd9)
2025-04-23 18:16:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@52835bb2
2025-04-23 18:16:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7bda6866 is alive
2025-04-23 18:17:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:17:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:17:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cd6843b is alive
2025-04-23 18:17:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7f46e473 is alive
2025-04-23 18:17:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:17:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:17:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@66dcdce8 is alive
2025-04-23 18:17:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47fd660e is alive
2025-04-23 18:18:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44eac958 is alive
2025-04-23 18:18:06 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7d7b3cb9: (connection has passed maxLifetime)
2025-04-23 18:18:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (499bb9b8-4144-4d11-b0ed-3810342b5e08)
2025-04-23 18:18:06 DEBUG PoolBase - HikariPool-1 - Established new connection (499bb9b8-4144-4d11-b0ed-3810342b5e08)
2025-04-23 18:18:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@27818c95
2025-04-23 18:18:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:18:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:18:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a74ff2c is alive
2025-04-23 18:18:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:18:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7bda6866 is alive
2025-04-23 18:18:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:18:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:18:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52835bb2 is alive
2025-04-23 18:18:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cd6843b is alive
2025-04-23 18:19:02 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@66dcdce8: (connection has passed maxLifetime)
2025-04-23 18:19:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7c61c23d-dd0a-49d7-8fa4-7b4710864d3a)
2025-04-23 18:19:02 DEBUG PoolBase - HikariPool-1 - Established new connection (7c61c23d-dd0a-49d7-8fa4-7b4710864d3a)
2025-04-23 18:19:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2294b510
2025-04-23 18:19:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:19:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:19:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7f46e473 is alive
2025-04-23 18:19:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47fd660e is alive
2025-04-23 18:19:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:19:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:19:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44eac958 is alive
2025-04-23 18:19:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27818c95 is alive
2025-04-23 18:19:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a74ff2c is alive
2025-04-23 18:20:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:20:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:20:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@624709d4 is alive
2025-04-23 18:20:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7bda6866 is alive
2025-04-23 18:20:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:20:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:20:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2294b510 is alive
2025-04-23 18:20:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52835bb2 is alive
2025-04-23 18:20:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cd6843b is alive
2025-04-23 18:21:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:21:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:21:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7f46e473 is alive
2025-04-23 18:21:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47fd660e is alive
2025-04-23 18:21:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44eac958 is alive
2025-04-23 18:21:31 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@624709d4: (connection has passed maxLifetime)
2025-04-23 18:21:31 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ead1b8cf-5294-4351-a480-483dc8e0654b)
2025-04-23 18:21:31 DEBUG PoolBase - HikariPool-1 - Established new connection (ead1b8cf-5294-4351-a480-483dc8e0654b)
2025-04-23 18:21:31 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@74c1900f
2025-04-23 18:21:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a74ff2c is alive
2025-04-23 18:21:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27818c95 is alive
2025-04-23 18:21:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:21:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:21:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7bda6866 is alive
2025-04-23 18:22:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:22:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:22:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2294b510 is alive
2025-04-23 18:22:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cd6843b is alive
2025-04-23 18:22:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:22:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:22:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@52835bb2 is alive
2025-04-23 18:23:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@47fd660e is alive
2025-04-23 18:23:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:23:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:23:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7f46e473 is alive
2025-04-23 18:23:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7a74ff2c is alive
2025-04-23 18:23:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@44eac958 is alive
2025-04-23 18:23:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27818c95 is alive
2025-04-23 18:23:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@74c1900f is alive
2025-04-23 18:23:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7bda6866 is alive
2025-04-23 18:23:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:23:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:24:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2294b510 is alive
2025-04-23 18:24:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:24:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:24:36 WARN  HomeMenuUI - Invalid login attempt for email: superadmin@dss.com
2025-04-23 18:24:42 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-23 18:24:42 WARN  HomeMenuUI - Invalid email format entered: enter email (or 0 to cancel): 
2025-04-23 18:25:19 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-23 18:25:19 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-23 18:25:19 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-23 18:25:19 DEBUG HikariConfig - autoCommit......................true
2025-04-23 18:25:19 DEBUG HikariConfig - catalog.........................none
2025-04-23 18:25:19 DEBUG HikariConfig - connectionInitSql...............none
2025-04-23 18:25:19 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-23 18:25:19 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-23 18:25:19 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-23 18:25:19 DEBUG HikariConfig - dataSource......................none
2025-04-23 18:25:19 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-23 18:25:19 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-23 18:25:19 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-23 18:25:19 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-23 18:25:19 DEBUG HikariConfig - exceptionOverride...............none
2025-04-23 18:25:19 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-23 18:25:19 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-23 18:25:19 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-23 18:25:19 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-23 18:25:19 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-23 18:25:19 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-23 18:25:19 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-23 18:25:19 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-23 18:25:19 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-23 18:25:19 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-23 18:25:19 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-23 18:25:19 DEBUG HikariConfig - metricRegistry..................none
2025-04-23 18:25:19 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-23 18:25:19 DEBUG HikariConfig - minimumIdle.....................10
2025-04-23 18:25:19 DEBUG HikariConfig - password........................<masked>
2025-04-23 18:25:19 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-23 18:25:19 DEBUG HikariConfig - readOnly........................false
2025-04-23 18:25:19 DEBUG HikariConfig - registerMbeans..................false
2025-04-23 18:25:19 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-23 18:25:19 DEBUG HikariConfig - schema..........................none
2025-04-23 18:25:19 DEBUG HikariConfig - threadFactory...................internal
2025-04-23 18:25:19 DEBUG HikariConfig - transactionIsolation............default
2025-04-23 18:25:19 DEBUG HikariConfig - username........................"dbuser"
2025-04-23 18:25:19 DEBUG HikariConfig - validationTimeout...............5000
2025-04-23 18:25:19 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0cb3f74d-0b83-4a65-bf07-737c47d14194)
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (0cb3f74d-0b83-4a65-bf07-737c47d14194)
2025-04-23 18:25:19 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5cc126dc
2025-04-23 18:25:19 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-23 18:25:19 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-23 18:25:19 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-23 18:25:19 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-23 18:25:19 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-23 18:25:19 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-23 18:25:19 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-23 18:25:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e8bcad15-5cf7-460a-a200-47a51c61579e)
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (e8bcad15-5cf7-460a-a200-47a51c61579e)
2025-04-23 18:25:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@292c855c
2025-04-23 18:25:19 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-23 18:25:19 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-23 18:25:19 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-23 18:25:19 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-23 18:25:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (05879cc7-4749-4a52-afd8-fd214ca04c73)
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (05879cc7-4749-4a52-afd8-fd214ca04c73)
2025-04-23 18:25:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1043dbb1
2025-04-23 18:25:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2bd23070-cbb9-4888-9784-fa47d23ab7b1)
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@779de014
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2234078
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@66908383
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (2bd23070-cbb9-4888-9784-fa47d23ab7b1)
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-23 18:25:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5573ff9
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7c2a69b4
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@a619c2
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@648ee871
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@375b5b7f
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1813f3e9
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@28cb9120
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3b152928
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@349d0836
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@349d0836
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7b44b63d
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@38499e48
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4905c46b
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@17ae7628
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1136b469
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6579c3d9
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2b87581
2025-04-23 18:25:19 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@66434cc8
2025-04-23 18:25:19 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7808fb9] into BootstrapContext; was [null]
2025-04-23 18:25:19 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@773bd77b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6b580b88]
2025-04-23 18:25:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (409bf130-c755-41fe-8251-d774a143adc7)
2025-04-23 18:25:19 DEBUG PoolBase - HikariPool-1 - Established new connection (409bf130-c755-41fe-8251-d774a143adc7)
2025-04-23 18:25:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@674eb035
2025-04-23 18:25:19 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-23 18:25:19 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-23 18:25:19 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5d9c61c9-9fcd-4e3a-85c8-ba3d4a52e924)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Established new connection (5d9c61c9-9fcd-4e3a-85c8-ba3d4a52e924)
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b489426
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e4aa3e30-381b-4c91-9001-0dafa6c39e7f)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Established new connection (e4aa3e30-381b-4c91-9001-0dafa6c39e7f)
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8ef19f8
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d8016bee-473a-4aa7-a0d9-f68b42187cda)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Established new connection (d8016bee-473a-4aa7-a0d9-f68b42187cda)
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ae8932c
2025-04-23 18:25:20 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-23 18:25:20 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-23 18:25:20 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ff9d2927-a9aa-4d84-ab0b-026842c277ad)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Established new connection (ff9d2927-a9aa-4d84-ab0b-026842c277ad)
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6362ada0
2025-04-23 18:25:20 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-23 18:25:20 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cb032ebe-e894-47ef-8ffd-3b98dac14e71)
2025-04-23 18:25:20 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-23 18:25:20 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@68e7c8c3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@319c3a25)
2025-04-23 18:25:20 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@238bfd6c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ef1695a)
2025-04-23 18:25:20 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-23 18:25:20 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@60859f5a
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60859f5a
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@349d0836`
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 18:25:20 DEBUG PoolBase - HikariPool-1 - Established new connection (cb032ebe-e894-47ef-8ffd-3b98dac14e71)
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58d5b18f
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 18:25:20 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-23 18:25:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:25:20 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-23 18:25:20 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34d4860f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@665522c2]
2025-04-23 18:25:20 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-23 18:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-23 18:25:20 DEBUG EntityBinder - Import with entity name User
2025-04-23 18:25:20 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property userID
2025-04-23 18:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for email
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property email
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property isActive
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property name
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for password
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property password
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property userRole
2025-04-23 18:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-23 18:25:20 DEBUG EntityBinder - Import with entity name Guest
2025-04-23 18:25:20 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property guestId
2025-04-23 18:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for age
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property age
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for name
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property name
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property user
2025-04-23 18:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-23 18:25:20 DEBUG EntityBinder - Import with entity name Booking
2025-04-23 18:25:20 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property bookingId
2025-04-23 18:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property checkIn
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property checkOut
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property room
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for status
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property status
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property user
2025-04-23 18:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-23 18:25:20 DEBUG EntityBinder - Import with entity name Room
2025-04-23 18:25:20 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property roomID
2025-04-23 18:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property isAvailable
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for price
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property price
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property roomNumber
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property roomType
2025-04-23 18:25:20 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-23 18:25:20 DEBUG EntityBinder - Import with entity name Invoice
2025-04-23 18:25:20 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property invoiceId
2025-04-23 18:25:20 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property amount
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property booking
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property issueDate
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-23 18:25:20 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-23 18:25:20 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-23 18:25:20 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-23 18:25:20 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property paymentStatus
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-23 18:25:20 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-23 18:25:20 DEBUG PropertyBinder - Building property user
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-23 18:25:20 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-23 18:25:20 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-23 18:25:20 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-23 18:25:20 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-23 18:25:20 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-23 18:25:20 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-23 18:25:20 DEBUG SessionFactoryImpl - Building session factory
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 18:25:20 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 18:25:20 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 18:25:20 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6b9fdbc6, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-23 18:25:20 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4342c13] under count; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2921a36a] under every; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2b73bd6b] under any; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f992a3a] under sinh; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30bf26df] under cosh; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@261bd7b] under tanh; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f9e08d4] under pi; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@390037e7] under log; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@29bcf51d] under position; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@45e617c4] under overlay; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@412c5e8b] under trim; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3fe512d2] under cast; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fde8f7c] under collate; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5ad6cc21] under extract; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5403799b] under ifnull; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@d13960e] under pad; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@122635ef] under str; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1fecfaea] under format; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@33f2cfda] under timestampadd; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@11d2dd2d] under timestampdiff; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@322e49ee] under current_date; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4aeb0e2b] under current_time; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@648c5fb3] under current_timestamp; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@47b33e07] under local_date; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7126e26] under local_time; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@151ab2b9] under local_datetime; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13ed066e] under offset_datetime; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4d705112] under instant; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2d5a1588] under sql; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@390037e7
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f116ca2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@261bd7b
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f992a3a
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30bf26df
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f9e08d4
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@20801cbb] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7126e26
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@151ab2b9
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@58f2466c] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5809fa26] under bit_length; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64763e49] under octet_length; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23468512] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@29bcf51d
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69cd7630] under bitand; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e8279e5] under bitor; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b53840a] under bitxor; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3caafa67] under bitnot; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e546734] under median; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b0d1fa] under insert; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@e9474f] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@45e617c4
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1c61eda5] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-23 18:25:20 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@52d3fafd] under listagg; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@46fc522d] under array; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4262fdeb] under array_list; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2213639b] under array_agg; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@35adf623] under array_position; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@315c081] under array_positions; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@41bfa9e9] under array_positions_list; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68b7d0ef] under array_length; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@6ad1701a] under array_concat; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@319642db] under array_prepend; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@59498d94] under array_append; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@bb25753] under array_contains; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@ee21292] under array_contains_nullable; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3a1f2a1] under array_overlaps; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@40ce9049] under array_overlaps_nullable; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d05f453] under array_get; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@4d93f75b] under array_set; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@f2b90fc] under array_remove_index; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bb41f5c] under array_slice; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24c685e7] under array_trim; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5921b93c] under array_fill; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@faea4da] under array_fill_list; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@13803a94] under array_to_string; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@168ad26f] under mode; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4f93bf0a] under percentile_cont; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@322204dc] under percentile_disc; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@55acec99] under rank; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@61191222] under dense_rank; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@58833798] under percent_rank; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7f3ca64a] under cume_dist; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3f8dfe74] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@401c4250] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a950fdd] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b53840a
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@37a9b687] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2233cac0] under trunc; prior registration was null
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-23 18:25:21 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fb5025] under date_trunc; prior registration was null
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Date current date
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Time current time
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - mode()
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double pi
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Object sql
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-23 18:25:21 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-23 18:25:21 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-23 18:25:21 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-23 18:25:21 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-23 18:25:21 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 18:25:21 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-23 18:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-23 18:25:21 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 18:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 18:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 18:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 18:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-23 18:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-23 18:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 18:25:21 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-23 18:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-23 18:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-23 18:25:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-23 18:25:21 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-23 18:25:21 DEBUG creation - Starting post-init callbacks
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-23 18:25:21 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-23 18:25:21 DEBUG create - Created new SQL alias : g1_0
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@28831d69] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-23 18:25:21 DEBUG create - Created new SQL alias : u1_0
2025-04-23 18:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-23 18:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 18:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-23 18:25:21 DEBUG create - Created new SQL alias : b1_0
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d84418a] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-23 18:25:21 DEBUG create - Created new SQL alias : r1_0
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9205c0a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-23 18:25:21 DEBUG create - Created new SQL alias : u1_0
2025-04-23 18:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-23 18:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-23 18:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-23 18:25:21 DEBUG create - Created new SQL alias : r1_0
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-23 18:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-23 18:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-23 18:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-23 18:25:21 DEBUG create - Created new SQL alias : u1_0
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 18:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-23 18:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 18:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-23 18:25:21 DEBUG create - Created new SQL alias : i1_0
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d1f3fe9] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-23 18:25:21 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7b451bf4] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-23 18:25:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-23 18:25:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-23 18:25:21 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-23 18:25:21 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-23 18:25:21 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-23 18:25:21 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-23 18:25:21 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-23 18:25:21 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-23 18:25:21 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34d4860f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@785a4557]
2025-04-23 18:25:21 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-23 18:25:21 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-23 18:25:21 DEBUG Table - No alter strings for table : bookings
2025-04-23 18:25:21 DEBUG Table - No alter strings for table : guests
2025-04-23 18:25:21 DEBUG Table - No alter strings for table : invoices
2025-04-23 18:25:21 DEBUG Table - No alter strings for table : rooms
2025-04-23 18:25:21 DEBUG Table - No alter strings for table : users
2025-04-23 18:25:21 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5dd6a4c8
2025-04-23 18:25:21 DEBUG SessionFactoryRegistry - Registering SessionFactory: f6e46ff1-215f-4667-aad5-1860ed2585e9 (my-persistence-unit)
2025-04-23 18:25:21 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-23 18:25:21 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-23 18:25:21 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-23 18:25:21 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-23 18:25:22 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-23 18:25:22 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-23 18:25:22 DEBUG create - Created new SQL alias : u1_0
2025-04-23 18:25:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-23 18:25:22 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-23 18:25:22 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-23 18:25:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-23 18:25:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-23 18:25:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 18:25:22 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1976096999 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 18:25:22 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 18:25:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:25:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:25:22 ERROR UserDaoImpl - Error fetching user by email superadmin@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.authenticateUser(UserServiceImpl.java:59) [classes/:?]
	at org.example.controller.UserController.authenticateUser(UserController.java:41) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:74) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:45) [classes/:?]
	at org.example.Main.main(Main.java:13) [classes/:?]
2025-04-23 18:25:22 WARN  HomeMenuUI - Invalid login attempt for email: superadmin@gmail.com
2025-04-23 18:25:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 18:25:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1261095698 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 18:25:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 18:25:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 18:25:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1027629029
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 18:25:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 18:25:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@62f7d7bd
2025-04-23 18:25:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:25:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:25:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 18:25:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1549563980 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 18:25:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 18:25:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 18:25:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 170899621
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 18:25:36 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-23 18:25:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 18:25:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@350e3fb4
2025-04-23 18:25:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:25:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:25:36 INFO  HomeMenuUI - Login successful: SUPER ADMIN (ADMIN)
2025-04-23 18:25:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:25:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:26:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:26:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:26:44 WARN  HomeMenuUI - Invalid email format entered: enter email (or 0 to cancel): 
2025-04-23 18:26:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:26:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:26:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:26:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:27:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:27:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 18:27:06 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@766302874 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 18:27:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 18:27:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 18:27:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1090446425
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-23 18:27:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 18:27:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@bcd9ed6
2025-04-23 18:27:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:27:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:27:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 18:27:06 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1073352504 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 18:27:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 18:27:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 18:27:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 748127799
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 18:27:06 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-23 18:27:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 18:27:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2718b3
2025-04-23 18:27:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:27:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:27:06 INFO  HomeMenuUI - Login successful: SUPER ADMIN (SUPER_ADMIN)
2025-04-23 18:27:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:27:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:27:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:27:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:27:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:27:13 INFO  AdminMenuUI - Starting admin access grant/revoke process.
2025-04-23 18:27:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:27:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:27:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-23 18:27:18 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@793068998 (SingleTableEntityPersister(org.example.entity.User))

2025-04-23 18:27:18 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-23 18:27:18 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-23 18:27:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-23 18:27:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1814190811
2025-04-23 18:27:18 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-23 18:27:18 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-23 18:27:18 DEBUG results - Extracted JDBC value [3] - [SUPER ADMIN]
2025-04-23 18:27:18 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-23 18:27:18 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-23 18:27:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-23 18:27:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69cc49ec
2025-04-23 18:27:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:27:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-23 18:27:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:27:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:27:33 WARN  AdminMenuUI - Attempt to revoke SUPER_ADMIN access for email: superadmin@dss.com
2025-04-23 18:27:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:27:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:28:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:28:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:28:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:28:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:28:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:28:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:28:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:28:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:28:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:28:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:29:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:29:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:29:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:29:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:29:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:29:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:29:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:29:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:30:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:30:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:30:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:30:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:30:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:30:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:30:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:30:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:30:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:30:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:30:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:31:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:31:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:31:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:31:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:31:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:31:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:31:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:31:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:31:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:32:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:32:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:32:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:32:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:32:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:32:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:32:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:32:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:32:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:32:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:33:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:33:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:33:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:33:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:33:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:33:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:33:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:33:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:34:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:34:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:34:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:34:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:34:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:34:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:34:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:34:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:34:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:34:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:35:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:35:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:35:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:35:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:35:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:35:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:35:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:35:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:35:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:36:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:36:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:36:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:36:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:36:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:36:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:36:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:36:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:36:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:36:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:36:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:36:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:37:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:37:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:37:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:37:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:37:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:37:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:37:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:38:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:38:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:38:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:38:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:38:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:38:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:38:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:38:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:38:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:38:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:38:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:38:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:39:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:39:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:39:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:39:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:39:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:39:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:39:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:39:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:40:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:40:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:40:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:40:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:40:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:40:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:40:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:40:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:40:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:40:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:41:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:41:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:41:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:41:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:41:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:41:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:41:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:41:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:41:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:41:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:41:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:42:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:42:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:42:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:42:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:42:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:42:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:42:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:42:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:43:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:43:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:43:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:43:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:43:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:43:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:43:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:43:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:43:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:43:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:44:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:44:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:44:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:44:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:44:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:44:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:44:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:44:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:44:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:45:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:45:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:45:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:45:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:45:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:45:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:45:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:45:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:45:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:46:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:46:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:46:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:46:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:46:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:46:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:46:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
2025-04-23 18:46:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:46:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:46:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:46:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@58d5b18f is alive
2025-04-23 18:47:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1043dbb1 is alive
2025-04-23 18:47:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8ef19f8 is alive
2025-04-23 18:47:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:47:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:47:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5573ff9 is alive
2025-04-23 18:47:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:47:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:48:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@292c855c is alive
2025-04-23 18:48:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cc126dc is alive
2025-04-23 18:48:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6362ada0 is alive
2025-04-23 18:48:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-23 18:48:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-23 18:48:28 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@292c855c: (connection has passed maxLifetime)
2025-04-23 18:48:28 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (38dad1a2-03e2-49c4-8e0f-6bb0b91eae0f)
2025-04-23 18:48:28 DEBUG PoolBase - HikariPool-1 - Established new connection (38dad1a2-03e2-49c4-8e0f-6bb0b91eae0f)
2025-04-23 18:48:28 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1469fcaa
2025-04-23 18:48:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674eb035 is alive
2025-04-23 18:48:33 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@58d5b18f: (connection has passed maxLifetime)
2025-04-23 18:48:33 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bfd42ad4-627f-4dc1-ad5a-ce3c34c0f9ab)
2025-04-23 18:48:33 DEBUG PoolBase - HikariPool-1 - Established new connection (bfd42ad4-627f-4dc1-ad5a-ce3c34c0f9ab)
2025-04-23 18:48:33 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1aa375c0
2025-04-23 18:48:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ae8932c is alive
2025-04-23 18:48:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b489426 is alive
