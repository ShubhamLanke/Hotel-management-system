2025-04-21 10:16:05 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 10:16:05 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 10:16:06 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 10:16:06 DEBUG HikariConfig - autoCommit......................true
2025-04-21 10:16:06 DEBUG HikariConfig - catalog.........................none
2025-04-21 10:16:06 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 10:16:06 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 10:16:06 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 10:16:06 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@565f390
2025-04-21 10:16:06 DEBUG HikariConfig - dataSource......................none
2025-04-21 10:16:06 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 10:16:06 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 10:16:06 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 10:16:06 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 10:16:06 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 10:16:06 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 10:16:06 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 10:16:06 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 10:16:06 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 10:16:06 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 10:16:06 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 10:16:06 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 10:16:06 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 10:16:06 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 10:16:06 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 10:16:06 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 10:16:06 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 10:16:06 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 10:16:06 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 10:16:06 DEBUG HikariConfig - password........................<masked>
2025-04-21 10:16:06 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 10:16:06 DEBUG HikariConfig - readOnly........................false
2025-04-21 10:16:06 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 10:16:06 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 10:16:06 DEBUG HikariConfig - schema..........................none
2025-04-21 10:16:06 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 10:16:06 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 10:16:06 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 10:16:06 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 10:16:06 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df6569d3-2878-4790-a4d1-f68bd04750f9)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (df6569d3-2878-4790-a4d1-f68bd04750f9)
2025-04-21 10:16:06 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e3181aa
2025-04-21 10:16:06 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 10:16:06 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 10:16:06 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 10:16:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 10:16:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (352eb353-94f7-4efc-a604-f0952538008a)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (352eb353-94f7-4efc-a604-f0952538008a)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6a6441c2
2025-04-21 10:16:06 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 10:16:06 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f2f48993-a961-42a0-80db-4bac050da65e)
2025-04-21 10:16:06 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (f2f48993-a961-42a0-80db-4bac050da65e)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@609c2ab2
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 10:16:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 10:16:06 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 10:16:06 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (36dddc8a-87e0-4161-b27a-26b3303949c1)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (36dddc8a-87e0-4161-b27a-26b3303949c1)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@259eb8c5
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (26891272-9c2d-41b1-a685-076d9ae18590)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (26891272-9c2d-41b1-a685-076d9ae18590)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6dbc97e5
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@352c308
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@71e9a896
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43c67247
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@fac80
2025-04-21 10:16:06 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@726386ed
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a1dceed2-638f-43e1-aa71-04386dfeec5f)
2025-04-21 10:16:06 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24f43aa3] into BootstrapContext; was [null]
2025-04-21 10:16:06 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@63fd4873] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1e11bc55]
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (a1dceed2-638f-43e1-aa71-04386dfeec5f)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1471fcee
2025-04-21 10:16:06 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 10:16:06 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ca8b2c71-5238-419b-8d2b-f763953a7dcb)
2025-04-21 10:16:06 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (ca8b2c71-5238-419b-8d2b-f763953a7dcb)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@15b98d68
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (35b65349-cf7f-4086-ab12-88a56f15b275)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (35b65349-cf7f-4086-ab12-88a56f15b275)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@45b1478a
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a2be285d-fd2b-4373-bc65-7eb6d3cd2da2)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (a2be285d-fd2b-4373-bc65-7eb6d3cd2da2)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4cbbf366
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2dededd2-e3ae-4272-9485-18e3a5292aa8)
2025-04-21 10:16:06 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 10:16:06 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 10:16:06 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 10:16:06 DEBUG PoolBase - HikariPool-1 - Established new connection (2dededd2-e3ae-4272-9485-18e3a5292aa8)
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57b6e093
2025-04-21 10:16:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-21 10:16:07 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 10:16:07 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 10:16:07 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 10:16:07 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2063c53e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2a9bc08f)
2025-04-21 10:16:07 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50f40653) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a3d0f6)
2025-04-21 10:16:07 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 10:16:07 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70e29e14`
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:16:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:16:07 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 10:16:07 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5edf2821] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4dbad37]
2025-04-21 10:16:07 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property id
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property number
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property id
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property name
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property passport
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name User
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property userID
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property email
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property isActive
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property name
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property password
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property userRole
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property guestId
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property age
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property name
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property user
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property bookingId
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property checkIn
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property checkOut
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property room
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property status
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property user
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Room
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property roomID
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property price
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property roomType
2025-04-21 10:16:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 10:16:07 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 10:16:07 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 10:16:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property amount
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property booking
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property issueDate
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 10:16:07 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 10:16:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 10:16:07 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 10:16:07 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:16:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:16:07 DEBUG PropertyBinder - Building property user
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 10:16:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 10:16:07 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 10:16:07 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 10:16:07 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 10:16:07 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@550de6b8, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 10:16:07 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@40de8f93] under count; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@45ab3bdd] under every; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f10f633] under any; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403] under sinh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4] under cosh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@798dad3d] under tanh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27abb6ca] under pi; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620] under log; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3f6bf8aa] under position; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@d48e998] under overlay; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1a256d80] under trim; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3a3ed300] under cast; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1984212d] under collate; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3af58f76] under extract; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@27a09971] under ifnull; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@152c4495] under pad; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1d06f16f] under str; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7c5d1d25] under format; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@26ca61bf] under timestampadd; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6870c3c2] under timestampdiff; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a5e167a] under current_date; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e06f7d] under current_time; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66a5755] under current_timestamp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@771a7d53] under local_date; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6d6d480c] under local_time; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e95595b] under local_datetime; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a917723] under offset_datetime; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e4579c7] under instant; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59b32539] under sql; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@798dad3d
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27abb6ca
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@60a7e509] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6d6d480c
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@e95595b
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6274670b] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@53ce2392] under bit_length; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@32d5279] under octet_length; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c067c0d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3f6bf8aa
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d0b0cb9] under bitand; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f7b6639] under bitor; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35] under bitxor; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3965bdf9] under bitnot; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c0e00a8] under median; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd15072] under insert; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4dde8976] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@d48e998
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4887de2b] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@294f9d50] under listagg; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@50a13c2f] under array; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@610d28b8] under array_list; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@74606204] under array_agg; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@32ec9c90] under array_position; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@45545e7a] under array_positions; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@ebda593] under array_positions_list; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5792c08c] under array_length; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@5e13f156] under array_concat; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6e60f18] under array_prepend; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@5cf8676a] under array_append; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@dd4aec3] under array_contains; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4dac121d] under array_contains_nullable; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@4519f676] under array_overlaps; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@78ec89a6] under array_overlaps_nullable; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642a16aa] under array_get; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@4e224df5] under array_set; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@4337afd] under array_remove_index; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d02af26] under array_slice; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fa7df1] under array_trim; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4116f66a] under array_fill; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@59c04bee] under array_fill_list; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@22bdb1d0] under array_to_string; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32118208] under mode; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@414f87a9] under percentile_cont; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1ddc6db2] under percentile_disc; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@416d56f2] under rank; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6e31d989] under dense_rank; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1b01a0d] under percent_rank; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ed71727] under cume_dist; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@72a2312e] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@47c7a9e5] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7951c3a2] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@20580d4e] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@c689973] under trunc; prior registration was null
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 10:16:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41fa769c] under date_trunc; prior registration was null
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 10:16:07 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 10:16:07 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 10:16:07 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 10:16:07 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 10:16:07 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:07 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 10:16:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 10:16:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 10:16:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 10:16:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 10:16:08 DEBUG creation - Starting post-init callbacks
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 10:16:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : g1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b31af02] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : p1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : b1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3af36922] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ce267cc] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : p1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38f617f4] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : p2_0
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 10:16:08 DEBUG create - Created new SQL alias : i1_0
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7c91fe86] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 10:16:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54a056e4] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 10:16:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 10:16:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 10:16:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 10:16:08 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 10:16:08 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 10:16:08 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 10:16:08 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 10:16:08 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 10:16:08 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5edf2821] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@52c46334]
2025-04-21 10:16:08 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 10:16:08 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : bookings
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : guests
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : invoices
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : Passport
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : Persons
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : rooms
2025-04-21 10:16:08 DEBUG Table - No alter strings for table : users
2025-04-21 10:16:08 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@9f9146d
2025-04-21 10:16:08 DEBUG SessionFactoryRegistry - Registering SessionFactory: d0f729c8-00ff-4397-9035-5af51ce9a887 (my-persistence-unit)
2025-04-21 10:16:08 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 10:16:08 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 10:16:08 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 10:16:08 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 10:16:09 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:16:09 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:16:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 10:16:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 10:16:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 10:16:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 10:16:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:16:09 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@827530509 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:16:09 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1870436181
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 595382884
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 85775058
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1428242559
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1119158442
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 119473514
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1693900057
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 998988608
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1364307147
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 773511134
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2086062353
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 501668992
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1099766787
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 961648587
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 10:16:09 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 10:16:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 10:16:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434a8938
2025-04-21 10:16:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:16:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:16:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:16:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:17:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:17:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:17:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:17:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:17:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:17:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:17:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:17:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:17:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:17:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:18:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:18:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:18:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:18:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:18:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:18:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:18:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:18:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:19:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:19:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:19:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:19:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:19:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:19:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:19:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:19:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:19:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:19:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:19:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:19:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:19:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:19:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:20:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:20:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:20:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:20:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:20:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:20:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:21:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:21:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:21:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:21:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:21:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:21:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:21:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:21:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:21:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:21:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:21:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:21:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:22:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:22:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:22:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:22:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:22:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:22:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:23:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:23:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:23:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:23:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:23:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:23:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:23:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:23:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:23:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:23:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:23:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:23:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:24:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:24:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:24:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:24:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:24:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:24:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:24:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:24:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:25:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:25:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:25:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:25:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:25:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:25:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:25:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:25:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:25:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:25:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:25:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:25:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:26:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:26:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:26:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:26:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:26:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:26:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:26:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:27:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:27:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:27:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:27:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:27:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:27:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:27:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:27:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:27:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:27:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:27:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:28:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:28:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:28:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:28:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:28:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:28:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:28:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:28:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:28:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:29:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:29:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:29:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:29:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:29:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:29:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:29:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:29:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:29:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:29:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:30:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:30:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:30:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:30:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:30:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:30:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:30:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:30:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:31:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:31:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:31:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:31:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:31:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:31:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:31:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:31:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:31:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:31:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:31:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:32:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:32:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:32:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:32:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:32:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:32:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:32:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:32:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:33:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:33:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:33:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:33:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:33:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:33:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:33:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:33:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:33:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:33:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:33:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:33:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:34:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:34:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:34:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:34:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:34:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:34:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:35:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:35:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:35:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:35:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:35:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:35:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:35:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:35:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:35:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:35:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:35:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:35:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:35:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:36:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:36:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:36:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:36:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:36:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:36:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:37:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1471fcee is alive
2025-04-21 10:37:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:37:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:37:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:37:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:37:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:37:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:37:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:37:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:37:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:38:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:38:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:38:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:38:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:38:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:38:36 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1471fcee: (connection has passed maxLifetime)
2025-04-21 10:38:36 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5c0dfb91-112b-4145-9185-ad9c4b4e43f6)
2025-04-21 10:38:36 DEBUG PoolBase - HikariPool-1 - Established new connection (5c0dfb91-112b-4145-9185-ad9c4b4e43f6)
2025-04-21 10:38:36 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@35c970d2
2025-04-21 10:38:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:38:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:38:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:38:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:39:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:39:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:39:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:39:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:39:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:39:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:39:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:39:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:40:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:40:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:40:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:40:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:40:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:40:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbbf366 is alive
2025-04-21 10:40:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:40:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:40:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:40:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:40:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6a6441c2 is alive
2025-04-21 10:41:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:41:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:41:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:41:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:41:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@609c2ab2 is alive
2025-04-21 10:41:18 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@4cbbf366: (connection has passed maxLifetime)
2025-04-21 10:41:18 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (16f19c60-fcd4-49f2-bf20-f396f64cd79f)
2025-04-21 10:41:18 DEBUG PoolBase - HikariPool-1 - Established new connection (16f19c60-fcd4-49f2-bf20-f396f64cd79f)
2025-04-21 10:41:18 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b3c9fed
2025-04-21 10:41:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:41:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:41:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:41:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:42:03 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@609c2ab2: (connection has passed maxLifetime)
2025-04-21 10:42:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (58743d8e-7f5c-4408-a720-30d7793e0c10)
2025-04-21 10:42:03 DEBUG PoolBase - HikariPool-1 - Established new connection (58743d8e-7f5c-4408-a720-30d7793e0c10)
2025-04-21 10:42:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@217392d3
2025-04-21 10:42:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6dbc97e5 is alive
2025-04-21 10:42:06 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6dbc97e5: (connection has passed maxLifetime)
2025-04-21 10:42:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e778b0e8-2b6d-459b-bc39-2219c09d8fa5)
2025-04-21 10:42:06 DEBUG PoolBase - HikariPool-1 - Established new connection (e778b0e8-2b6d-459b-bc39-2219c09d8fa5)
2025-04-21 10:42:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2fb4688d
2025-04-21 10:42:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:42:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:42:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:42:20 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6a6441c2: (connection has passed maxLifetime)
2025-04-21 10:42:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2145bcec-7f69-4a76-ba7f-a9ea960b18a1)
2025-04-21 10:42:20 DEBUG PoolBase - HikariPool-1 - Established new connection (2145bcec-7f69-4a76-ba7f-a9ea960b18a1)
2025-04-21 10:42:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ee865c8
2025-04-21 10:42:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:42:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:42:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:42:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@259eb8c5 is alive
2025-04-21 10:43:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:43:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:43:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:43:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:43:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57b6e093 is alive
2025-04-21 10:43:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 10:43:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:43:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:43:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:43:48 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@57b6e093: (connection has passed maxLifetime)
2025-04-21 10:43:48 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (af52c4d5-58ee-4332-9e80-82d67440358c)
2025-04-21 10:43:48 DEBUG PoolBase - HikariPool-1 - Established new connection (af52c4d5-58ee-4332-9e80-82d67440358c)
2025-04-21 10:43:48 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b8472ea
2025-04-21 10:43:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:43:59 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7e3181aa: (connection has passed maxLifetime)
2025-04-21 10:43:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e627a354-6119-40a1-a0b1-8af5bd366b2d)
2025-04-21 10:43:59 DEBUG PoolBase - HikariPool-1 - Established new connection (e627a354-6119-40a1-a0b1-8af5bd366b2d)
2025-04-21 10:43:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76e0d632
2025-04-21 10:44:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@45b1478a is alive
2025-04-21 10:44:05 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@45b1478a: (connection has passed maxLifetime)
2025-04-21 10:44:05 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8abab047-ceb7-4feb-95b2-093e19d828f0)
2025-04-21 10:44:05 DEBUG PoolBase - HikariPool-1 - Established new connection (8abab047-ceb7-4feb-95b2-093e19d828f0)
2025-04-21 10:44:05 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@73771f01
2025-04-21 10:44:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:44:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:44:11 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@259eb8c5: (connection has passed maxLifetime)
2025-04-21 10:44:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f469036f-dfe1-4e46-901c-3dfb57c67d23)
2025-04-21 10:44:11 DEBUG PoolBase - HikariPool-1 - Established new connection (f469036f-dfe1-4e46-901c-3dfb57c67d23)
2025-04-21 10:44:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3cb96e17
2025-04-21 10:44:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:44:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:44:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:44:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:44:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:45:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15b98d68 is alive
2025-04-21 10:45:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:45:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:45:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:45:25 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@15b98d68: (connection has passed maxLifetime)
2025-04-21 10:45:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (24206d26-00eb-4c55-b593-da213e7d1b1d)
2025-04-21 10:45:25 DEBUG PoolBase - HikariPool-1 - Established new connection (24206d26-00eb-4c55-b593-da213e7d1b1d)
2025-04-21 10:45:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@f9315b0
2025-04-21 10:45:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:45:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:45:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:45:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:45:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:45:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:45:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:46:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:46:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:46:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:46:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:46:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:46:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:46:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:47:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:47:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:47:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:47:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:47:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:47:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:47:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:47:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:47:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:47:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:47:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:47:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:48:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:48:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:48:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:48:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:48:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:48:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:48:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:48:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:48:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:49:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:49:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:49:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:49:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:49:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:49:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:49:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:49:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:49:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:49:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:49:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:50:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:50:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:50:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:50:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:50:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:50:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:50:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:51:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:51:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:51:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:51:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:51:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:51:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:51:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:51:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:51:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:51:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:51:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:52:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:52:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:52:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:52:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:52:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:52:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:52:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:52:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:53:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:53:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:53:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:53:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:53:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:53:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:53:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:53:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:53:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:53:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:53:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:54:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:54:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:54:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:54:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:54:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:54:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:54:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:54:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:54:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:55:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:55:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:55:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:55:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:55:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:55:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:55:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:55:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:55:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:55:42 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 10:55:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:55:47 WARN  HomeMenuUI - Invalid email format entered: ]saurav@gmail.com
2025-04-21 10:56:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:56:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:56:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:56:16 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 10:56:16 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 10:56:16 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:56:16 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:56:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 10:56:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 10:56:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 10:56:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 10:56:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 10:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:56:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1424067142 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:56:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1328901016
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 10:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ab85862
2025-04-21 10:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:56:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2112011719 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:56:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 2108714064
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:56:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 10:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1554eaa4
2025-04-21 10:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:16 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 10:56:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:56:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76e0d632 is alive
2025-04-21 10:56:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:56:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:56:39 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 10:56:39 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1811655452 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:56:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2023843291
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4eb48298
2025-04-21 10:56:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:39 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 10:56:39 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 10:56:39 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:56:39 DEBUG create - Created new SQL alias : b1_0
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1700d089] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3bb4c2b2] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1acc768] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:56:39 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1acc768] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@3bb4c2b2
2025-04-21 10:56:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 10:56:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 10:56:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 10:56:39 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 10:56:39 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@586055644 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@445174164)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1766444717 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@266418454)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1587586985 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 10:56:39 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 592242687
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@54033072 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:56:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 44979584
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4203529f
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@715819458 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:56:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1772902226
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1736273c
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5f960a
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 1407036358
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 10:56:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:56:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1865038647 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:56:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 342735014
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a20da9f
2025-04-21 10:56:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 10:56:39 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 10:56:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 10:56:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5f960a
2025-04-21 10:56:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:56:39 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 10:56:39 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 10:56:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fb4688d is alive
2025-04-21 10:56:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7b3c9fed is alive
2025-04-21 10:56:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73771f01 is alive
2025-04-21 10:57:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@217392d3 is alive
2025-04-21 10:57:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:57:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:57:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@35c970d2 is alive
2025-04-21 10:57:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b8472ea is alive
2025-04-21 10:57:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3ee865c8 is alive
2025-04-21 10:57:37 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:57:37 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:57:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@f9315b0 is alive
2025-04-21 10:58:07 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:58:07 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:58:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3cb96e17 is alive
2025-04-21 10:58:38 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 10:58:45 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 10:58:45 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 10:58:45 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 10:58:45 DEBUG HikariConfig - autoCommit......................true
2025-04-21 10:58:45 DEBUG HikariConfig - catalog.........................none
2025-04-21 10:58:45 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 10:58:45 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 10:58:45 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 10:58:45 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-21 10:58:45 DEBUG HikariConfig - dataSource......................none
2025-04-21 10:58:45 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 10:58:45 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 10:58:45 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 10:58:45 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 10:58:45 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 10:58:45 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 10:58:45 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 10:58:45 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 10:58:45 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 10:58:45 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 10:58:45 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 10:58:45 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 10:58:45 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 10:58:45 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 10:58:45 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 10:58:45 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 10:58:45 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 10:58:45 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 10:58:45 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 10:58:45 DEBUG HikariConfig - password........................<masked>
2025-04-21 10:58:45 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 10:58:45 DEBUG HikariConfig - readOnly........................false
2025-04-21 10:58:45 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 10:58:45 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 10:58:45 DEBUG HikariConfig - schema..........................none
2025-04-21 10:58:45 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 10:58:45 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 10:58:45 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 10:58:45 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 10:58:45 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (701b29a7-5f16-4a71-a189-7ad8f55ab168)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (701b29a7-5f16-4a71-a189-7ad8f55ab168)
2025-04-21 10:58:45 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4eed46ee
2025-04-21 10:58:45 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 10:58:45 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 10:58:45 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 10:58:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 10:58:45 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 10:58:45 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 10:58:45 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (091a556f-ddc1-45db-9d58-9a798d878198)
2025-04-21 10:58:45 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (091a556f-ddc1-45db-9d58-9a798d878198)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b03d555
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 10:58:45 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 10:58:45 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 10:58:45 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (827acb09-bb2f-481f-9a1a-f463949e4cb7)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (827acb09-bb2f-481f-9a1a-f463949e4cb7)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6ab959d6
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c627be8e-8950-4a00-91a4-e7aee22384ad)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (c627be8e-8950-4a00-91a4-e7aee22384ad)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@51eab6f3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@66908383
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@466d49f0
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a714237
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-21 10:58:45 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4c018f11-a49e-4994-a16f-207b3d891c5f)
2025-04-21 10:58:45 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b9c1b51] into BootstrapContext; was [null]
2025-04-21 10:58:45 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e52fb3e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@16fe9c29]
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (4c018f11-a49e-4994-a16f-207b3d891c5f)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4da24e6a
2025-04-21 10:58:45 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 10:58:45 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (589bbc83-ccba-468b-a700-1829a99a2da4)
2025-04-21 10:58:45 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (589bbc83-ccba-468b-a700-1829a99a2da4)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ffbd0d4
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cf92cd1c-1555-427d-b985-171ad65c6263)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (cf92cd1c-1555-427d-b985-171ad65c6263)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4c80ce8b
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ce302f8c-0030-40c5-8c1e-c7437c684990)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (ce302f8c-0030-40c5-8c1e-c7437c684990)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@42410266
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e166b220-8fa8-490d-b1ab-d233ffe83658)
2025-04-21 10:58:45 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 10:58:45 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 10:58:45 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (e166b220-8fa8-490d-b1ab-d233ffe83658)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b8308dd
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ecb5f600-39e2-47a8-82ea-7e7687fd02ef)
2025-04-21 10:58:45 DEBUG PoolBase - HikariPool-1 - Established new connection (ecb5f600-39e2-47a8-82ea-7e7687fd02ef)
2025-04-21 10:58:45 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2cb0e948
2025-04-21 10:58:45 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 10:58:45 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 10:58:46 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 10:58:46 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=9/10, active=1, waiting=0)
2025-04-21 10:58:46 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@10cd6753) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@71ad3d8a)
2025-04-21 10:58:46 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47af099e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@700f518a)
2025-04-21 10:58:46 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 10:58:46 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7a389761
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a389761
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@466d49f0`
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:58:46 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 10:58:46 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 10:58:46 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a0b5323]
2025-04-21 10:58:46 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property id
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property number
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property id
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property name
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property passport
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name User
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property userID
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property email
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property isActive
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property name
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property password
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property userRole
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property guestId
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property age
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property name
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property user
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property bookingId
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property checkIn
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property checkOut
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property room
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property status
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property user
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Room
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property roomID
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property price
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property roomType
2025-04-21 10:58:46 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 10:58:46 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 10:58:46 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 10:58:46 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property amount
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property booking
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property issueDate
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 10:58:46 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 10:58:46 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 10:58:46 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 10:58:46 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 10:58:46 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 10:58:46 DEBUG PropertyBinder - Building property user
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 10:58:46 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 10:58:46 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 10:58:46 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 10:58:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 10:58:46 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@45e6d1e0, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-21 10:58:46 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@28279a49] under count; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@30bf26df] under every; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@261bd7b] under any; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under sinh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under cosh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944] under tanh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575] under pi; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61] under log; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2574a9e3] under position; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@691124ee] under overlay; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3ad8717d] under trim; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2ac519dc] under cast; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d53e6f7] under collate; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1e01b133] under extract; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@78da899f] under ifnull; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1fecfaea] under pad; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@33f2cfda] under str; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@47b33e07] under format; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4d705112] under timestampadd; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@193bb809] under timestampdiff; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under current_date; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under current_time; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under current_timestamp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under local_date; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under local_time; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under local_datetime; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cd7630] under offset_datetime; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e8279e5] under instant; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@53747c4a] under sql; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b0d1fa] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d66e944
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@e9474f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@64763e49
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@23468512
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@131a7516] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5ae15] under bit_length; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@577536e0] under octet_length; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2574a9e3
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under bitand; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0b93b4] under bitor; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under bitxor; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under bitnot; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523a7801] under median; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bc6da03] under insert; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3c770db4] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@691124ee
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e046e39] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@2213639b] under listagg; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6048e26a] under array; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@50b93353] under array_list; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3249e278] under array_agg; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@1c8f6c66] under array_position; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@764b14b8] under array_positions; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@5707f613] under array_positions_list; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77b3752b] under array_length; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2eda4eeb] under array_concat; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ee21292] under array_prepend; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@40c06358] under array_append; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@160b4809] under array_contains; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@149b4d20] under array_contains_nullable; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2ed9f6f8] under array_overlaps; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@251c4280] under array_overlaps_nullable; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f61371d] under array_get; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@19b02dfd] under array_set; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@b4732dc] under array_remove_index; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45292ec1] under array_slice; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a7c678b] under array_trim; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@61191222] under array_fill; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@58833798] under array_fill_list; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@2519026b] under array_to_string; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@570ba13] under mode; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@37a9b687] under percentile_cont; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@525b1b70] under percentile_disc; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@661d6bb6] under rank; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@733fb462] under dense_rank; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@623e0631] under percent_rank; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@359066bc] under cume_dist; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@12417468] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@459003a0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d325518] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@787e4357] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2f79f192] under trunc; prior registration was null
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 10:58:46 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fdfe8cf] under date_trunc; prior registration was null
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 10:58:46 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 10:58:46 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 10:58:46 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 10:58:46 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 10:58:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:46 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 10:58:46 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 10:58:47 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 10:58:47 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 10:58:47 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 10:58:47 DEBUG creation - Starting post-init callbacks
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 10:58:47 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : g1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4492b393] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : p1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : b1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b30054] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15f2a43f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : r1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : p1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@699d96bc] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : p2_0
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 10:58:47 DEBUG create - Created new SQL alias : i1_0
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52909a97] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 10:58:47 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d120d7c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 10:58:47 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 10:58:47 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 10:58:47 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 10:58:47 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 10:58:47 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 10:58:47 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 10:58:47 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 10:58:47 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 10:58:47 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36bf84e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1edf71d9]
2025-04-21 10:58:47 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 10:58:47 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : bookings
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : guests
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : invoices
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : Passport
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : Persons
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : rooms
2025-04-21 10:58:47 DEBUG Table - No alter strings for table : users
2025-04-21 10:58:47 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75dc1c1c
2025-04-21 10:58:47 DEBUG SessionFactoryRegistry - Registering SessionFactory: 7f595038-9dc1-4d33-b760-98dceaae46b7 (my-persistence-unit)
2025-04-21 10:58:47 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 10:58:47 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 10:58:47 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 10:58:47 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 10:58:48 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 10:58:48 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:58:48 DEBUG create - Created new SQL alias : u1_0
2025-04-21 10:58:48 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 10:58:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 10:58:48 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 10:58:48 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 10:58:48 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 10:58:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:58:48 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1660409789 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:58:48 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1479320034
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 10:58:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14b96c1e
2025-04-21 10:58:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:58:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:58:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:58:48 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@740442262 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:58:48 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1413804483
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:58:48 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:58:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 10:58:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a5c2d2d
2025-04-21 10:58:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:58:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:58:48 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 10:59:02 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 10:59:02 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@665204811 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:59:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1699335793
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@733bd6f3
2025-04-21 10:59:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:59:02 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 10:59:02 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 10:59:02 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 10:59:02 DEBUG create - Created new SQL alias : b1_0
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c7f2fdb] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4687366b] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8f589d7] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 10:59:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8f589d7] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@4687366b
2025-04-21 10:59:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 10:59:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 10:59:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 10:59:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 10:59:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@527331152 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@528469698)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@2037183157 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2054286321)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@378081024 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 10:59:02 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 475871084
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1633583079 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:59:02 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 426212061
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e592ef2
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@888005223 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 10:59:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 925385170
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c8d638a
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e92f6
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 386090072
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 10:59:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 10:59:02 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@17921215 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 10:59:02 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 2052202839
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@706c062e
2025-04-21 10:59:02 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 10:59:02 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 10:59:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 10:59:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e92f6
2025-04-21 10:59:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:59:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 10:59:02 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 10:59:02 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 10:59:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:59:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 10:59:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 10:59:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:00:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:00:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:00:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:00:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:00:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:00:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:00:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:00:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:00:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:00:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:00:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:00:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:00:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:00:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:01:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:01:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:01:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:01:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:01:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:02:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:02:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:02:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:02:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:02:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:02:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:02:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:02:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:02:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:02:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:02:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:02:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:02:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:03:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:03:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:03:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:03:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:03:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:03:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:03:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:03:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:04:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:04:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:04:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:04:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:04:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:04:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:04:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:04:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:04:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:04:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:05:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:05:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:05:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:05:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:05:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:05:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:05:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:05:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:05:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:05:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:06:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:06:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:06:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:06:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:06:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:06:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:06:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:06:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:06:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:07:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:07:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:07:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:07:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:07:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:07:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:07:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:07:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:07:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:07:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:08:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:08:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:08:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:08:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:08:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:08:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:08:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:08:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:08:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:08:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:08:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:09:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:09:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:09:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:09:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:09:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:09:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:09:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:09:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:09:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:10:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:10:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:10:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:10:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:10:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:10:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:10:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:10:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:10:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:11:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:11:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:11:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:11:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:11:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:11:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:11:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:11:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:11:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:11:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:11:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:12:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:12:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:12:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:12:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:12:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:12:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:12:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:13:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:13:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:13:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:13:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:13:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:13:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:13:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:13:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:13:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:13:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:13:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:13:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:14:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:14:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:14:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:14:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:14:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:14:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:14:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:14:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:14:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:15:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:15:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:15:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:15:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:15:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:15:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:15:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:15:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:15:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:15:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:16:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:16:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:16:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51eab6f3 is alive
2025-04-21 11:16:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1ffbd0d4 is alive
2025-04-21 11:16:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2cb0e948 is alive
2025-04-21 11:16:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:16:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:16:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ab959d6 is alive
2025-04-21 11:16:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4c80ce8b is alive
2025-04-21 11:16:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4da24e6a is alive
2025-04-21 11:16:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42410266 is alive
2025-04-21 11:17:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b03d555 is alive
2025-04-21 11:17:15 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:17:15 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:17:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4eed46ee is alive
2025-04-21 11:17:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1b8308dd is alive
2025-04-21 11:17:45 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:17:45 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:18:33 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 11:18:40 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 11:18:40 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 11:18:40 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 11:18:40 DEBUG HikariConfig - autoCommit......................true
2025-04-21 11:18:40 DEBUG HikariConfig - catalog.........................none
2025-04-21 11:18:40 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 11:18:40 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 11:18:40 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 11:18:40 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-21 11:18:40 DEBUG HikariConfig - dataSource......................none
2025-04-21 11:18:40 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 11:18:40 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 11:18:40 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 11:18:40 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 11:18:40 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 11:18:40 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 11:18:40 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 11:18:40 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 11:18:40 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 11:18:40 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 11:18:40 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 11:18:40 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 11:18:40 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 11:18:40 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 11:18:40 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 11:18:40 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 11:18:40 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 11:18:40 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 11:18:40 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 11:18:40 DEBUG HikariConfig - password........................<masked>
2025-04-21 11:18:40 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 11:18:40 DEBUG HikariConfig - readOnly........................false
2025-04-21 11:18:40 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 11:18:40 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 11:18:40 DEBUG HikariConfig - schema..........................none
2025-04-21 11:18:40 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 11:18:40 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 11:18:40 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 11:18:40 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 11:18:40 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:18:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4961506b-531d-4cb9-aa48-6b5831681fd2)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (4961506b-531d-4cb9-aa48-6b5831681fd2)
2025-04-21 11:18:41 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c7a975a
2025-04-21 11:18:41 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:18:41 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 11:18:41 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 11:18:41 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 11:18:41 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c5f40307-ac66-42aa-a1fd-851cc54ade18)
2025-04-21 11:18:41 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 11:18:41 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (c5f40307-ac66-42aa-a1fd-851cc54ade18)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5f40e557
2025-04-21 11:18:41 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:18:41 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8dd79e3f-9e14-48b1-851e-938ff3500625)
2025-04-21 11:18:41 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 11:18:41 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (8dd79e3f-9e14-48b1-851e-938ff3500625)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7320fd83
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df47dee4-d8d1-428b-996e-1e462435e08d)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (df47dee4-d8d1-428b-996e-1e462435e08d)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c1c9812
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@29f0802c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3a60c416
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3a60c416
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@60f2e0bd
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@60f2e0bd
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@469d003c
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66908383
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d4649eae-9735-4876-9638-eebf09b7d513)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4565a70a
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4565a70a
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@65327f5
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2adddc06
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@301d8120
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6d367020
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@72458efc
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@36bc415e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a74d228
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@349d0836
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-21 11:18:41 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@682c1e93] into BootstrapContext; was [null]
2025-04-21 11:18:41 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27068a50] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68e62ca4]
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (d4649eae-9735-4876-9638-eebf09b7d513)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c1bba95
2025-04-21 11:18:41 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 11:18:41 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5e9e1d82-5da8-4493-bbda-94b8e7c6adac)
2025-04-21 11:18:41 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (5e9e1d82-5da8-4493-bbda-94b8e7c6adac)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b0ab1c7
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (742c0955-39c2-430b-adde-9dab778cf5e5)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (742c0955-39c2-430b-adde-9dab778cf5e5)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@326972c3
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bd030d32-9b91-4eba-84d2-86168f373207)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (bd030d32-9b91-4eba-84d2-86168f373207)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@709db9c6
2025-04-21 11:18:41 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 11:18:41 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 11:18:41 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (173440be-fd51-4410-b63b-b7ddc7a625a9)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (173440be-fd51-4410-b63b-b7ddc7a625a9)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6becf0a
2025-04-21 11:18:41 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (af923aac-34e1-4199-928e-10c90f5598f1)
2025-04-21 11:18:41 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 11:18:41 DEBUG PoolBase - HikariPool-1 - Established new connection (af923aac-34e1-4199-928e-10c90f5598f1)
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b960c36
2025-04-21 11:18:41 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 11:18:41 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@37af1f93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@778d82e9)
2025-04-21 11:18:41 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@408e96d9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59901c4d)
2025-04-21 11:18:41 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 11:18:41 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 11:18:41 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2ab0702e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2ab0702e
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4565a70a`
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:18:41 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:18:41 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 11:18:41 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@56afdf9a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64fe9da7]
2025-04-21 11:18:41 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property id
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property number
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property id
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property name
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property passport
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name User
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property userID
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property email
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property isActive
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property name
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property password
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property userRole
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property guestId
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property age
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property name
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property user
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property bookingId
2025-04-21 11:18:41 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property checkIn
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property checkOut
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property room
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 11:18:41 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 11:18:41 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 11:18:41 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property status
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:41 DEBUG PropertyBinder - Building property user
2025-04-21 11:18:41 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 11:18:41 DEBUG EntityBinder - Import with entity name Room
2025-04-21 11:18:41 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 11:18:41 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property roomID
2025-04-21 11:18:42 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property price
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property roomType
2025-04-21 11:18:42 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 11:18:42 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 11:18:42 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 11:18:42 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property amount
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property booking
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property issueDate
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 11:18:42 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 11:18:42 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 11:18:42 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 11:18:42 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:18:42 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:18:42 DEBUG PropertyBinder - Building property user
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 11:18:42 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 11:18:42 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 11:18:42 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:18:42 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:18:42 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@71aaf151, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-21 11:18:42 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@157d3a45] under count; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@28279a49] under every; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@384fda47] under any; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78a8978a] under sinh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f171912] under cosh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d4d8579] under tanh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2] under pi; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d] under log; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@45e617c4] under position; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@422ab737] under overlay; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6dce59e] under trim; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5a0e0886] under cast; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ad8717d] under collate; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5e593b08] under extract; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3d53e6f7] under ifnull; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e01b133] under pad; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@78da899f] under str; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6518fdfd] under format; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3592c1c4] under timestampadd; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@13ed066e] under timestampdiff; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@626d2016] under current_date; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d5a1588] under current_time; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4f116ca2] under current_timestamp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@125d47c4] under local_date; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@193bb809] under local_time; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64b018f3] under local_datetime; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20801cbb] under offset_datetime; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under instant; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5809fa26] under sql; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64763e49] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d4d8579
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78a8978a
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f171912
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@159424e2
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@2b53840a] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@193bb809
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@64b018f3
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@64b0d1fa] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@f2276c9] under bit_length; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@12d2ddde] under octet_length; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62b475e2] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@45e617c4
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e9474f] under bitand; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c61eda5] under bitor; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1859ffda] under bitxor; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59838256] under bitnot; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@131a7516] under median; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under insert; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1376883] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@422ab737
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1f736d00] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3c770db4] under listagg; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@62b3a2f6] under array; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@202898d7] under array_list; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@37a0ec3c] under array_agg; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@5d7911d5] under array_position; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@1bbddada] under array_positions; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@519c6fcc] under array_positions_list; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ad1701a] under array_length; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@319642db] under array_concat; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@309dcdf3] under array_prepend; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7573b9ee] under array_append; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3d615b2e] under array_contains; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3a1f2a1] under array_contains_nullable; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@4d93f75b] under array_overlaps; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@114a5e0] under array_overlaps_nullable; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bb41f5c] under array_get; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@35650279] under array_set; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@420a8042] under array_remove_index; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3292d91a] under array_slice; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5921b93c] under array_trim; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@1ad9b8d3] under array_fill; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@168ad26f] under array_fill_list; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@25b38203] under array_to_string; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4d464510] under mode; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@64e7d698] under percentile_cont; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2519026b] under percentile_disc; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@77724cbe] under rank; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@27dc627a] under dense_rank; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@570ba13] under percent_rank; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@37a9b687] under cume_dist; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@6c977dcf] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@661d6bb6] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@733fb462] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1859ffda
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@364fd4ae] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@7dee835] under trunc; prior registration was null
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 11:18:42 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b57c345] under date_trunc; prior registration was null
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 11:18:42 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 11:18:42 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 11:18:42 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:18:42 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:18:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:18:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:18:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:18:42 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:18:42 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:18:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 11:18:43 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:43 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:18:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:18:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 11:18:43 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:18:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:18:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:18:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 11:18:43 DEBUG creation - Starting post-init callbacks
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 11:18:43 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : g1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6fde6f05] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@56d822dc] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30eedaa4] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b32b70] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : p2_0
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 11:18:43 DEBUG create - Created new SQL alias : i1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15f2a43f] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ecd8ab1] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 11:18:43 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 11:18:43 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 11:18:43 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 11:18:43 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 11:18:43 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 11:18:43 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:18:43 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@56afdf9a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@382d549a]
2025-04-21 11:18:43 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 11:18:43 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : bookings
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : guests
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : invoices
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : Passport
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : Persons
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : rooms
2025-04-21 11:18:43 DEBUG Table - No alter strings for table : users
2025-04-21 11:18:43 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@10745a02
2025-04-21 11:18:43 DEBUG SessionFactoryRegistry - Registering SessionFactory: 1e0619d0-aeab-45f6-9ef3-13ea8e9dc897 (my-persistence-unit)
2025-04-21 11:18:43 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 11:18:43 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 11:18:43 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 11:18:43 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 11:18:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 11:18:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:18:43 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:18:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:18:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 11:18:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 11:18:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 11:18:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:18:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:18:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1852606548 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:18:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 138303640
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 11:18:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42cf5a6f
2025-04-21 11:18:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:18:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:18:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:18:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1920939741 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:18:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 626252992
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:18:43 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 11:18:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 11:18:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e91cf69
2025-04-21 11:18:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:18:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:18:43 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-21 11:18:43 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-21 11:18:57 INFO  StaffMenuUI - User SHUBHAM LANKE is logging out
2025-04-21 11:18:59 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 11:19:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:19:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@208157941 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:19:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 419887490
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:19:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5444f1c3
2025-04-21 11:19:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:19:04 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1784425773 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:19:04 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1081132287
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:19:04 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:19:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:19:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bceac99
2025-04-21 11:19:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:04 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 11:19:07 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 11:19:07 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@590762306 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:19:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 771951809
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f2ef402
2025-04-21 11:19:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:07 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 11:19:07 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 11:19:07 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:19:07 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8f589d7] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a914a00] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:19:07 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a914a00] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@8f589d7
2025-04-21 11:19:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:19:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:19:07 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 11:19:07 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 11:19:07 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2037183157 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@2054286321)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@378081024 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2011290317)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1762031582 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 11:19:07 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1002194889
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1077739292 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:19:07 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1911860918
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34ede267
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1371989877 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:19:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 292579826
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77ebc9e6
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e0e0ba7
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 2113229982
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 11:19:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:19:07 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@411756754 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:19:07 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1609562230
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@10ec4721
2025-04-21 11:19:07 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:19:07 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:19:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 11:19:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e0e0ba7
2025-04-21 11:19:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:19:07 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:19:07 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:19:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:19:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:19:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:19:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:20:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:20:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:20:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:20:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:20:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:20:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:20:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:20:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:20:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:20:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:20:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:20:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:20:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:20:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:21:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:21:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:21:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:21:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:22:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:22:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:22:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:22:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:22:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:22:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:22:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:22:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:22:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:22:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:22:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:22:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:22:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:22:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:23:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:23:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:23:14 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 11:23:14 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1237086644 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:23:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 205343703
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2626aa35
2025-04-21 11:23:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1554565380 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@2054286321)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1281445260 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@2011290317)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@719635492 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 11:23:14 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1706139228
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1769513770 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:23:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1242888151
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@66596c4c
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@22864481 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:23:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 336734710
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@723b8eff
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3987a1e8
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 550917991
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 11:23:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:23:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@621709074 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:23:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 488624810
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c78e00c
2025-04-21 11:23:14 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:23:14 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:23:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 11:23:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3987a1e8
2025-04-21 11:23:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:23:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:23:14 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:23:14 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:23:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:23:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:23:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:24:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:24:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:24:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:24:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:24:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:24:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:24:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:24:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:24:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:24:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:24:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:24:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:24:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:25:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:25:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:25:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:25:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:25:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:26:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:26:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:26:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:26:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:26:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:26:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:26:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:26:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:26:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:26:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:26:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:26:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:26:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:27:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:27:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:27:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:27:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:27:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:27:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:28:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:28:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:28:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:28:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:28:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:28:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:28:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:28:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:28:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:28:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f40e557 is alive
2025-04-21 11:28:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:28:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:29:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:29:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:29:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7320fd83 is alive
2025-04-21 11:29:41 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:29:41 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:29:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@326972c3 is alive
2025-04-21 11:29:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@709db9c6 is alive
2025-04-21 11:30:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1c1c9812 is alive
2025-04-21 11:30:11 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:30:11 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:30:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@c7a975a is alive
2025-04-21 11:30:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6b0ab1c7 is alive
2025-04-21 11:30:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6becf0a is alive
2025-04-21 11:30:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b960c36 is alive
2025-04-21 11:30:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c1bba95 is alive
2025-04-21 11:30:55 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 11:31:03 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 11:31:03 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 11:31:03 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 11:31:03 DEBUG HikariConfig - autoCommit......................true
2025-04-21 11:31:03 DEBUG HikariConfig - catalog.........................none
2025-04-21 11:31:03 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 11:31:03 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 11:31:03 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 11:31:03 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@5023bb8b
2025-04-21 11:31:03 DEBUG HikariConfig - dataSource......................none
2025-04-21 11:31:03 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 11:31:03 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 11:31:03 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 11:31:03 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 11:31:03 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 11:31:03 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 11:31:03 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 11:31:03 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 11:31:03 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 11:31:03 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 11:31:03 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 11:31:03 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 11:31:03 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 11:31:03 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 11:31:03 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 11:31:03 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 11:31:03 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 11:31:03 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 11:31:03 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 11:31:03 DEBUG HikariConfig - password........................<masked>
2025-04-21 11:31:03 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 11:31:03 DEBUG HikariConfig - readOnly........................false
2025-04-21 11:31:03 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 11:31:03 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 11:31:03 DEBUG HikariConfig - schema..........................none
2025-04-21 11:31:03 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 11:31:03 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 11:31:03 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 11:31:03 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 11:31:03 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:31:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (77502bba-233e-4ae7-a43a-34370b47b19d)
2025-04-21 11:31:03 DEBUG PoolBase - HikariPool-1 - Established new connection (77502bba-233e-4ae7-a43a-34370b47b19d)
2025-04-21 11:31:03 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@475835b1
2025-04-21 11:31:03 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:31:03 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 11:31:03 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 11:31:03 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 11:31:03 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 11:31:04 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 11:31:04 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9eaf0be0-8e37-49f2-9318-d3cee41c2712)
2025-04-21 11:31:04 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (9eaf0be0-8e37-49f2-9318-d3cee41c2712)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1672d9f8
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:31:04 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 11:31:04 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 11:31:04 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f9918ccd-5811-44b1-9c56-f63c9433a591)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (f9918ccd-5811-44b1-9c56-f63c9433a591)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@625439d0
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (34dfa9e3-dba4-4a2b-8d2a-e75a8fc2083b)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (34dfa9e3-dba4-4a2b-8d2a-e75a8fc2083b)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a0903a6
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@66908383
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@516ebdf8
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d8539de
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eba57a7
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@272a179c
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@30feffc
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@67207d8a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@bcb09a6
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65327f5
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2e3a5237
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ac97b84
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4917d36b
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@35c09b94
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d0bfb24
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c3fa05a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b44b63d
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a699efa
2025-04-21 11:31:04 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3e9803c2] into BootstrapContext; was [null]
2025-04-21 11:31:04 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4525d1d3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c974942]
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3cbb9261-4a49-425f-bb92-59289e1fc9c5)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (3cbb9261-4a49-425f-bb92-59289e1fc9c5)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ff9b9a0
2025-04-21 11:31:04 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 11:31:04 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 11:31:04 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (27518532-9260-4c16-afc6-1370964ef3d8)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (27518532-9260-4c16-afc6-1370964ef3d8)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d0da857
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7bf835b5-076f-4785-a6e3-6dd9c97fb2a8)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (7bf835b5-076f-4785-a6e3-6dd9c97fb2a8)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2211715d
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a440a3ee-da72-4f7f-b580-b0d37f8554b3)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (a440a3ee-da72-4f7f-b580-b0d37f8554b3)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7261b09a
2025-04-21 11:31:04 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 11:31:04 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 11:31:04 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (05c8da0a-411e-4ddd-a1ed-c9a835d2b608)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (05c8da0a-411e-4ddd-a1ed-c9a835d2b608)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@282d3985
2025-04-21 11:31:04 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (04dc6fcd-a313-4384-b769-c51e4d861203)
2025-04-21 11:31:04 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 11:31:04 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 11:31:04 DEBUG PoolBase - HikariPool-1 - Established new connection (04dc6fcd-a313-4384-b769-c51e4d861203)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2dfced81
2025-04-21 11:31:04 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@700f518a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@b835727)
2025-04-21 11:31:04 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13da7ab0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c8662ac)
2025-04-21 11:31:04 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 11:31:04 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3ce53f6a
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@65327f5`
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:31:04 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:31:04 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:31:04 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 11:31:04 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@245ec1a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@782be4eb]
2025-04-21 11:31:04 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property id
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property number
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property id
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property name
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property passport
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name User
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property userID
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property email
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property isActive
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property name
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property password
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property userRole
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property guestId
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property age
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property name
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property user
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property bookingId
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property checkIn
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property checkOut
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property room
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property status
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property user
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Room
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property roomID
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property price
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property roomType
2025-04-21 11:31:04 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 11:31:04 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 11:31:04 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 11:31:04 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property amount
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property booking
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property issueDate
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 11:31:04 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 11:31:04 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 11:31:04 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 11:31:04 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:31:04 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:31:04 DEBUG PropertyBinder - Building property user
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 11:31:04 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 11:31:04 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 11:31:05 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:31:05 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:31:05 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3e377967, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-21 11:31:05 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@575cabf0] under count; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@390037e7] under every; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@704067c6] under any; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575] under sinh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61] under cosh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f20f7ad] under tanh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45e617c4] under pi; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5042e3d0] under log; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3fe512d2] under position; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5a0e0886] under overlay; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@27f3f512] under trim; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3ece79fe] under cast; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3cc79c02] under collate; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6b4125ed] under extract; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@33d60b7e] under ifnull; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4bb147ec] under pad; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@186d8a71] under str; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13ed066e] under format; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@626d2016] under timestampadd; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@581b1c08] under timestampdiff; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under current_date; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64763e49] under current_time; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23468512] under current_timestamp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cd7630] under local_date; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e8279e5] under local_time; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b53840a] under local_datetime; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3caafa67] under offset_datetime; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e546734] under instant; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@12d2ddde] under sql; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5042e3d0
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62b475e2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f20f7ad
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@469a7575
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4351ed61
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45e617c4
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@59838256] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7e8279e5
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2b53840a
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@12219f6a] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@52d3fafd] under bit_length; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7f0b93b4] under octet_length; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3fe512d2
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f736d00] under bitand; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523a7801] under bitor; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@718fd7c1] under bitxor; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bc6da03] under bitnot; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f59a516] under median; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@411cd156] under insert; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@46fc522d] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5a0e0886
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4262fdeb] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@42ea7565] under listagg; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@c8f97a7] under array; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2b736fee] under array_list; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@75d366c2] under array_agg; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@151732fb] under array_position; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@6d6ac396] under array_positions; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@319642db] under array_positions_list; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59498d94] under array_length; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@7573b9ee] under array_concat; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@7f73ce28] under array_prepend; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@611b35d6] under array_append; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4d93f75b] under array_contains; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@114a5e0] under array_contains_nullable; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@79a13920] under array_overlaps; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@182e7eda] under array_overlaps_nullable; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5921b93c] under array_get; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@13803a94] under array_set; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@28babeca] under array_remove_index; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ad9b8d3] under array_slice; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168ad26f] under array_trim; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4d464510] under array_fill; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@64e7d698] under array_fill_list; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@1a950fdd] under array_to_string; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16d07cf3] under mode; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16f0ec18] under percentile_cont; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6c977dcf] under percentile_disc; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@359066bc] under rank; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@385dfb63] under dense_rank; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@364fd4ae] under percent_rank; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@245253d8] under cume_dist; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3b481bf5] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2233cac0] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67fb5025] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@718fd7c1
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@28cd2c2] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4e8b357d] under trunc; prior registration was null
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 11:31:05 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e1eb85f] under date_trunc; prior registration was null
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 11:31:05 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 11:31:05 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 11:31:05 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:31:05 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 11:31:05 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:31:05 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:31:05 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 11:31:05 DEBUG creation - Starting post-init callbacks
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 11:31:05 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : g1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73b74615] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b32b70] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69ce14e6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57bdceaa] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : p2_0
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 11:31:05 DEBUG create - Created new SQL alias : i1_0
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2d2fc130] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:31:05 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@25cde5bb] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 11:31:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 11:31:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 11:31:05 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 11:31:05 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 11:31:05 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 11:31:05 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 11:31:06 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 11:31:06 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:31:06 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@245ec1a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7f305f34]
2025-04-21 11:31:06 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 11:31:06 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : bookings
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : guests
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : invoices
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : Passport
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : Persons
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : rooms
2025-04-21 11:31:06 DEBUG Table - No alter strings for table : users
2025-04-21 11:31:06 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4cfc0c48
2025-04-21 11:31:06 DEBUG SessionFactoryRegistry - Registering SessionFactory: c9330bcf-2cc3-4cc8-ac9b-69207d27a7a7 (my-persistence-unit)
2025-04-21 11:31:06 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 11:31:06 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 11:31:06 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 11:31:06 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 11:31:06 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 11:31:06 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:31:06 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:31:06 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:31:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 11:31:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 11:31:06 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 11:31:06 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:31:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:31:06 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1781111709 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:31:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1192474161
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:31:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@714b6999
2025-04-21 11:31:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:31:06 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1413804483 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:31:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 868872620
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:31:06 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:31:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:31:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4070c4ff
2025-04-21 11:31:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:06 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 11:31:17 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 11:31:17 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1699335793 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:31:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1060041730
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14bf9fd0
2025-04-21 11:31:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:17 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 11:31:17 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 11:31:17 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:31:17 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73b3ce31] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65da1cbe] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d67348a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:31:17 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d67348a] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@65da1cbe
2025-04-21 11:31:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:31:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:31:17 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 11:31:17 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 11:31:17 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2054286321 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@378081024)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@2011290317 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1762031582)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@475871084 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 11:31:17 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1633583079
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@426212061 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:31:17 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1452764043
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bf77ee
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@925385170 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:31:17 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2011941350
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b82018
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7df5549e
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 213762292
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 11:31:17 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:31:17 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2052202839 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:31:17 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 283920161
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bdf94f2
2025-04-21 11:31:17 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:31:17 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:31:17 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 11:31:17 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7df5549e
2025-04-21 11:31:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:17 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:31:17 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:31:17 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 11:31:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:31:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:32:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:32:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:32:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:32:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:32:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:32:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:32:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:32:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:32:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:32:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:32:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:32:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:32:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:32:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:33:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:33:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:33:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:33:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:34:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:34:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:34:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:34:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:34:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:34:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:34:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:34:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:34:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:34:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:34:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:34:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:34:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:34:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:35:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:35:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:35:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:35:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:36:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:36:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:36:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:36:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:36:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:36:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:36:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:36:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:36:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:36:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:36:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:36:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:36:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:36:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:37:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:37:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:37:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:37:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:37:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:38:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:38:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:38:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:38:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:38:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:38:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:38:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:38:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:38:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:38:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:38:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:38:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:38:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:39:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:39:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:39:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:39:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:39:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:39:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:39:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:40:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:40:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:40:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:40:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:40:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:40:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:40:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:40:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:40:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:40:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:40:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:41:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:41:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:41:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:41:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:41:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:41:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:41:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:41:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:42:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:42:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:42:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:42:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:42:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:42:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:42:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:42:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:42:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:42:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:42:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:43:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:43:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:43:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:43:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:43:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:43:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:43:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@475835b1 is alive
2025-04-21 11:43:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3d0da857 is alive
2025-04-21 11:43:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2211715d is alive
2025-04-21 11:43:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1672d9f8 is alive
2025-04-21 11:44:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@ff9b9a0 is alive
2025-04-21 11:44:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:44:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:44:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7261b09a is alive
2025-04-21 11:44:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2dfced81 is alive
2025-04-21 11:44:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@282d3985 is alive
2025-04-21 11:44:34 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:44:34 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:45:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@625439d0 is alive
2025-04-21 11:45:04 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:45:04 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:45:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a0903a6 is alive
2025-04-21 11:45:21 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 11:45:21 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 11:45:21 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 11:45:21 DEBUG HikariConfig - autoCommit......................true
2025-04-21 11:45:21 DEBUG HikariConfig - catalog.........................none
2025-04-21 11:45:21 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 11:45:21 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 11:45:21 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 11:45:21 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1c9b0314
2025-04-21 11:45:21 DEBUG HikariConfig - dataSource......................none
2025-04-21 11:45:21 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 11:45:21 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 11:45:21 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 11:45:21 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 11:45:21 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 11:45:21 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 11:45:21 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 11:45:21 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 11:45:21 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 11:45:21 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 11:45:21 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 11:45:21 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 11:45:21 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 11:45:21 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 11:45:21 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 11:45:21 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 11:45:21 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 11:45:21 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 11:45:21 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 11:45:21 DEBUG HikariConfig - password........................<masked>
2025-04-21 11:45:21 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 11:45:21 DEBUG HikariConfig - readOnly........................false
2025-04-21 11:45:21 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 11:45:21 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 11:45:21 DEBUG HikariConfig - schema..........................none
2025-04-21 11:45:21 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 11:45:21 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 11:45:21 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 11:45:21 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 11:45:21 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 11:45:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d08eedde-0c67-408c-b668-85b7c832e459)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (d08eedde-0c67-408c-b668-85b7c832e459)
2025-04-21 11:45:22 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4fad9bb2
2025-04-21 11:45:22 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 11:45:22 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 11:45:22 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 11:45:22 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 11:45:22 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 11:45:22 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 11:45:22 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d35f0d76-8660-438e-b0b5-4580cf1f4d59)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (d35f0d76-8660-438e-b0b5-4580cf1f4d59)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bd28e0a
2025-04-21 11:45:22 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 11:45:22 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 11:45:22 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 11:45:22 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b6830579-21ca-4e8a-99e7-a078f4d39cb4)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (b6830579-21ca-4e8a-99e7-a078f4d39cb4)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@112ae57a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@579d011c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@579d011c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@579d011c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3670f00
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3670f00
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@452e26d0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@452e26d0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@46ab18da
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@46ab18da
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ee4641a4-5e8b-457d-9387-c5db878868ba)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2b5cb9b2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2b5cb9b2
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2ad3a1bb
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6bc28a83
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@324c64cd
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@13579834
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@24be2d9c
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5bd73d1a
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@aec50a1
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2555fff0
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@70d2e40b
2025-04-21 11:45:22 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@51650883] into BootstrapContext; was [null]
2025-04-21 11:45:22 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c4f9535] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5bd1ceca]
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (ee4641a4-5e8b-457d-9387-c5db878868ba)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5428793b
2025-04-21 11:45:22 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 11:45:22 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 11:45:22 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (392cd2f5-7039-49dc-b8ae-565efe6dfb5e)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (392cd2f5-7039-49dc-b8ae-565efe6dfb5e)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b051f6a
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5fd237ad-96bd-4e14-aa30-17b0544b0f24)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (5fd237ad-96bd-4e14-aa30-17b0544b0f24)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@65b6ea79
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5f823402-1a62-49f2-9628-717cae4ba3ec)
2025-04-21 11:45:22 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 11:45:22 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 11:45:22 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (5f823402-1a62-49f2-9628-717cae4ba3ec)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2371d280
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ed1c908d-62ab-40d1-abf9-7039aa91c1a1)
2025-04-21 11:45:22 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 11:45:22 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (ed1c908d-62ab-40d1-abf9-7039aa91c1a1)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34078674
2025-04-21 11:45:22 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 11:45:22 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@7d37f1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@69d6a7cd)
2025-04-21 11:45:22 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3162743f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c708440)
2025-04-21 11:45:22 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 11:45:22 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (11691bb8-5f8e-4079-9d19-802cd2b7811f)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@64c4c01
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@64c4c01
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2b5cb9b2`
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:45:22 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (11691bb8-5f8e-4079-9d19-802cd2b7811f)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@478a31d1
2025-04-21 11:45:22 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 11:45:22 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@474fae39]
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (570af78c-a4ef-4539-be28-aad6df78e781)
2025-04-21 11:45:22 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 11:45:22 DEBUG PoolBase - HikariPool-1 - Established new connection (570af78c-a4ef-4539-be28-aad6df78e781)
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@15bdfe7b
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property id
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property number
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property id
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property name
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property passport
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name User
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property userID
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property email
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property isActive
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property name
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property password
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property userRole
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property guestId
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property age
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property name
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property user
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property bookingId
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property checkIn
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property checkOut
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property room
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property status
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property user
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Room
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property roomID
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property price
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property roomType
2025-04-21 11:45:22 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 11:45:22 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 11:45:22 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 11:45:22 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property amount
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property booking
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property issueDate
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 11:45:22 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 11:45:22 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 11:45:22 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 11:45:22 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 11:45:22 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 11:45:22 DEBUG PropertyBinder - Building property user
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 11:45:22 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 11:45:22 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 11:45:23 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:45:23 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:45:23 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6a1d6ef2, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 11:45:23 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@62a68bcb] under count; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6413d7e7] under every; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@d16be4f] under any; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5] under sinh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93] under cosh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc] under tanh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b55dd15] under pi; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4] under log; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@a09303] under position; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@726934e2] under overlay; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@798dad3d] under trim; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2ceee4b6] under cast; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12a470dd] under collate; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3f6bf8aa] under extract; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2c63762b] under ifnull; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@68e02f33] under pad; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@158ae284] under str; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3af58f76] under format; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@27a09971] under timestampadd; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6af90849] under timestampdiff; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a44cfc0] under current_date; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e3c26e] under current_time; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@80b122b] under current_timestamp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@999b951] under local_date; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under local_time; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under local_datetime; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b0bd001] under offset_datetime; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f9cab00] under instant; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7c5d1d25] under sql; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@550e9be6] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ff0b1cc
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2262d6d5
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40de8f93
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b55dd15
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@73a0f2b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@65cf4d6d
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1b410308
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@483b0690] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@687e6293] under bit_length; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6870c3c2] under octet_length; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb0a08c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@a09303
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c] under bitand; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4debbf0] under bitor; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a5e167a] under bitxor; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e06f7d] under bitnot; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under median; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under insert; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@796f632b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@726934e2
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5d94a2dc] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@60a7e509] under listagg; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1860f3be] under array; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@6cd15072] under array_list; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@4dde8976] under array_agg; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@76f881d9] under array_position; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@36aab105] under array_positions; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7c281eb8] under array_positions_list; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65f40689] under array_length; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@35b17c06] under array_concat; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@485caa8f] under array_prepend; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@2703d91] under array_append; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@310ed6b4] under array_contains; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@640cc04b] under array_contains_nullable; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@47f04e4d] under array_overlaps; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3520963d] under array_overlaps_nullable; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68b366e2] under array_get; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@2dbc408c] under array_set; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@a9c5b75] under array_remove_index; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@dd4aec3] under array_slice; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dac121d] under array_trim; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4519f676] under array_fill; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@78ec89a6] under array_fill_list; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@642a16aa] under array_to_string; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32456db0] under mode; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5f5827d0] under percentile_cont; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@58a2d9f9] under percentile_disc; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4dd90166] under rank; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@52227eb2] under dense_rank; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5ad1904f] under percent_rank; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@a146b11] under cume_dist; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3135bf25] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@22ad1bae] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4116f66a] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a5e167a
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@79f90a3a] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2ed71727] under trunc; prior registration was null
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 11:45:23 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5261ec9] under date_trunc; prior registration was null
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 11:45:23 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 11:45:23 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 11:45:23 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 11:45:23 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 11:45:23 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 11:45:23 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 11:45:23 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 11:45:23 DEBUG creation - Starting post-init callbacks
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 11:45:23 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : g1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1002d192] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5773d271] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76e6c070] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : p1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f03ee8f] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : p2_0
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 11:45:23 DEBUG create - Created new SQL alias : i1_0
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e5a8718] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:45:23 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9be7319] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 11:45:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 11:45:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 11:45:23 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 11:45:23 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 11:45:24 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 11:45:24 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 11:45:24 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 11:45:24 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 11:45:24 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab20d7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@632241f5]
2025-04-21 11:45:24 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 11:45:24 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : bookings
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : guests
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : invoices
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : Passport
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : Persons
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : rooms
2025-04-21 11:45:24 DEBUG Table - No alter strings for table : users
2025-04-21 11:45:24 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2ff498b0
2025-04-21 11:45:24 DEBUG SessionFactoryRegistry - Registering SessionFactory: 9e139861-4ab6-4f8d-bf04-7baf0373828f (my-persistence-unit)
2025-04-21 11:45:24 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 11:45:24 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 11:45:24 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 11:45:24 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 11:45:24 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:45:24 DEBUG create - Created new SQL alias : r1_0
2025-04-21 11:45:24 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 11:45:24 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 11:45:24 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 11:45:24 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 11:45:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:45:24 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@864186602 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:45:24 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1291752852
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1289671373
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 316935832
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 983339701
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1740813661
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1571834834
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1871846962
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 835006543
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1138692983
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 485375493
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1676857380
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2066600797
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1079124964
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 757150717
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 11:45:24 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:45:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 11:45:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21bf308
2025-04-21 11:45:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:27 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 11:45:36 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 11:45:36 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 11:45:36 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:45:36 DEBUG create - Created new SQL alias : u1_0
2025-04-21 11:45:36 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 11:45:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 11:45:36 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 11:45:36 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 11:45:36 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 11:45:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:45:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@118280482 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:45:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1771326096
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 11:45:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ed52f44
2025-04-21 11:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:45:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@183521033 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:45:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1888932945
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:45:36 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 11:45:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 11:45:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7816454d
2025-04-21 11:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:36 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-21 11:45:36 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-21 11:45:43 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-21 11:45:43 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-21 11:45:46 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:45:46 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@2050248794 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@192442996 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1321604822)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1437884065 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@224031437)

2025-04-21 11:45:46 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 11:45:46 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:45:46 INFO  InvoiceServiceImpl - No booking found for ID: 62
2025-04-21 11:45:46 WARN  StaffMenuUI - Invoice not found.
2025-04-21 11:45:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:45:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:46:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:46:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:46:26 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 11:46:26 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 11:46:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:46:33 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@315841481 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:46:33 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1518753442
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52035328
2025-04-21 11:46:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:46:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:46:33 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:46:33 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1444195845 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:46:33 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1956569315
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1811655452
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 882568900
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 922786124
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 2023843291
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1320452760
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 758888772
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 507682646
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1841213176
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 125059477
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2012555686
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2101850145
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1695946783
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1087083969
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 11:46:33 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 11:46:33 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 11:46:33 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7891cf3
2025-04-21 11:46:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:46:33 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:46:43 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-21 11:46:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:46:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:46:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:47:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:47:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:47:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:47:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:47:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:47:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:47:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:47:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:47:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:47:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:47:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:47:38 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1579897131 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:47:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1617481121
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@644e6a8e
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@751749858 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:47:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 100869666
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc075da
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:42 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 11:47:42 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 11:47:42 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:47:42 DEBUG create - Created new SQL alias : b1_0
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@180f33b2] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6247c08c] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7aab98b6] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 11:47:42 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7aab98b6] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@6247c08c
2025-04-21 11:47:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:47:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 11:47:42 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 11:47:42 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 11:47:42 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1515772738 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@224031437)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@35126588 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1321604822)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1772902226 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 11:47:42 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 921406983
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1407036358 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:47:42 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1360472392
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f2a3b37
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@2094564124 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 11:47:42 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1086342015
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78b8f818
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50ef2906
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 527482085
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 11:47:42 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:47:42 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@633915166 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 11:47:42 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 196218979
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6821c63c
2025-04-21 11:47:42 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:47:42 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 11:47:42 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 11:47:42 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50ef2906
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:42 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:47:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:47:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:48:02 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-21 11:48:02 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-21 11:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:48:03 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1200666775 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1555728654 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1321604822)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@978105475 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@224031437)

2025-04-21 11:48:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 65
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 127618303
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1487669283
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#65] : 762337688
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#65
2025-04-21 11:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28a3fc34
2025-04-21 11:48:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:48:03 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-21 11:48:03 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-21 11:48:03 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 11:48:03 DEBUG create - Created new SQL alias : i1_0
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@55317c63] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35d81657] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42ef5216] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 11:48:03 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42ef5216] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@55317c63
2025-04-21 11:48:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-21 11:48:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-21 11:48:03 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-21 11:48:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-21 11:48:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-21 11:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 11:48:03 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@390901976 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@985925332)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1919184150 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1858263440 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@486178528)

2025-04-21 11:48:03 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 37
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#37] : 357238600
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [2] - [65]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [1] - [7000.0]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [3] - [2025-04-17T17:20:14.773512]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#37
2025-04-21 11:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@10ad95cd
2025-04-21 11:48:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 11:48:03 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1778227649 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@853045514 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1321604822)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@403488991 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@224031437)

2025-04-21 11:48:03 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 65
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [4] - [2]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 2
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#2] : 283438643
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1854983880
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#65] : 334594745
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [7] - [102]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#2
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 11:48:03 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 11:48:03 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 11:48:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#65
2025-04-21 11:48:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ee0cf64
2025-04-21 11:48:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 11:48:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:48:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:48:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:48:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:48:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:48:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:48:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:48:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:48:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:49:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:49:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:49:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:49:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:49:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:49:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:49:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:49:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:49:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:50:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:50:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:50:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:50:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:50:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:50:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:50:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:50:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:50:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:51:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:51:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:51:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:51:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:51:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:51:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:51:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:51:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:51:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:51:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:51:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:52:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:52:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:52:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:52:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:52:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:52:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:52:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:52:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:53:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:53:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:53:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:53:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:53:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:53:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:53:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:53:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:53:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:53:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:53:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:53:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:54:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:54:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:54:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:54:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:54:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:54:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:55:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:55:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:55:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:55:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:55:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:55:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:55:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:55:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:55:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:55:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:55:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:55:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:55:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:56:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:56:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:56:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:56:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:56:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:56:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:56:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:56:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:57:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:57:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:57:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:57:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:57:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:57:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:57:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:57:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:57:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:57:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:58:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:58:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:58:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 11:58:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 11:58:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 11:58:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 11:58:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:58:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:58:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 11:58:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 11:59:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 11:59:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 11:59:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 11:59:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 11:59:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:59:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 11:59:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 11:59:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:00:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 12:00:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 12:00:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 12:00:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:00:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:00:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 12:00:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 12:00:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:00:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:00:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 12:01:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 12:01:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 12:01:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 12:01:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 12:01:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:01:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:01:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 12:01:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 12:01:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:01:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:01:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 12:02:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 12:02:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:02:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:02:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@112ae57a is alive
2025-04-21 12:02:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@478a31d1 is alive
2025-04-21 12:02:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:02:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:02:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34078674 is alive
2025-04-21 12:03:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1bd28e0a is alive
2025-04-21 12:03:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b051f6a is alive
2025-04-21 12:03:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2371d280 is alive
2025-04-21 12:03:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5428793b is alive
2025-04-21 12:03:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15bdfe7b is alive
2025-04-21 12:03:22 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:03:22 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:03:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4fad9bb2 is alive
2025-04-21 12:03:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:03:52 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:03:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@65b6ea79 is alive
2025-04-21 12:04:13 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 12:04:20 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 12:04:20 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 12:04:20 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 12:04:20 DEBUG HikariConfig - autoCommit......................true
2025-04-21 12:04:20 DEBUG HikariConfig - catalog.........................none
2025-04-21 12:04:20 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 12:04:20 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 12:04:20 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 12:04:20 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-21 12:04:20 DEBUG HikariConfig - dataSource......................none
2025-04-21 12:04:20 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 12:04:20 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 12:04:20 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 12:04:20 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 12:04:20 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 12:04:20 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 12:04:20 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 12:04:20 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 12:04:20 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 12:04:20 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 12:04:20 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 12:04:20 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 12:04:20 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 12:04:20 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 12:04:20 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 12:04:20 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 12:04:20 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 12:04:20 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 12:04:20 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 12:04:20 DEBUG HikariConfig - password........................<masked>
2025-04-21 12:04:20 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 12:04:20 DEBUG HikariConfig - readOnly........................false
2025-04-21 12:04:20 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 12:04:20 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 12:04:20 DEBUG HikariConfig - schema..........................none
2025-04-21 12:04:20 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 12:04:20 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 12:04:20 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 12:04:20 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 12:04:20 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 12:04:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a3696ede-e402-4fa0-85a2-c558dc474fda)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (a3696ede-e402-4fa0-85a2-c558dc474fda)
2025-04-21 12:04:21 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70f59913
2025-04-21 12:04:21 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 12:04:21 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 12:04:21 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 12:04:21 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 12:04:21 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 12:04:21 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 12:04:21 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (07757919-f453-40e7-8b55-9600ce3b7e1c)
2025-04-21 12:04:21 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (07757919-f453-40e7-8b55-9600ce3b7e1c)
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17c9d29f
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 12:04:21 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 12:04:21 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 12:04:21 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (addb0ef8-950a-4b04-8e5f-f95a85952ab3)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (addb0ef8-950a-4b04-8e5f-f95a85952ab3)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d31b9ef
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7121850c-9225-470f-9c17-28517f9bbd61)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@702ed190
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5d8445d7
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-21 12:04:21 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@750fe12e] into BootstrapContext; was [null]
2025-04-21 12:04:21 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@f8908f6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e587920]
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (7121850c-9225-470f-9c17-28517f9bbd61)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5833242d
2025-04-21 12:04:21 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 12:04:21 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 12:04:21 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (34fd3454-cc41-4f0b-99ca-5dfcc559634c)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (34fd3454-cc41-4f0b-99ca-5dfcc559634c)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@137489e
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9d0c51c2-efcc-48f6-b6e6-5e6fe0c7b265)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (9d0c51c2-efcc-48f6-b6e6-5e6fe0c7b265)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@69a1b830
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b94d3267-9d39-41dd-bb62-252a42543cd3)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (b94d3267-9d39-41dd-bb62-252a42543cd3)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@794f8a2a
2025-04-21 12:04:21 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 12:04:21 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 12:04:21 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1830963e-2e3a-41b8-91ad-50242850eba2)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (1830963e-2e3a-41b8-91ad-50242850eba2)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@381cdb62
2025-04-21 12:04:21 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 12:04:21 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bf943e85-8e6a-4975-a526-66a729da1959)
2025-04-21 12:04:21 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (bf943e85-8e6a-4975-a526-66a729da1959)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3541747
2025-04-21 12:04:21 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@66f659e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4a68135e)
2025-04-21 12:04:21 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46678e49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@748e9b20)
2025-04-21 12:04:21 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 12:04:21 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2257fadf
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@702ed190`
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 12:04:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0dab59a7-4f28-4508-9724-fb91d5087da2)
2025-04-21 12:04:21 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 12:04:21 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f1ea80d]
2025-04-21 12:04:21 DEBUG PoolBase - HikariPool-1 - Established new connection (0dab59a7-4f28-4508-9724-fb91d5087da2)
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@67504f25
2025-04-21 12:04:21 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 12:04:21 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property id
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property number
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property id
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property name
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property passport
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name User
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property userID
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property email
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property isActive
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property name
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property password
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property userRole
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property guestId
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property age
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property name
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property user
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property bookingId
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property checkIn
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property checkOut
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property room
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property status
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property user
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Room
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property roomID
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property price
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property roomType
2025-04-21 12:04:21 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 12:04:21 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 12:04:21 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 12:04:21 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property amount
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property booking
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property issueDate
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 12:04:21 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 12:04:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 12:04:21 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 12:04:21 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 12:04:21 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:04:21 DEBUG PropertyBinder - Building property user
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 12:04:21 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 12:04:21 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 12:04:22 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 12:04:22 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 12:04:22 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@ebe067d, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 12:04:22 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@70025b99] under count; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3ba3d4b6] under every; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@51b77cdf] under any; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c] under sinh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4] under cosh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@726934e2] under tanh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1319bc2a] under pi; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403] under log; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@12a470dd] under position; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78422efb] under overlay; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@d48e998] under trim; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7885776b] under cast; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@497d4c96] under collate; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1984212d] under extract; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3af58f76] under ifnull; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@27a09971] under pad; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@152c4495] under str; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@f9cab00] under format; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7c5d1d25] under timestampadd; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6a1d526c] under timestampdiff; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6870c3c2] under current_date; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fb0a08c] under current_time; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1faf386c] under current_timestamp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4debbf0] under local_date; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a5e167a] under local_time; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e06f7d] under local_datetime; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66a5755] under offset_datetime; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@771a7d53] under instant; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7e4579c7] under sql; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@726934e2
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1319bc2a
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@5b47731f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6a5e167a
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@60e06f7d
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60a7e509] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2e13f304] under bit_length; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@787508ca] under octet_length; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d24420b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@12a470dd
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6274670b] under bitand; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ce2392] under bitor; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32d5279] under bitxor; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c067c0d] under bitnot; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d0b0cb9] under median; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35] under insert; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6cd15072] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78422efb
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@78cfa264] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@7980cf2c] under listagg; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@682abca7] under array; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1d858300] under array_list; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@610d28b8] under array_agg; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@9c73fff] under array_position; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@23da79eb] under array_positions; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@2703d91] under array_positions_list; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5be052ca] under array_length; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@75023c53] under array_concat; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6723610b] under array_prepend; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@5ba03c82] under array_append; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@991cbde] under array_contains; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@78d71df1] under array_contains_nullable; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2e7bf7b7] under array_overlaps; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2fb25f4c] under array_overlaps_nullable; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78ec89a6] under array_get; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@642ee49c] under array_set; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@4e224df5] under array_remove_index; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32456db0] under array_slice; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f5827d0] under array_trim; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4ed5a1b0] under array_fill; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@18d003cd] under array_fill_list; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@59c04bee] under array_to_string; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@388623ad] under mode; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@91f565d] under percentile_cont; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@46e3559f] under percentile_disc; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ddc6db2] under rank; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cd26422] under dense_rank; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2eda072] under percent_rank; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fa21d49] under cume_dist; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2ed71727] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5261ec9] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65bb6275] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32d5279
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@7951c3a2] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@55fdf7f9] under trunc; prior registration was null
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 12:04:22 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4091b9c3] under date_trunc; prior registration was null
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 12:04:22 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 12:04:22 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 12:04:22 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 12:04:22 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 12:04:22 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 12:04:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 12:04:22 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 12:04:22 DEBUG creation - Starting post-init callbacks
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 12:04:22 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : g1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4217bce6] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : p1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : b1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@91a2543] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : r1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e2c6702] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : r1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : p1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ce267cc] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : p2_0
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 12:04:22 DEBUG create - Created new SQL alias : i1_0
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38f617f4] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 12:04:22 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@13d289c7] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 12:04:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 12:04:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 12:04:22 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 12:04:22 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 12:04:22 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 12:04:22 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 12:04:22 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 12:04:22 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 12:04:22 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62566842] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@61ab6521]
2025-04-21 12:04:22 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 12:04:22 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : bookings
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : guests
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : invoices
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : Passport
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : Persons
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : rooms
2025-04-21 12:04:23 DEBUG Table - No alter strings for table : users
2025-04-21 12:04:23 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b5ad306
2025-04-21 12:04:23 DEBUG SessionFactoryRegistry - Registering SessionFactory: dd5454b8-7ad8-497f-8e80-890d32d3296b (my-persistence-unit)
2025-04-21 12:04:23 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 12:04:23 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 12:04:23 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 12:04:23 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 12:04:23 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 12:04:23 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 12:04:23 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:04:23 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 12:04:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 12:04:23 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 12:04:23 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 12:04:23 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 12:04:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:04:23 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1420118383 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:23 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:04:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:04:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1946866478
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:23 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:04:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f803481
2025-04-21 12:04:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:23 WARN  HomeMenuUI - Invalid login attempt for email: saurav@gmail.com
2025-04-21 12:04:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:04:35 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@956986674 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 973844160
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:04:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50c2ef56
2025-04-21 12:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:04:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@90232530 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 368122875
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:04:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16a499d1
2025-04-21 12:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:36 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 12:04:44 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 12:04:44 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@569302238 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1008273608
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bc62bb9
2025-04-21 12:04:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:44 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 12:04:44 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 12:04:44 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 12:04:44 DEBUG create - Created new SQL alias : b1_0
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9cb927e] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1ab85862] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c9e74f3] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:04:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c9e74f3] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1ab85862
2025-04-21 12:04:44 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:04:44 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:04:44 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 12:04:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 12:04:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@502475785 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@446895188)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1518753442 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1375949608)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1444195845 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 12:04:44 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1956569315
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@882568900 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:04:44 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1320452760
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ead3c67
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@195591185 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:04:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1682860686
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ccecae2
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc075da
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 69566726
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 12:04:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:04:44 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@209089454 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:04:44 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1090300647
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7fa85a55
2025-04-21 12:04:44 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:04:44 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:04:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 12:04:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc075da
2025-04-21 12:04:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:04:44 INFO  UserMenuUI - Displayed booking: ID 65 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 12:04:44 INFO  UserMenuUI - Displayed booking: ID 66 | Check-in: 2025-04-18T11:00 | Check-out: 2025-04-20T10:00 | Status: CONFIRMED
2025-04-21 12:04:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:04:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:05:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:05:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:05:33 INFO  UserMenuUI - User 13 is logging out
2025-04-21 12:05:40 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 12:05:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:05:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@892226413 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 804836251
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 12:05:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@684a802a
2025-04-21 12:05:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:47 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:05:47 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2069664786 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:47 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 599786528
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:47 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 12:05:47 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 12:05:47 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22f046b
2025-04-21 12:05:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:47 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:47 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-21 12:05:47 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-21 12:05:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:05:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:05:52 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@559559324 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1538495109
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b0d85bd
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@271502177 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 525821547
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7944c323
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1669140765 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@446895188)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@982609943 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1375949608)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@517025040 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 12:05:57 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 2072865894
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1822648234 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:05:57 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 125722707
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7097d921
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@706857959 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:05:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 28100456
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25765a49
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38caad07
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 365999192
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 12:05:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:05:57 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1923130893 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:05:57 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 415117829
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6fd97fd1
2025-04-21 12:05:57 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:05:57 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:05:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 12:05:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38caad07
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:05:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:06:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3541747 is alive
2025-04-21 12:06:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@137489e is alive
2025-04-21 12:06:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67504f25 is alive
2025-04-21 12:06:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-21 12:06:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@381cdb62 is alive
2025-04-21 12:06:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a1b830 is alive
2025-04-21 12:06:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5833242d is alive
2025-04-21 12:06:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d31b9ef is alive
2025-04-21 12:06:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@794f8a2a is alive
2025-04-21 12:06:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17c9d29f is alive
2025-04-21 12:06:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:06:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:06:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:06:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:07:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:07:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:07:27 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-21 12:07:27 WARN  StaffMenuUI - Invalid email format entered: 
2025-04-21 12:07:35 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2077969769 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:07:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 403649458
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@391e85df
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1220780271 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:07:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2058066102
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e3405a1
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user AND b.status = :status
2025-04-21 12:07:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 12:07:43 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(status)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).status)
2025-04-21 12:07:43 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [entity-path] - `org.example.entity.Booking(b).user`
                :user
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Booking(b).status`
                :status
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 12:07:43 DEBUG create - Created new SQL alias : b1_0
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b2acb12] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@455d04d2] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@998fbd4] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:07:43 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@998fbd4] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@455d04d2
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(status)
2025-04-21 12:07:43 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-21 12:07:43 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 12:07:43 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1388002765 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@446895188)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1699592203 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1375949608)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1365260222 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 12:07:43 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1004866348
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1810368041 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:07:43 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 673992821
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ed35f24
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@908802124 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:07:43 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1027629029
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52c6e959
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b475742
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 842821532
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 12:07:43 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:07:43 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@230465865 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:07:43 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1212708513
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20163008
2025-04-21 12:07:43 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:07:43 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:07:43 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 12:07:43 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b475742
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:07:43 ERROR BookingDaoImpl - Error occurred while fetching confirmed booking for user ID: 13
jakarta.persistence.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:131) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getConfirmedBookingByUserId(BookingDaoImpl.java:99) ~[classes/:?]
	at java.util.Optional.flatMap(Optional.java:289) [?:?]
	at org.example.service.BookingServiceImpl.getConfirmedBookingByUserId(BookingServiceImpl.java:77) [classes/:?]
	at org.example.controller.BookingController.getConfirmedBookingByUserId(BookingController.java:73) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.checkoutByStaff(StaffMenuUI.java:234) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:86) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:102) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:578) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:561) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-21 12:07:43 WARN  StaffMenuUI - No active confirmed booking found for user: saurav@gmail.com
2025-04-21 12:07:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:07:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:07:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3541747 is alive
2025-04-21 12:07:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@137489e is alive
2025-04-21 12:07:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67504f25 is alive
2025-04-21 12:07:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@70f59913 is alive
2025-04-21 12:08:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@381cdb62 is alive
2025-04-21 12:08:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69a1b830 is alive
2025-04-21 12:08:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5833242d is alive
2025-04-21 12:08:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d31b9ef is alive
2025-04-21 12:08:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@794f8a2a is alive
2025-04-21 12:08:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@17c9d29f is alive
2025-04-21 12:08:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:08:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:08:34 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 12:08:52 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 12:08:52 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 12:08:52 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 12:08:52 DEBUG HikariConfig - autoCommit......................true
2025-04-21 12:08:52 DEBUG HikariConfig - catalog.........................none
2025-04-21 12:08:52 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 12:08:52 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 12:08:52 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 12:08:52 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@1e0f9063
2025-04-21 12:08:52 DEBUG HikariConfig - dataSource......................none
2025-04-21 12:08:52 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 12:08:52 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 12:08:52 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 12:08:52 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 12:08:52 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 12:08:52 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 12:08:52 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 12:08:52 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 12:08:52 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 12:08:52 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 12:08:52 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 12:08:52 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 12:08:52 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 12:08:52 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 12:08:52 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 12:08:52 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 12:08:52 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 12:08:52 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 12:08:52 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 12:08:52 DEBUG HikariConfig - password........................<masked>
2025-04-21 12:08:52 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 12:08:52 DEBUG HikariConfig - readOnly........................false
2025-04-21 12:08:52 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 12:08:52 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 12:08:52 DEBUG HikariConfig - schema..........................none
2025-04-21 12:08:52 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 12:08:52 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 12:08:52 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 12:08:52 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 12:08:52 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 12:08:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6f3faa23-64a2-4e50-84e3-6eb79fdf96ea)
2025-04-21 12:08:52 DEBUG PoolBase - HikariPool-1 - Established new connection (6f3faa23-64a2-4e50-84e3-6eb79fdf96ea)
2025-04-21 12:08:52 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3c0fae6c
2025-04-21 12:08:52 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 12:08:52 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 12:08:52 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 12:08:52 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 12:08:52 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 12:08:52 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 12:08:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8bf53c6a-e628-4480-aab6-ea26de27ff21)
2025-04-21 12:08:52 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 12:08:52 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Established new connection (8bf53c6a-e628-4480-aab6-ea26de27ff21)
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@293c2d56
2025-04-21 12:08:53 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 12:08:53 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 12:08:53 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 12:08:53 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ef5560d1-f095-493b-b730-f47ddd950a55)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Established new connection (ef5560d1-f095-493b-b730-f47ddd950a55)
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@15865bf1
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e8fc346e-18a1-45a2-bad3-521cf41cd125)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6b410923
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@57bd2029
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@203dd56b
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@e8fadb0
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6d64b553
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@53667cbe
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1d3e6d34
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6eafb10e
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@26a94fa5
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@464a4442
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2873d672
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3bc735b3
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@577f9109
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4303b7f0
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@757529a4
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@779de014
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Established new connection (e8fc346e-18a1-45a2-bad3-521cf41cd125)
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@29fc7dec
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c41d037
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2234078
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5ec77191
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4642b71d
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1450078a
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c68a5f8
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@69c6161d
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3aefae67
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2e1792e7
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6719a5b8
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3eb631b8
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@796d3c9f
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6bff19ff
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@41e1455d
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4e558728
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5eccd3b9
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4d6f197e
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6ef7623
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@64e1dd11
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5c089b2f
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6999cd39
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14bae047
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ed9ae94
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66908383
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41477a6d
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2bc12da
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3122b117
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534ca02b
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29a23c3d
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b6ac111
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fe46b62
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591fd34d
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@61e45f87
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7c9b78e3
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3068b369
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@17ca8b92
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5491f68b
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@736ac09a
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6ecd665
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@45394b31
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1ec7d8b3
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b0ca5e1
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5bb3131b
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@54dcbb9f
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@74fef3f7
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2a037324
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@69eb86b4
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@585ac855
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5bb8f9e2
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6a933be2
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5f78de22
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@599f571f
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@599f571f
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@72458efc
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@36bc415e
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6a74d228
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@349d0836
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6a714237
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3e134896
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@72ba28ee
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2e3a5237
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ebadd3d
2025-04-21 12:08:53 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5b78fdb1] into BootstrapContext; was [null]
2025-04-21 12:08:53 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48bfb884] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@11653e3b]
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (85f82b6f-c12e-4b3a-9aaf-8cd0c19cbccd)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Established new connection (85f82b6f-c12e-4b3a-9aaf-8cd0c19cbccd)
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@33248cb7
2025-04-21 12:08:53 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 12:08:53 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 12:08:53 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (abb390b6-35b3-495a-8f9c-8c0e54ceff76)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Established new connection (abb390b6-35b3-495a-8f9c-8c0e54ceff76)
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1554894b
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6f61e070-e12b-4503-afb0-aef63664da0d)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Established new connection (6f61e070-e12b-4503-afb0-aef63664da0d)
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@78f1a5bf
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2d89d536-3656-4e6a-850a-50659f1ecc5e)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Established new connection (2d89d536-3656-4e6a-850a-50659f1ecc5e)
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@168f1189
2025-04-21 12:08:53 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 12:08:53 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 12:08:53 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (31cad088-1530-4d19-85d9-0b1042b60c64)
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Established new connection (31cad088-1530-4d19-85d9-0b1042b60c64)
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@56426a6a
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-21 12:08:53 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (36e2adc2-99df-4080-ab8e-7849d4a58159)
2025-04-21 12:08:53 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 12:08:53 DEBUG PoolBase - HikariPool-1 - Established new connection (36e2adc2-99df-4080-ab8e-7849d4a58159)
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6c811c2a
2025-04-21 12:08:53 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 12:08:53 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@168cd36b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@d8d9199)
2025-04-21 12:08:53 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3901f6af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@602ae7b6)
2025-04-21 12:08:53 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 12:08:53 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3936df72
2025-04-21 12:08:53 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3936df72
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@599f571f`
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 12:08:53 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 12:08:53 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 12:08:53 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec6a3d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67efd2c2]
2025-04-21 12:08:53 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 12:08:53 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 12:08:53 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 12:08:53 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property id
2025-04-21 12:08:53 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property number
2025-04-21 12:08:53 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 12:08:53 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 12:08:53 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property id
2025-04-21 12:08:53 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property name
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property passport
2025-04-21 12:08:53 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 12:08:53 DEBUG EntityBinder - Import with entity name User
2025-04-21 12:08:53 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property userID
2025-04-21 12:08:53 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property email
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property isActive
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property name
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property password
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property userRole
2025-04-21 12:08:53 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 12:08:53 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 12:08:53 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property guestId
2025-04-21 12:08:53 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property age
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property name
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property user
2025-04-21 12:08:53 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 12:08:53 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 12:08:53 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property bookingId
2025-04-21 12:08:53 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property checkIn
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property checkOut
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property room
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property status
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property user
2025-04-21 12:08:53 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 12:08:53 DEBUG EntityBinder - Import with entity name Room
2025-04-21 12:08:53 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property roomID
2025-04-21 12:08:53 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property price
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property roomType
2025-04-21 12:08:53 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 12:08:53 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 12:08:53 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 12:08:53 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property amount
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property booking
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property issueDate
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 12:08:53 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 12:08:53 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 12:08:53 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 12:08:53 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 12:08:53 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 12:08:53 DEBUG PropertyBinder - Building property user
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 12:08:53 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 12:08:53 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 12:08:53 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 12:08:53 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 12:08:53 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 12:08:53 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 12:08:53 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 12:08:53 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 12:08:54 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 12:08:54 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 12:08:54 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, jboss.modules.system.pkgs=com.intellij.rt, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@746c411c, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, java.class.version=65.0}
2025-04-21 12:08:54 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1bedc703] under count; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@433d9680] under every; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@566e142] under any; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d] under sinh; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1] under cosh; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f] under tanh; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d] under pi; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619] under log; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@412c5e8b] under position; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6dce59e] under overlay; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@691124ee] under trim; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@27f3f512] under cast; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e593b08] under collate; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3d53e6f7] under extract; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1e01b133] under ifnull; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@78da899f] under pad; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1fecfaea] under str; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3592c1c4] under format; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@47b33e07] under timestampadd; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@626d2016] under timestampdiff; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@193bb809] under current_date; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64b018f3] under current_time; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20801cbb] under current_timestamp; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@581b1c08] under local_date; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c240cf2] under local_time; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78b7f805] under local_datetime; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58f2466c] under offset_datetime; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5809fa26] under instant; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7e8279e5] under sql; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75fe1619
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b53840a] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f238e4f
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29bcf51d
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e54a6b1
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b24087d
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@64b0d1fa] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1c240cf2
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@78b7f805
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@e9474f] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1c61eda5] under bit_length; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1859ffda] under octet_length; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59838256] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@412c5e8b
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@131a7516] under bitand; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ae15] under bitor; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0] under bitxor; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12219f6a] under bitnot; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52d3fafd] under median; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1376883] under insert; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4bc6da03] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6dce59e
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4f59a516] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@4262fdeb] under listagg; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@53aa38be] under array; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@37a0ec3c] under array_list; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@50b93353] under array_agg; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@36bed37a] under array_position; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@41bfa9e9] under array_positions; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@100ad67e] under array_positions_list; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@713a35c5] under array_length; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@68b11545] under array_concat; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@445821a6] under array_prepend; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@2c0c4c0a] under array_append; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@65c5bf0e] under array_contains; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@697d6ded] under array_contains_nullable; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@f2b90fc] under array_overlaps; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2bb41f5c] under array_overlaps_nullable; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@251c4280] under array_get; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@420a8042] under array_set; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@19b02dfd] under array_remove_index; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3dce6dd8] under array_slice; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69f2cb04] under array_trim; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@656a3d6b] under array_fill; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@25b38203] under array_fill_list; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@58833798] under array_to_string; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@401c4250] under mode; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1a950fdd] under percentile_cont; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@77724cbe] under percentile_disc; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@525b1b70] under rank; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16d07cf3] under dense_rank; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16f0ec18] under percent_rank; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6c977dcf] under cume_dist; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@359066bc] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@385dfb63] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@364fd4ae] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577536e0
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@d325518] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@796d33eb] under trunc; prior registration was null
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 12:08:54 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c059a68] under date_trunc; prior registration was null
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 12:08:54 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 12:08:54 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 12:08:54 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 12:08:54 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 12:08:54 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 12:08:54 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 12:08:54 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 12:08:54 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 12:08:54 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 12:08:54 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 12:08:54 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 12:08:54 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 12:08:54 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 12:08:54 DEBUG creation - Starting post-init callbacks
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 12:08:54 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 12:08:54 DEBUG create - Created new SQL alias : g1_0
2025-04-21 12:08:54 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 12:08:54 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6eabe718] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 12:08:54 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:08:54 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 12:08:54 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 12:08:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 12:08:55 DEBUG create - Created new SQL alias : p1_0
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 12:08:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 12:08:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 12:08:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 12:08:55 DEBUG create - Created new SQL alias : b1_0
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ea3839e] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 12:08:55 DEBUG create - Created new SQL alias : r1_0
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52b32b70] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:08:55 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:08:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 12:08:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 12:08:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 12:08:55 DEBUG create - Created new SQL alias : r1_0
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 12:08:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 12:08:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 12:08:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 12:08:55 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 12:08:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 12:08:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 12:08:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 12:08:55 DEBUG create - Created new SQL alias : p1_0
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15f2a43f] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 12:08:55 DEBUG create - Created new SQL alias : p2_0
2025-04-21 12:08:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 12:08:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 12:08:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 12:08:55 DEBUG create - Created new SQL alias : i1_0
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@699d96bc] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@145e958f] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 12:08:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 12:08:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 12:08:55 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 12:08:55 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 12:08:55 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 12:08:55 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 12:08:55 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 12:08:55 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 12:08:55 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec6a3d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3e39e0fb]
2025-04-21 12:08:55 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 12:08:55 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 12:08:55 DEBUG Table - No alter strings for table : bookings
2025-04-21 12:08:55 DEBUG Table - No alter strings for table : guests
2025-04-21 12:08:55 DEBUG Table - No alter strings for table : invoices
2025-04-21 12:08:55 DEBUG Table - No alter strings for table : Passport
2025-04-21 12:08:55 DEBUG Table - No alter strings for table : Persons
2025-04-21 12:08:55 DEBUG Table - No alter strings for table : rooms
2025-04-21 12:08:55 DEBUG Table - No alter strings for table : users
2025-04-21 12:08:55 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a6195b8
2025-04-21 12:08:55 DEBUG SessionFactoryRegistry - Registering SessionFactory: 6c8847c7-32d9-41af-b708-ccb5c83fa730 (my-persistence-unit)
2025-04-21 12:08:55 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 12:08:55 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 12:08:55 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 12:08:55 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 12:08:55 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 12:08:55 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 12:08:55 DEBUG create - Created new SQL alias : u1_0
2025-04-21 12:08:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 12:08:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 12:08:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 12:08:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 12:08:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 12:08:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:08:55 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1943587031 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:08:55 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 12:08:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 12:08:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1284612104
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 12:08:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 12:08:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6738e8b2
2025-04-21 12:08:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:08:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:08:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:08:55 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@781307753 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:08:55 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 12:08:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 12:08:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 208157941
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:08:55 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 12:08:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 12:08:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2c224096
2025-04-21 12:08:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:08:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:08:55 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-21 12:08:55 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-21 12:09:00 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-21 12:09:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:09:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1413804483 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:09:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:09:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:09:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:09:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 868872620
2025-04-21 12:09:05 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:09:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:09:05 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:09:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:09:05 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:09:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:09:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4070c4ff
2025-04-21 12:09:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:09:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:09:05 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-21 12:09:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:09:13 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@414551159 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:09:13 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1994565153
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:09:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42805abe
2025-04-21 12:09:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:09:13 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user AND b.status = :status
2025-04-21 12:09:13 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 12:09:13 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(status)] : null -> SqmBasicValuedSimplePath(org.example.entity.Booking(b).status)
2025-04-21 12:09:13 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [and]
            -> [EQUAL]
                -> [entity-path] - `org.example.entity.Booking(b).user`
                :user
            <- [EQUAL]
            -> [EQUAL]
                -> [basic-path] - `org.example.entity.Booking(b).status`
                :status
            <- [EQUAL]
          <- [and]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 12:09:13 DEBUG create - Created new SQL alias : b1_0
2025-04-21 12:09:13 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 12:09:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@31c56721] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 12:09:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f71ae7f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:09:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d1d85d0] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 12:09:13 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d1d85d0] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@3f71ae7f
2025-04-21 12:09:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:09:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 12:09:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 12:09:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(status)
2025-04-21 12:09:13 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Booking(b).status) 
2025-04-21 12:09:13 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 12:09:13 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 12:09:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:09:13 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1468111065 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@81709688)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1600512192 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1449969327)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@225500139 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 12:09:13 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 1073035012
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:09:13 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 12:09:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:09:13 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1481141739 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:09:13 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1464018925
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 12:09:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39f8adc0
2025-04-21 12:09:13 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 12:09:13 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 12:09:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:09:13 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@208824749 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:09:13 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1152281446
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:09:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b0e5d5f
2025-04-21 12:09:13 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 12:09:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cdc8499
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 707834059
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:09:13 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 12:09:13 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 12:09:13 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:09:13 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@523938160 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:09:13 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 1866476009
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 12:09:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@257b6c58
2025-04-21 12:09:13 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:09:13 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:09:13 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 12:09:13 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cdc8499
2025-04-21 12:09:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:09:13 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:09:13 ERROR BookingDaoImpl - Error occurred while fetching confirmed booking for user ID: 13
jakarta.persistence.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:131) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getConfirmedBookingByUserId(BookingDaoImpl.java:99) ~[classes/:?]
	at java.util.Optional.flatMap(Optional.java:289) [?:?]
	at org.example.service.BookingServiceImpl.getConfirmedBookingByUserId(BookingServiceImpl.java:77) [classes/:?]
	at org.example.controller.BookingController.getConfirmedBookingByUserId(BookingController.java:73) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.checkoutByStaff(StaffMenuUI.java:234) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:86) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:102) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:578) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:561) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-21 12:14:01 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m9s6ms73µs301ns).
2025-04-21 12:14:01 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:14:01 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:14:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78f1a5bf is alive
2025-04-21 12:14:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-21 12:14:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@293c2d56 is alive
2025-04-21 12:14:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@29fc7dec is alive
2025-04-21 12:14:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:14:27 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2052202839 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:14:27 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 12:14:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33248cb7 is alive
2025-04-21 12:14:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@168f1189 is alive
2025-04-21 12:14:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56426a6a is alive
2025-04-21 12:14:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15865bf1 is alive
2025-04-21 12:14:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1554894b is alive
2025-04-21 12:14:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 12:14:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 12:14:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 283920161
2025-04-21 12:14:27 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:14:27 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:14:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c811c2a is alive
2025-04-21 12:14:27 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:14:27 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:14:27 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:14:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 12:14:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bdf94f2
2025-04-21 12:14:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:14:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:14:39 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:14:39 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 12:14:42 INFO  StaffMenuUI - Initiating checkout for user: SAURAV SHARMA (saurav@gmail.com)
2025-04-21 12:14:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:14:49 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1804771537 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:14:49 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:14:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:14:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1053172033
2025-04-21 12:14:49 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:14:49 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:14:49 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:14:49 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:14:49 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:14:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:14:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@402c9a60
2025-04-21 12:14:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:14:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 12:14:57 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2101604809 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@81709688)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@249416123 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1449969327)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@18758920 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 12:14:57 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? and b1_0.status=?
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 664449374
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:14:57 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 12:14:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:14:57 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1461464792 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:14:57 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1020198427
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 12:14:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a926db4
2025-04-21 12:14:57 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 12:14:57 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 12:14:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:14:57 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1373696747 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 12:14:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 675475202
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 12:14:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e63374b
2025-04-21 12:14:57 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 12:14:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@aa794a3
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [0] - [66]
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 66
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#66] : 500058139
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [3] - [1]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 12:14:57 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 12:14:57 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#1) : 1
2025-04-21 12:14:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 12:14:57 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@583765599 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 12:14:57 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 1
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#1] : 480291392
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#1
2025-04-21 12:14:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@626766fd
2025-04-21 12:14:57 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#1] : 1 has being loaded by session.internalLoad.
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 12:14:57 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 12:14:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#66
2025-04-21 12:14:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@aa794a3
2025-04-21 12:14:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:14:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 12:15:09 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 12:15:09 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 13:19:47 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h4m37s455ms163µs201ns).
2025-04-21 13:19:47 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 13:19:47 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 13:19:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78f1a5bf is alive
2025-04-21 13:19:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3c0fae6c is alive
2025-04-21 13:19:47 ERROR BookingDaoImpl - Error occurred while fetching confirmed booking for user ID: 13
jakarta.persistence.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:131) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getConfirmedBookingByUserId(BookingDaoImpl.java:99) ~[classes/:?]
	at java.util.Optional.flatMap(Optional.java:289) [?:?]
	at org.example.service.BookingServiceImpl.getConfirmedBookingByUserId(BookingServiceImpl.java:77) [classes/:?]
	at org.example.controller.BookingController.getConfirmedBookingByUserId(BookingController.java:73) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.checkoutByStaff(StaffMenuUI.java:234) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:86) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:102) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:578) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:561) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-21 13:19:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@293c2d56 is alive
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@29fc7dec is alive
2025-04-21 15:17:19 WARN  StaffMenuUI - No active confirmed booking found for user: saurav@gmail.com
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@33248cb7 is alive
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@168f1189 is alive
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@56426a6a is alive
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@15865bf1 is alive
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1554894b is alive
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6c811c2a is alive
2025-04-21 15:17:19 WARN  HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h57m33s250ms677µs600ns).
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=0/10, idle=0/10, active=0, waiting=0)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3c0fae6c: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (db303236-e89b-4202-b2b1-26917544374d)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@293c2d56: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1554894b: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@78f1a5bf: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@33248cb7: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@56426a6a: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6c811c2a: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@15865bf1: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@29fc7dec: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@168f1189: (connection has passed maxLifetime)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Established new connection (db303236-e89b-4202-b2b1-26917544374d)
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6957aa83
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (fb884587-5087-4c85-8e16-e6482a79f115)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Established new connection (fb884587-5087-4c85-8e16-e6482a79f115)
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d3327a5
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (34a1c9a0-7f6d-439b-8f72-3f87d37f6086)
2025-04-21 15:17:19 DEBUG PoolBase - HikariPool-1 - Established new connection (34a1c9a0-7f6d-439b-8f72-3f87d37f6086)
2025-04-21 15:17:19 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b4ab55d
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (65ff309c-2025-41ba-bb3e-27d5031b961f)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Established new connection (65ff309c-2025-41ba-bb3e-27d5031b961f)
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@48346e49
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f02f60fc-a28c-4dc9-b7f4-affb46b65bf5)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Established new connection (f02f60fc-a28c-4dc9-b7f4-affb46b65bf5)
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4d8f247b
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (62cb7c43-a907-42ed-bb5d-c0fc867fa0d5)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Established new connection (62cb7c43-a907-42ed-bb5d-c0fc867fa0d5)
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2812a677
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (4a351184-0d08-483f-9866-2f609e6b0266)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Established new connection (4a351184-0d08-483f-9866-2f609e6b0266)
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2ad50ad2
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d0df5efb-d0d2-4bea-b2aa-5d34ebeeb140)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Established new connection (d0df5efb-d0d2-4bea-b2aa-5d34ebeeb140)
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7814bf70
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (014ca023-f6ec-4fab-95f8-0cbb1775d073)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Established new connection (014ca023-f6ec-4fab-95f8-0cbb1775d073)
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@13dcc2e7
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b74df8b1-b116-4dad-8fbe-58ee7fbd2f1d)
2025-04-21 15:17:20 DEBUG PoolBase - HikariPool-1 - Established new connection (b74df8b1-b116-4dad-8fbe-58ee7fbd2f1d)
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@258e8813
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:17:20 DEBUG HikariPool - HikariPool-1 - Connection not added, stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:17:26 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 15:17:26 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 15:17:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 15:17:30 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@236966591 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 15:17:30 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 806842585
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 15:17:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40edc64e
2025-04-21 15:17:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:17:30 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:17:30 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 15:17:30 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 15:17:30 DEBUG create - Created new SQL alias : r1_0
2025-04-21 15:17:30 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 15:17:30 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 15:17:30 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 15:17:30 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 15:17:30 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 15:17:30 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1750350389 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 15:17:30 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1290772670
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 15:17:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1213257323
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 15:17:30 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 15:17:30 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 569670093
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:30 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 271570717
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 148900866
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1179476219
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1148535790
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 705487682
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 579103261
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 266570766
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1634190383
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 750529970
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 770272954
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1056511221
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 15:17:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 15:17:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 15:17:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a3be84
2025-04-21 15:17:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:17:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:17:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:17:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:18:14 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 103 from 2025-04-21T15:18 to 2025-04-23T10:00
2025-04-21 15:18:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:18:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:18:29 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 15:18:29 DEBUG TransactionImpl - begin
2025-04-21 15:18:29 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 15:18:29 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 15:18:29 DEBUG results - Initializer list is empty
2025-04-21 15:18:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@71cc0e35
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [0] - [67]
2025-04-21 15:18:29 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@6958d5d0
2025-04-21 15:18:29 DEBUG TransactionImpl - committing
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 15:18:29 DEBUG EntityPrinter - Listing entities:
2025-04-21 15:18:29 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-21T15:18, checkOut=2025-04-23T10:00, user=org.example.entity.User#13, bookingId=67, room=org.example.entity.Room#3, status=CONFIRMED}
2025-04-21 15:18:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:18:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:18:29 INFO  BookingServiceImpl - Booking created successfully with ID: 67
2025-04-21 15:18:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 15:18:29 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1145835418 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 15:18:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 15:18:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 15:18:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 2097668174
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 15:18:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 15:18:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@599310ab
2025-04-21 15:18:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:18:29 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 15:18:29 DEBUG TransactionImpl - begin
2025-04-21 15:18:29 DEBUG create - Created new SQL alias : r1_0
2025-04-21 15:18:29 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 15:18:29 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 15:18:29 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 15:18:29 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 15:18:29 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@981323703 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 15:18:29 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 15:18:29 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 15:18:29 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 1383367438
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 15:18:29 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 15:18:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a0ee80
2025-04-21 15:18:29 DEBUG TransactionImpl - committing
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 15:18:29 DEBUG EntityPrinter - Listing entities:
2025-04-21 15:18:29 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=103, price=7000.0, roomID=3, roomType=SUITE}
2025-04-21 15:18:29 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 15:18:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:18:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:18:29 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=3, roomNumber=103, roomType=SUITE, price=7000.0, isAvailable=false}
2025-04-21 15:18:29 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=3, roomNumber=103, roomType=SUITE, price=7000.0, isAvailable=false}
2025-04-21 15:18:29 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 15:18:29 DEBUG TransactionImpl - begin
2025-04-21 15:18:29 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 15:18:29 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 15:18:29 DEBUG results - Initializer list is empty
2025-04-21 15:18:29 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@49f41c2e
2025-04-21 15:18:29 DEBUG results - Extracted JDBC value [0] - [39]
2025-04-21 15:18:29 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@194eae3e
2025-04-21 15:18:29 DEBUG TransactionImpl - committing
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 15:18:29 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 15:18:29 DEBUG EntityPrinter - Listing entities:
2025-04-21 15:18:29 DEBUG EntityPrinter - org.example.entity.Invoice{amount=14000.0, booking=org.example.entity.Booking#67, invoiceId=39, issueDate=2025-04-21T15:18:29.657769200, user=org.example.entity.User#13, paymentStatus=PENDING}
2025-04-21 15:18:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:18:29 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 15:18:29 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-21 15:18:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:18:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:18:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:19:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:19:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:19:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:19:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:19:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:19:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:19:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:19:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:19:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:19:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:19:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:19:46 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Checkout
2025-04-21 15:19:49 WARN  StaffMenuUI - Invalid email format entered: 67
2025-04-21 15:19:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:19:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:20:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:20:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:20:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:20:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:20:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:20:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:20:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:20:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:20:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:20:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:20:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:21:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:21:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:21:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:21:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:21:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:21:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:21:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:22:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:22:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:22:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:22:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:22:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:22:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:22:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:22:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:22:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:22:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:22:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:23:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:23:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:23:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:23:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:23:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:23:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:23:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:23:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:24:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:24:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:24:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:24:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:24:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:24:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:24:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:24:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:24:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:24:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:25:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:25:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:25:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:25:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:25:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:25:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:25:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:25:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:25:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:25:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:26:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:26:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:26:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:26:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:26:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:26:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:26:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:26:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:26:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:26:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:27:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:27:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:27:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:27:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:27:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:27:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:27:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:27:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:27:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:27:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:28:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:28:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:28:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:28:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:28:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:28:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:28:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:28:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:28:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:29:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:29:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:29:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:29:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:29:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:29:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:29:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:29:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:29:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:29:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:30:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:30:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:30:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:30:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:30:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:30:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:30:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:30:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:31:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:31:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:31:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:31:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:31:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:31:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:31:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:31:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:31:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:31:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:31:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:32:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:32:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:32:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:32:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:32:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:32:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:32:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:32:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:32:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:32:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:33:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:33:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:33:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:33:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:33:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:33:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:33:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:33:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:33:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:34:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:34:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:34:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:34:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:34:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:34:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:34:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:34:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:34:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:34:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:34:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:35:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:35:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:35:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:35:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:35:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:35:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:35:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:36:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:36:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:36:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:36:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:36:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:36:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:36:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:36:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:36:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:36:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:36:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:37:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:37:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:37:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:37:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:37:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:37:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:37:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:37:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:37:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:38:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:38:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:38:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:38:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:38:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:38:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:38:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:38:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:38:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:38:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:38:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:39:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:39:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:39:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:39:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1d3327a5 is alive
2025-04-21 15:39:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:39:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:39:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:40:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:40:08 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1d3327a5: (connection has passed maxLifetime)
2025-04-21 15:40:08 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (321f7cd0-f205-452e-a23a-62ba25731500)
2025-04-21 15:40:08 DEBUG PoolBase - HikariPool-1 - Established new connection (321f7cd0-f205-452e-a23a-62ba25731500)
2025-04-21 15:40:08 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@12f56e04
2025-04-21 15:40:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:40:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:40:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:40:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:40:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:40:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:40:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:40:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7814bf70 is alive
2025-04-21 15:40:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:40:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:41:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:41:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:41:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:41:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:41:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:41:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:41:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:41:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:42:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:42:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:42:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3b4ab55d is alive
2025-04-21 15:42:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:42:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:42:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:42:23 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@7814bf70: (connection has passed maxLifetime)
2025-04-21 15:42:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6f21db9b-5d77-475a-8c62-be257de716bc)
2025-04-21 15:42:23 DEBUG PoolBase - HikariPool-1 - Established new connection (6f21db9b-5d77-475a-8c62-be257de716bc)
2025-04-21 15:42:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2564e819
2025-04-21 15:42:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:42:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:42:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:42:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:43:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48346e49 is alive
2025-04-21 15:43:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:43:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:43:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:43:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2812a677 is alive
2025-04-21 15:43:42 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@48346e49: (connection has passed maxLifetime)
2025-04-21 15:43:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b36d1bcb-9e92-4958-97b0-ad373b8ba8ac)
2025-04-21 15:43:42 DEBUG PoolBase - HikariPool-1 - Established new connection (b36d1bcb-9e92-4958-97b0-ad373b8ba8ac)
2025-04-21 15:43:42 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@61c3de86
2025-04-21 15:43:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:43:48 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2812a677: (connection has passed maxLifetime)
2025-04-21 15:43:48 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (145215f7-b2ad-4ec8-89e8-ea7b08eb291d)
2025-04-21 15:43:48 DEBUG PoolBase - HikariPool-1 - Established new connection (145215f7-b2ad-4ec8-89e8-ea7b08eb291d)
2025-04-21 15:43:48 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11f22475
2025-04-21 15:43:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:43:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:43:53 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3b4ab55d: (connection has passed maxLifetime)
2025-04-21 15:43:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0fa38209-f0be-423a-b6af-9fc47a640af7)
2025-04-21 15:43:53 DEBUG PoolBase - HikariPool-1 - Established new connection (0fa38209-f0be-423a-b6af-9fc47a640af7)
2025-04-21 15:43:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@30e972e2
2025-04-21 15:44:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:44:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6957aa83 is alive
2025-04-21 15:44:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d8f247b is alive
2025-04-21 15:44:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:44:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:44:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:44:23 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@6957aa83: (connection has passed maxLifetime)
2025-04-21 15:44:23 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b98a68b1-d756-49a4-89e1-60d2843f8851)
2025-04-21 15:44:23 DEBUG PoolBase - HikariPool-1 - Established new connection (b98a68b1-d756-49a4-89e1-60d2843f8851)
2025-04-21 15:44:23 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@78a35843
2025-04-21 15:44:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@13dcc2e7 is alive
2025-04-21 15:44:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:44:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:44:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:45:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:45:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:45:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 15:45:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 15:45:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ad50ad2 is alive
2025-04-21 15:45:38 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@13dcc2e7: (connection has passed maxLifetime)
2025-04-21 15:45:38 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f5617a9a-0fd4-4042-a807-9962f26808ad)
2025-04-21 15:45:38 DEBUG PoolBase - HikariPool-1 - Established new connection (f5617a9a-0fd4-4042-a807-9962f26808ad)
2025-04-21 15:45:38 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6e053f17
2025-04-21 15:45:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:45:46 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@4d8f247b: (connection has passed maxLifetime)
2025-04-21 15:45:46 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bb7853bd-2737-48ff-b5a4-922ef1f9fb7c)
2025-04-21 15:45:46 DEBUG PoolBase - HikariPool-1 - Established new connection (bb7853bd-2737-48ff-b5a4-922ef1f9fb7c)
2025-04-21 15:45:46 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@688d91a4
2025-04-21 15:45:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:45:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:45:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 15:46:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@258e8813 is alive
2025-04-21 15:46:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 15:46:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:46:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:46:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:46:37 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2ad50ad2: (connection has passed maxLifetime)
2025-04-21 15:46:37 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7deebb3c-45f0-474e-a94f-a2ee5386766c)
2025-04-21 15:46:37 DEBUG PoolBase - HikariPool-1 - Established new connection (7deebb3c-45f0-474e-a94f-a2ee5386766c)
2025-04-21 15:46:37 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@43e5c5bb
2025-04-21 15:46:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:46:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:47:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 15:47:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 15:47:12 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@258e8813: (connection has passed maxLifetime)
2025-04-21 15:47:12 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (469630a3-4026-4e5e-97cf-6dc447eaafab)
2025-04-21 15:47:12 DEBUG PoolBase - HikariPool-1 - Established new connection (469630a3-4026-4e5e-97cf-6dc447eaafab)
2025-04-21 15:47:12 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c25be0b
2025-04-21 15:47:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:47:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:47:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:47:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 15:47:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 15:47:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:47:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:47:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 15:47:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 15:48:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:48:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:48:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:48:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 15:48:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 15:48:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 15:48:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:48:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:49:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 15:49:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:49:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 15:49:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:49:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:49:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 15:49:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 15:49:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:49:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 15:49:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:49:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:50:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:50:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:50:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 15:50:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 15:50:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 15:50:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:50:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 15:50:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:50:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:50:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 15:51:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:51:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:51:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:51:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 15:51:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 15:51:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 15:51:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:51:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:52:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 15:52:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 15:52:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 15:52:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:52:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:52:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:52:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 15:52:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 15:52:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:52:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:53:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:53:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 15:53:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:53:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:53:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 15:53:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 15:53:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 15:53:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:53:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:53:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 15:54:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:54:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 15:54:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:54:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:54:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 15:54:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 15:54:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:54:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:54:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:55:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 15:55:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:55:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:55:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 15:55:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 15:55:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 15:55:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 15:55:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:55:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:55:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:56:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 15:56:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 15:56:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 15:56:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:56:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:56:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:56:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:56:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:56:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 15:57:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 15:57:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 15:57:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:57:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:57:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:57:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 15:57:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 15:57:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:57:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:57:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 15:57:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:57:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 15:58:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 15:58:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:58:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:58:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 15:58:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 15:58:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:58:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:59:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 15:59:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 15:59:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:59:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:59:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 15:59:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 15:59:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 15:59:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 15:59:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 15:59:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 15:59:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 15:59:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 16:00:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:00:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:00:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 16:00:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 16:00:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 16:00:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:00:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:00:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 16:01:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 16:01:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 16:01:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:01:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:01:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 16:01:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 16:01:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 16:01:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 16:01:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:01:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:02:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 16:02:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 16:02:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:02:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:02:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 16:02:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 16:02:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 16:02:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:02:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:03:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 16:03:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:03:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:03:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 16:03:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 16:03:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 16:03:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 16:03:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 16:03:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:03:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:04:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 16:04:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 16:04:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 16:04:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 16:04:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:04:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:04:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 16:04:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:04:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:05:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 16:05:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:05:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:05:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 16:05:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 16:05:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 16:05:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 16:05:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 16:05:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 16:05:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:05:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:05:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2564e819 is alive
2025-04-21 16:05:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@12f56e04 is alive
2025-04-21 16:06:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:06:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:06:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 16:06:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:06:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:06:51 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2564e819: (connection has passed maxLifetime)
2025-04-21 16:06:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ba6ec6a2-452e-429c-85fc-24bf14fd484e)
2025-04-21 16:06:51 DEBUG PoolBase - HikariPool-1 - Established new connection (ba6ec6a2-452e-429c-85fc-24bf14fd484e)
2025-04-21 16:06:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d56927b
2025-04-21 16:07:04 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@12f56e04: (connection has passed maxLifetime)
2025-04-21 16:07:04 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (fd0b1d07-5960-4e8c-a116-95d7b69f3958)
2025-04-21 16:07:04 DEBUG PoolBase - HikariPool-1 - Established new connection (fd0b1d07-5960-4e8c-a116-95d7b69f3958)
2025-04-21 16:07:04 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6bcfd983
2025-04-21 16:07:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 16:07:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 16:07:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 16:07:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:07:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:07:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 16:07:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 16:07:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 16:07:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e972e2 is alive
2025-04-21 16:07:50 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@30e972e2: (connection has passed maxLifetime)
2025-04-21 16:07:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a8b8460e-ebad-4e5f-a87f-e356edd5dfcd)
2025-04-21 16:07:50 DEBUG PoolBase - HikariPool-1 - Established new connection (a8b8460e-ebad-4e5f-a87f-e356edd5dfcd)
2025-04-21 16:07:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@27f78687
2025-04-21 16:07:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:07:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:08:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 16:08:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:08:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:08:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d56927b is alive
2025-04-21 16:08:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 16:08:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:08:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:08:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6bcfd983 is alive
2025-04-21 16:08:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 16:09:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 16:09:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 16:09:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:09:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:09:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@78a35843 is alive
2025-04-21 16:09:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27f78687 is alive
2025-04-21 16:09:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 16:09:37 INFO  StaffMenuUI - User SHUBHAM LANKE is logging out
2025-04-21 16:09:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:09:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:09:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@688d91a4 is alive
2025-04-21 16:10:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d56927b is alive
2025-04-21 16:10:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:10:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:10:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 16:10:26 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@78a35843: (connection has passed maxLifetime)
2025-04-21 16:10:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c86bf6a5-2abc-4c57-b3c4-9f83e1e65d9a)
2025-04-21 16:10:26 DEBUG PoolBase - HikariPool-1 - Established new connection (c86bf6a5-2abc-4c57-b3c4-9f83e1e65d9a)
2025-04-21 16:10:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b940c42
2025-04-21 16:10:34 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@688d91a4: (connection has passed maxLifetime)
2025-04-21 16:10:34 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (90fed8e9-fba8-4ce9-99f4-2bdefbe748fc)
2025-04-21 16:10:34 DEBUG PoolBase - HikariPool-1 - Established new connection (90fed8e9-fba8-4ce9-99f4-2bdefbe748fc)
2025-04-21 16:10:34 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@243a4f00
2025-04-21 16:10:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6bcfd983 is alive
2025-04-21 16:10:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5c25be0b is alive
2025-04-21 16:10:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:10:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:10:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@61c3de86 is alive
2025-04-21 16:11:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@43e5c5bb is alive
2025-04-21 16:11:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@27f78687 is alive
2025-04-21 16:11:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:11:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:11:26 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@61c3de86: (connection has passed maxLifetime)
2025-04-21 16:11:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9e0a3091-0533-4374-992e-13c22ec8ae1a)
2025-04-21 16:11:26 DEBUG PoolBase - HikariPool-1 - Established new connection (9e0a3091-0533-4374-992e-13c22ec8ae1a)
2025-04-21 16:11:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@624709d4
2025-04-21 16:11:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6e053f17 is alive
2025-04-21 16:11:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d56927b is alive
2025-04-21 16:11:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:11:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:12:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@11f22475 is alive
2025-04-21 16:12:20 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@11f22475: (connection has passed maxLifetime)
2025-04-21 16:12:20 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f5be4afc-13b5-4804-9ac7-b207dbf5715a)
2025-04-21 16:12:20 DEBUG PoolBase - HikariPool-1 - Established new connection (f5be4afc-13b5-4804-9ac7-b207dbf5715a)
2025-04-21 16:12:20 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5595fcbb
2025-04-21 16:12:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:12:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:12:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b940c42 is alive
2025-04-21 16:12:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@243a4f00 is alive
2025-04-21 16:12:49 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 16:12:57 WARN  HomeMenuUI - Invalid email format entered:  
2025-04-21 16:13:44 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 16:15:20 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 16:23:09 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 16:23:09 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 16:23:09 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 16:23:09 DEBUG HikariConfig - autoCommit......................true
2025-04-21 16:23:09 DEBUG HikariConfig - catalog.........................none
2025-04-21 16:23:09 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 16:23:09 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 16:23:09 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 16:23:09 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-21 16:23:09 DEBUG HikariConfig - dataSource......................none
2025-04-21 16:23:09 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 16:23:09 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 16:23:09 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 16:23:09 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 16:23:09 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 16:23:09 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 16:23:09 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 16:23:09 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 16:23:09 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 16:23:09 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 16:23:09 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 16:23:09 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 16:23:09 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 16:23:09 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 16:23:09 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 16:23:09 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 16:23:09 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 16:23:09 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 16:23:09 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 16:23:09 DEBUG HikariConfig - password........................<masked>
2025-04-21 16:23:09 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 16:23:09 DEBUG HikariConfig - readOnly........................false
2025-04-21 16:23:09 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 16:23:09 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 16:23:09 DEBUG HikariConfig - schema..........................none
2025-04-21 16:23:09 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 16:23:09 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 16:23:09 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 16:23:09 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 16:23:09 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 16:23:09 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9a0058fc-7530-405d-9f0d-36a852da1614)
2025-04-21 16:23:09 DEBUG PoolBase - HikariPool-1 - Established new connection (9a0058fc-7530-405d-9f0d-36a852da1614)
2025-04-21 16:23:09 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e3181aa
2025-04-21 16:23:09 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 16:23:09 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 16:23:09 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 16:23:10 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 16:23:10 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 16:23:10 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 16:23:10 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8268e9e7-7b07-44ac-bd96-6704b653dcc8)
2025-04-21 16:23:10 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:23:10 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (8268e9e7-7b07-44ac-bd96-6704b653dcc8)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76788b2f
2025-04-21 16:23:10 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 16:23:10 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7bcfc686-81b5-42b8-8d7a-d278e4b49d00)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (7bcfc686-81b5-42b8-8d7a-d278e4b49d00)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c80e05f
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f610c078-0c8e-4146-9481-9f6f16ccd9f0)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@352c308
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@71e9a896
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43c67247
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@fac80
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@726386ed
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (f610c078-0c8e-4146-9481-9f6f16ccd9f0)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@398261ab
2025-04-21 16:23:10 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24f43aa3] into BootstrapContext; was [null]
2025-04-21 16:23:10 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@63fd4873] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1e11bc55]
2025-04-21 16:23:10 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 16:23:10 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c039b809-2206-4b7a-aee8-7ed890879c65)
2025-04-21 16:23:10 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (c039b809-2206-4b7a-aee8-7ed890879c65)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b91b447
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f0d41bde-8718-45a4-aa8e-3be32772e5c4)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (f0d41bde-8718-45a4-aa8e-3be32772e5c4)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8f1bd4e
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (09e9ffaa-c797-4233-92cc-de741d82d5c2)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (09e9ffaa-c797-4233-92cc-de741d82d5c2)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@73083617
2025-04-21 16:23:10 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 16:23:10 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 16:23:10 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c93388ff-1e4e-449e-ad15-fb60edaa9446)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (c93388ff-1e4e-449e-ad15-fb60edaa9446)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@59ad9ee4
2025-04-21 16:23:10 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (aa3a7176-b58f-499d-b7a1-5c395ea0dadb)
2025-04-21 16:23:10 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 16:23:10 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (aa3a7176-b58f-499d-b7a1-5c395ea0dadb)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5f183a1a
2025-04-21 16:23:10 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2063c53e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2a9bc08f)
2025-04-21 16:23:10 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50f40653) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a3d0f6)
2025-04-21 16:23:10 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 16:23:10 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70e29e14`
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:23:10 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (49a3bcc2-bd9e-48d9-af62-292f370daa72)
2025-04-21 16:23:10 DEBUG PoolBase - HikariPool-1 - Established new connection (49a3bcc2-bd9e-48d9-af62-292f370daa72)
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5a06e77a
2025-04-21 16:23:10 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 16:23:10 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5edf2821] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4dbad37]
2025-04-21 16:23:10 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:23:10 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 16:23:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 16:23:10 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 16:23:10 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property id
2025-04-21 16:23:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property number
2025-04-21 16:23:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 16:23:10 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 16:23:10 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property id
2025-04-21 16:23:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property name
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property passport
2025-04-21 16:23:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 16:23:10 DEBUG EntityBinder - Import with entity name User
2025-04-21 16:23:10 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property userID
2025-04-21 16:23:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property email
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property isActive
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property name
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property password
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property userRole
2025-04-21 16:23:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 16:23:10 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 16:23:10 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property guestId
2025-04-21 16:23:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property age
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property name
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property user
2025-04-21 16:23:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 16:23:10 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 16:23:10 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property bookingId
2025-04-21 16:23:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property checkIn
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property checkOut
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property room
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property status
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property user
2025-04-21 16:23:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 16:23:10 DEBUG EntityBinder - Import with entity name Room
2025-04-21 16:23:10 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property roomID
2025-04-21 16:23:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property price
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property roomType
2025-04-21 16:23:10 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 16:23:10 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 16:23:10 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 16:23:10 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property amount
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property booking
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property issueDate
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 16:23:10 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 16:23:10 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 16:23:10 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 16:23:10 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:23:10 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:23:10 DEBUG PropertyBinder - Building property user
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 16:23:10 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 16:23:10 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 16:23:10 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 16:23:10 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 16:23:10 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 16:23:10 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 16:23:10 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 16:23:10 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 16:23:11 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:23:11 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:23:11 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@550de6b8, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 16:23:11 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@40de8f93] under count; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@45ab3bdd] under every; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f10f633] under any; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403] under sinh; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4] under cosh; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@798dad3d] under tanh; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27abb6ca] under pi; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620] under log; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3f6bf8aa] under position; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@d48e998] under overlay; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1a256d80] under trim; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3a3ed300] under cast; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1984212d] under collate; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3af58f76] under extract; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@27a09971] under ifnull; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@152c4495] under pad; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1d06f16f] under str; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7c5d1d25] under format; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@26ca61bf] under timestampadd; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6870c3c2] under timestampdiff; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a5e167a] under current_date; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e06f7d] under current_time; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66a5755] under current_timestamp; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@771a7d53] under local_date; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6d6d480c] under local_time; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e95595b] under local_datetime; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a917723] under offset_datetime; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e4579c7] under instant; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59b32539] under sql; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@798dad3d
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27abb6ca
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@60a7e509] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6d6d480c
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@e95595b
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6274670b] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@53ce2392] under bit_length; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@32d5279] under octet_length; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c067c0d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3f6bf8aa
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d0b0cb9] under bitand; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f7b6639] under bitor; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35] under bitxor; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3965bdf9] under bitnot; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c0e00a8] under median; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd15072] under insert; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4dde8976] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@d48e998
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4887de2b] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@294f9d50] under listagg; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@50a13c2f] under array; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@610d28b8] under array_list; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@74606204] under array_agg; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@32ec9c90] under array_position; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@45545e7a] under array_positions; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@ebda593] under array_positions_list; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5792c08c] under array_length; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@5e13f156] under array_concat; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6e60f18] under array_prepend; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@5cf8676a] under array_append; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@dd4aec3] under array_contains; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4dac121d] under array_contains_nullable; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@4519f676] under array_overlaps; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@78ec89a6] under array_overlaps_nullable; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642a16aa] under array_get; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@4e224df5] under array_set; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@4337afd] under array_remove_index; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d02af26] under array_slice; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fa7df1] under array_trim; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4116f66a] under array_fill; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@59c04bee] under array_fill_list; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@22bdb1d0] under array_to_string; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32118208] under mode; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@414f87a9] under percentile_cont; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1ddc6db2] under percentile_disc; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@416d56f2] under rank; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6e31d989] under dense_rank; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1b01a0d] under percent_rank; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ed71727] under cume_dist; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@72a2312e] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@47c7a9e5] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7951c3a2] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@20580d4e] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@c689973] under trunc; prior registration was null
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 16:23:11 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41fa769c] under date_trunc; prior registration was null
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 16:23:11 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 16:23:11 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 16:23:11 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:23:11 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:23:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:23:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:23:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:23:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:23:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:23:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 16:23:11 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:23:11 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:23:11 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 16:23:11 DEBUG creation - Starting post-init callbacks
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 16:23:11 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : g1_0
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b31af02] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:23:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 16:23:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:23:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 16:23:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 16:23:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 16:23:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3af36922] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ce267cc] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:23:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 16:23:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:23:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:23:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 16:23:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:23:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:23:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 16:23:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:23:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38f617f4] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : p2_0
2025-04-21 16:23:11 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 16:23:11 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 16:23:11 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 16:23:11 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 16:23:11 DEBUG create - Created new SQL alias : i1_0
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 16:23:11 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7c91fe86] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 16:23:12 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54a056e4] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 16:23:12 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 16:23:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 16:23:12 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 16:23:12 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 16:23:12 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 16:23:12 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 16:23:12 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 16:23:12 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 16:23:12 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 16:23:12 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 16:23:12 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 16:23:12 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5edf2821] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@52c46334]
2025-04-21 16:23:12 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 16:23:12 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 16:23:12 DEBUG Table - No alter strings for table : bookings
2025-04-21 16:23:12 DEBUG Table - No alter strings for table : guests
2025-04-21 16:23:12 DEBUG Table - No alter strings for table : invoices
2025-04-21 16:23:12 DEBUG Table - No alter strings for table : Passport
2025-04-21 16:23:12 DEBUG Table - No alter strings for table : Persons
2025-04-21 16:23:12 DEBUG Table - No alter strings for table : rooms
2025-04-21 16:23:12 DEBUG Table - No alter strings for table : users
2025-04-21 16:23:12 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@9f9146d
2025-04-21 16:23:12 DEBUG SessionFactoryRegistry - Registering SessionFactory: 3ef2f59a-b693-4d25-9643-4d6fff5a0d8e (my-persistence-unit)
2025-04-21 16:23:12 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 16:23:12 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 16:23:12 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 16:23:12 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 16:23:12 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 16:23:12 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:23:12 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:23:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:23:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 16:23:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 16:23:12 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 16:23:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:23:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:23:12 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@543615127 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:23:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:23:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:23:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:23:12 ERROR UserDaoImpl - Error fetching user by email sdrgs@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.authenticateUser(UserServiceImpl.java:59) [classes/:?]
	at org.example.controller.UserController.authenticateUser(UserController.java:38) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:77) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 16:23:12 WARN  HomeMenuUI - Invalid login attempt for email: sdrgs@gmail.com
2025-04-21 16:23:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:23:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:24:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:24:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:24:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:24:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:24:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c80e05f is alive
2025-04-21 16:24:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73083617 is alive
2025-04-21 16:24:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a06e77a is alive
2025-04-21 16:24:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59ad9ee4 is alive
2025-04-21 16:24:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 16:24:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f183a1a is alive
2025-04-21 16:24:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@398261ab is alive
2025-04-21 16:25:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b91b447 is alive
2025-04-21 16:25:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8f1bd4e is alive
2025-04-21 16:25:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76788b2f is alive
2025-04-21 16:25:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:25:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:25:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:25:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:26:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:26:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:26:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c80e05f is alive
2025-04-21 16:26:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73083617 is alive
2025-04-21 16:26:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a06e77a is alive
2025-04-21 16:26:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59ad9ee4 is alive
2025-04-21 16:26:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 16:26:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f183a1a is alive
2025-04-21 16:26:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@398261ab is alive
2025-04-21 16:26:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:26:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:26:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b91b447 is alive
2025-04-21 16:26:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8f1bd4e is alive
2025-04-21 16:27:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76788b2f is alive
2025-04-21 16:27:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:27:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:27:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:27:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:28:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:28:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:28:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c80e05f is alive
2025-04-21 16:28:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73083617 is alive
2025-04-21 16:28:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a06e77a is alive
2025-04-21 16:28:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59ad9ee4 is alive
2025-04-21 16:28:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 16:28:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f183a1a is alive
2025-04-21 16:28:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@398261ab is alive
2025-04-21 16:28:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:28:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:28:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b91b447 is alive
2025-04-21 16:28:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8f1bd4e is alive
2025-04-21 16:28:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76788b2f is alive
2025-04-21 16:29:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:29:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:29:17 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 16:29:18 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 16:29:22 WARN  HomeMenuUI - Invalid email format entered: ijki'
2025-04-21 16:29:24 WARN  HomeMenuUI - Invalid email format entered: -
2025-04-21 16:29:25 WARN  HomeMenuUI - Invalid email format entered: -
2025-04-21 16:29:27 WARN  HomeMenuUI - Invalid email format entered: -ikjik
2025-04-21 16:29:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:29:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:29:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c80e05f is alive
2025-04-21 16:29:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73083617 is alive
2025-04-21 16:29:52 WARN  HomeMenuUI - Invalid email format entered: .@.com
2025-04-21 16:29:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a06e77a is alive
2025-04-21 16:29:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59ad9ee4 is alive
2025-04-21 16:30:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 16:30:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f183a1a is alive
2025-04-21 16:30:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@398261ab is alive
2025-04-21 16:30:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:30:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:30:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b91b447 is alive
2025-04-21 16:30:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8f1bd4e is alive
2025-04-21 16:30:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:30:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:30:54 WARN  HomeMenuUI - Invalid email format entered: `.@gmail.com
2025-04-21 16:30:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76788b2f is alive
2025-04-21 16:31:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:31:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:31:29 WARN  HomeMenuUI - Invalid email format entered: `@gmail.com
2025-04-21 16:31:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7c80e05f is alive
2025-04-21 16:31:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@73083617 is alive
2025-04-21 16:31:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a06e77a is alive
2025-04-21 16:31:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@59ad9ee4 is alive
2025-04-21 16:31:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:31:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:31:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5f183a1a is alive
2025-04-21 16:31:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 16:31:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@398261ab is alive
2025-04-21 16:32:10 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:32:10 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:32:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@b91b447 is alive
2025-04-21 16:32:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@8f1bd4e is alive
2025-04-21 16:32:28 WARN  HomeMenuUI - Invalid email format entered: -@gamil.com
2025-04-21 16:32:40 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:32:40 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:32:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@76788b2f is alive
2025-04-21 16:33:44 WARN  HomeMenuUI - Invalid email format entered: 
2025-04-21 16:39:40 WARN  HomeMenuUI - Invalid login attempt for email: shubhamlanke@gmail.com
2025-04-21 16:39:57 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 16:39:57 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 16:39:57 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 16:39:57 DEBUG HikariConfig - autoCommit......................true
2025-04-21 16:39:57 DEBUG HikariConfig - catalog.........................none
2025-04-21 16:39:57 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 16:39:57 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 16:39:57 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 16:39:57 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@6f36c2f0
2025-04-21 16:39:57 DEBUG HikariConfig - dataSource......................none
2025-04-21 16:39:57 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 16:39:57 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 16:39:57 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 16:39:57 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 16:39:57 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 16:39:57 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 16:39:57 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 16:39:57 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 16:39:57 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 16:39:57 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 16:39:57 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 16:39:57 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 16:39:57 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 16:39:57 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 16:39:57 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 16:39:57 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 16:39:57 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 16:39:57 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 16:39:57 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 16:39:57 DEBUG HikariConfig - password........................<masked>
2025-04-21 16:39:57 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 16:39:57 DEBUG HikariConfig - readOnly........................false
2025-04-21 16:39:57 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 16:39:57 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 16:39:57 DEBUG HikariConfig - schema..........................none
2025-04-21 16:39:57 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 16:39:57 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 16:39:57 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 16:39:57 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 16:39:57 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 16:39:57 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1fa0422b-669c-4260-b2dd-2d897768410e)
2025-04-21 16:39:57 DEBUG PoolBase - HikariPool-1 - Established new connection (1fa0422b-669c-4260-b2dd-2d897768410e)
2025-04-21 16:39:57 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e19bb76
2025-04-21 16:39:57 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 16:39:57 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 16:39:58 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 16:39:58 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 16:39:58 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 16:39:58 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 16:39:58 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (16a9877b-27ed-4584-bd72-252dc4355092)
2025-04-21 16:39:58 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Established new connection (16a9877b-27ed-4584-bd72-252dc4355092)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6044553a
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:39:58 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 16:39:58 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 16:39:58 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b9309620-aa9f-4525-b938-c83e94ee5062)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Established new connection (b9309620-aa9f-4525-b938-c83e94ee5062)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6abc3e4a
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@324c64cd
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@324c64cd
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b7ab3dab-512c-4520-8372-52d430081129)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7c18432b
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-21 16:39:58 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@73393584] into BootstrapContext; was [null]
2025-04-21 16:39:58 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@31500940] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1827a871]
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Established new connection (b7ab3dab-512c-4520-8372-52d430081129)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2fbebd79
2025-04-21 16:39:58 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 16:39:58 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 16:39:58 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e60b449f-f15c-4e00-a003-85feef6f63bc)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Established new connection (e60b449f-f15c-4e00-a003-85feef6f63bc)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6d91d031
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (be85596e-bbc0-46ec-90b4-ec2d76326f08)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Established new connection (be85596e-bbc0-46ec-90b4-ec2d76326f08)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1edb5366
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (88aad53a-a5f2-4f2b-a26c-67e724c57195)
2025-04-21 16:39:58 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 16:39:58 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 16:39:58 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Established new connection (88aad53a-a5f2-4f2b-a26c-67e724c57195)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@151e6099
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b26c8359-3449-4263-948c-162537960e2d)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Established new connection (b26c8359-3449-4263-948c-162537960e2d)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4f914236
2025-04-21 16:39:58 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 16:39:58 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 16:39:58 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9b915492-9108-490e-9735-4ae5a7e6b588)
2025-04-21 16:39:58 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3a2b2322) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5e1218b4)
2025-04-21 16:39:58 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@12958360) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c6e0f32)
2025-04-21 16:39:58 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 16:39:58 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Established new connection (9b915492-9108-490e-9735-4ae5a7e6b588)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2ce213ad
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@14bf57b2
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14bf57b2
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@324c64cd`
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:39:58 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9bdbc58f-d00f-4997-80d7-81ad824b6dd3)
2025-04-21 16:39:58 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 16:39:58 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70101687] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70e889e9]
2025-04-21 16:39:58 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 16:39:58 DEBUG PoolBase - HikariPool-1 - Established new connection (9bdbc58f-d00f-4997-80d7-81ad824b6dd3)
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68e62534
2025-04-21 16:39:58 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 16:39:58 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 16:39:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:39:58 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property id
2025-04-21 16:39:58 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property number
2025-04-21 16:39:58 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 16:39:58 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 16:39:58 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property id
2025-04-21 16:39:58 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property name
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property passport
2025-04-21 16:39:58 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 16:39:58 DEBUG EntityBinder - Import with entity name User
2025-04-21 16:39:58 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property userID
2025-04-21 16:39:58 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property email
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property isActive
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property name
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property password
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property userRole
2025-04-21 16:39:58 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 16:39:58 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 16:39:58 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property guestId
2025-04-21 16:39:58 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property age
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property name
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property user
2025-04-21 16:39:58 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 16:39:58 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 16:39:58 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property bookingId
2025-04-21 16:39:58 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property checkIn
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property checkOut
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property room
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property status
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property user
2025-04-21 16:39:58 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 16:39:58 DEBUG EntityBinder - Import with entity name Room
2025-04-21 16:39:58 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property roomID
2025-04-21 16:39:58 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property price
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property roomType
2025-04-21 16:39:58 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 16:39:58 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 16:39:58 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 16:39:58 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property amount
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property booking
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property issueDate
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 16:39:58 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 16:39:58 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 16:39:58 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 16:39:58 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:39:58 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:39:58 DEBUG PropertyBinder - Building property user
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 16:39:58 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 16:39:58 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 16:39:58 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 16:39:58 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 16:39:58 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 16:39:58 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 16:39:58 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 16:39:58 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 16:39:59 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:39:59 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:39:59 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2e86807a, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 16:39:59 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@29c17c3d] under count; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@30ec7d21] under every; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@70025b99] under any; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28a9494b] under sinh; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a09303] under cosh; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27] under tanh; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549] under pi; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@502a4156] under log; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@42f85fa4] under position; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6968bcec] under overlay; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@13c8ac77] under trim; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@68e02f33] under cast; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64942607] under collate; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@50eb4a2c] under extract; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7885776b] under ifnull; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3a3ed300] under pad; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2404b5a] under str; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4fa4f485] under format; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@80b122b] under timestampadd; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@36d33f4] under timestampdiff; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f96f020] under current_date; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32eae6f2] under current_time; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26ca61bf] under current_timestamp; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73a0f2b] under local_date; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fa5f81c] under local_time; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a1d526c] under local_datetime; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f2f0109] under offset_datetime; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483b0690] under instant; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1faf386c] under sql; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@502a4156
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4debbf0] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28a9494b
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a09303
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@771a7d53] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@fa5f81c
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a1d526c
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7e4579c7] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@796f632b] under bit_length; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5d94a2dc] under octet_length; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cedee22] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@42f85fa4
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b32539] under bitand; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under bitor; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@233db8e9] under bitxor; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40c2ce52] under bitnot; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18a19e] under median; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e13f304] under insert; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@53ce2392] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6968bcec
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@32d5279] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@1860f3be] under listagg; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@294f9d50] under array; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@27443560] under array_list; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@769bd849] under array_agg; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@35ef439e] under array_position; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@4eea94a4] under array_positions; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@9f674ac] under array_positions_list; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1da4b3f9] under array_length; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@2007435e] under array_concat; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@66813e6e] under array_prepend; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@dab1f89] under array_append; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@388d14e] under array_contains; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@1cd43562] under array_contains_nullable; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@456bcb74] under array_overlaps; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@a9c5b75] under array_overlaps_nullable; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e28fee1] under array_get; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@2fb25f4c] under array_set; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@78ec89a6] under array_remove_index; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3596b249] under array_slice; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7237f3c1] under array_trim; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@58a2d9f9] under array_fill; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4337afd] under array_fill_list; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@52227eb2] under array_to_string; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3135bf25] under mode; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@22ad1bae] under percentile_cont; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4116f66a] under percentile_disc; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79f90a3a] under rank; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22bdb1d0] under dense_rank; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@67b355c8] under percent_rank; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@388623ad] under cume_dist; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32118208] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@414f87a9] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ddc6db2] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@233db8e9
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@416d56f2] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@4b432e53] under trunc; prior registration was null
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 16:39:59 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b916808] under date_trunc; prior registration was null
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 16:39:59 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 16:39:59 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 16:39:59 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:39:59 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:39:59 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:39:59 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:39:59 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:39:59 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:39:59 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:39:59 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 16:39:59 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:39:59 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:39:59 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 16:39:59 DEBUG creation - Starting post-init callbacks
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 16:39:59 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 16:39:59 DEBUG create - Created new SQL alias : g1_0
2025-04-21 16:39:59 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@edb83f8] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:40:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 16:40:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:40:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 16:40:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 16:40:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 16:40:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33f4c769] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c68d0db] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:40:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 16:40:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:40:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:40:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 16:40:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:40:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:40:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 16:40:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:40:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@18c7f6b5] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : p2_0
2025-04-21 16:40:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 16:40:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 16:40:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 16:40:00 DEBUG create - Created new SQL alias : i1_0
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@474e34e4] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2eebce87] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 16:40:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 16:40:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 16:40:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 16:40:00 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 16:40:00 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 16:40:00 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 16:40:00 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 16:40:00 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 16:40:00 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70101687] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@43588265]
2025-04-21 16:40:00 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 16:40:00 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 16:40:00 DEBUG Table - No alter strings for table : bookings
2025-04-21 16:40:00 DEBUG Table - No alter strings for table : guests
2025-04-21 16:40:00 DEBUG Table - No alter strings for table : invoices
2025-04-21 16:40:00 DEBUG Table - No alter strings for table : Passport
2025-04-21 16:40:00 DEBUG Table - No alter strings for table : Persons
2025-04-21 16:40:00 DEBUG Table - No alter strings for table : rooms
2025-04-21 16:40:00 DEBUG Table - No alter strings for table : users
2025-04-21 16:40:00 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5e0f2c82
2025-04-21 16:40:00 DEBUG SessionFactoryRegistry - Registering SessionFactory: bdec298f-7caf-492e-8387-e2b464a174c0 (my-persistence-unit)
2025-04-21 16:40:00 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 16:40:00 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 16:40:00 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 16:40:00 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 16:40:00 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 16:40:00 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:40:00 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:40:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:40:00 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 16:40:00 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 16:40:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 16:40:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:40:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:40:00 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@124900571 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:40:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:40:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:40:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1048812195
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:40:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:40:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ef089ce
2025-04-21 16:40:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:40:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:40:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:40:00 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1658589699 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:40:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:40:00 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:40:00 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1428195532
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:40:00 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:40:00 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:40:00 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@57eed461
2025-04-21 16:40:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:40:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:40:00 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 16:40:10 WARN  UserMenuUI - Invalid menu choice 52555 by user 13
2025-04-21 16:40:17 WARN  UserMenuUI - Invalid menu choice -858 by user 13
2025-04-21 16:40:26 WARN  UserMenuUI - Invalid menu choice 0 by user 13
2025-04-21 16:40:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:40:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:40:33 WARN  UserMenuUI - Invalid menu choice 0 by user 13
2025-04-21 16:40:34 WARN  UserMenuUI - Invalid menu choice 0 by user 13
2025-04-21 16:40:38 INFO  UserMenuUI - User 13 is booking a room
2025-04-21 16:40:38 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 16:40:38 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:40:38 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:40:38 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:40:38 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 16:40:38 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 16:40:38 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:40:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:40:38 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@2034388773 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:40:38 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 945140350
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 517287748
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1998257621
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 985324389
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1899091560
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1185511429
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1719521616
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 183521033
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1972193961
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2028567885
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1888932945
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 2014725453
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1741783268
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 16:40:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:40:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 16:40:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69944a90
2025-04-21 16:40:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:40:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:40:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:40:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:41:22 WARN  UserMenuUI - Invalid menu choice -1 by user 13
2025-04-21 16:41:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:41:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:41:31 INFO  UserMenuUI - User 13 is booking a room
2025-04-21 16:41:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:41:31 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@296831715 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:41:31 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 140008669
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1328901016
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 448288866
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1347174748
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1822323955
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 135506771
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1345362299
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1657042048
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 2112011719
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1748949019
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1007775526
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 2108714064
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 357886628
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 16:41:31 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:41:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 16:41:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:41:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:41:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:41:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68e62534 is alive
2025-04-21 16:41:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fbebd79 is alive
2025-04-21 16:41:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6d91d031 is alive
2025-04-21 16:41:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1edb5366 is alive
2025-04-21 16:41:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@151e6099 is alive
2025-04-21 16:41:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f914236 is alive
2025-04-21 16:41:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc3e4a is alive
2025-04-21 16:41:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e19bb76 is alive
2025-04-21 16:41:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ce213ad is alive
2025-04-21 16:41:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6044553a is alive
2025-04-21 16:41:57 INFO  UserMenuUI - User 13 is booking a room
2025-04-21 16:41:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:41:57 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@187958805 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:41:57 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1886706205
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1045819065
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1151415961
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 307476514
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 310192878
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 63712830
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1309988128
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1099556456
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 978886381
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1476913734
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 810715571
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1055294327
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1077398960
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 16:41:57 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:41:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 16:41:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bdb6ea8
2025-04-21 16:41:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:41:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:41:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:41:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:42:16 INFO  UserMenuUI - User 13 is booking a room
2025-04-21 16:42:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:42:16 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@654662186 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:42:16 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 2003665047
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 192442996
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1321604822
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1437884065
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 224031437
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1173969600
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 997692431
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1279362198
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 315841481
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 502475785
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 446895188
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1518753442
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1375949608
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 16:42:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:42:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 16:42:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a34505a
2025-04-21 16:42:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:42:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:42:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:42:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:42:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:42:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:43:04 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 16:43:04 DEBUG TransactionImpl - begin
2025-04-21 16:43:04 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 16:43:04 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 16:43:04 DEBUG results - Initializer list is empty
2025-04-21 16:43:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7ebfe01a
2025-04-21 16:43:04 DEBUG results - Extracted JDBC value [0] - [68]
2025-04-21 16:43:04 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@6d695ec4
2025-04-21 16:43:04 DEBUG TransactionImpl - committing
2025-04-21 16:43:04 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 16:43:04 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 16:43:04 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 16:43:04 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 16:43:04 DEBUG EntityPrinter - Listing entities:
2025-04-21 16:43:04 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-21T12:00:38.930207600, checkOut=2030-10-12T12:00:38.930207600, user=org.example.entity.User#13, bookingId=68, room=org.example.entity.Room#4, status=CONFIRMED}
2025-04-21 16:43:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:04 INFO  BookingServiceImpl - Booking created successfully with ID: 68
2025-04-21 16:43:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:43:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@157316544 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:43:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:43:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 16:43:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 1131519640
2025-04-21 16:43:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:43:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:43:04 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:43:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:43:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 16:43:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49353d43
2025-04-21 16:43:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:04 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 16:43:04 DEBUG TransactionImpl - begin
2025-04-21 16:43:04 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:43:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:43:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 16:43:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:43:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:43:04 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2077660325 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:43:04 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:43:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 16:43:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 975412652
2025-04-21 16:43:04 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:43:04 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:43:04 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:43:04 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:43:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 16:43:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@759f45f1
2025-04-21 16:43:04 DEBUG TransactionImpl - committing
2025-04-21 16:43:04 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 16:43:04 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 16:43:04 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 16:43:04 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 16:43:04 DEBUG EntityPrinter - Listing entities:
2025-04-21 16:43:04 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=104, price=10000.0, roomID=4, roomType=DELUXE}
2025-04-21 16:43:04 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 16:43:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:04 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=4, roomNumber=104, roomType=DELUXE, price=10000.0, isAvailable=false}
2025-04-21 16:43:04 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=4, roomNumber=104, roomType=DELUXE, price=10000.0, isAvailable=false}
2025-04-21 16:43:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68e62534 is alive
2025-04-21 16:43:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fbebd79 is alive
2025-04-21 16:43:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6d91d031 is alive
2025-04-21 16:43:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1edb5366 is alive
2025-04-21 16:43:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:43:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:43:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@151e6099 is alive
2025-04-21 16:43:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f914236 is alive
2025-04-21 16:43:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc3e4a is alive
2025-04-21 16:43:49 INFO  UserMenuUI - Generating invoice for user 13 | Booking ID: 68 | Amount: 2.0E7 | Paid: false
2025-04-21 16:43:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:43:49 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@444983406 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@839894192 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@275925618)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@625170225 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@271588719)

2025-04-21 16:43:49 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 16:43:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 68
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [4] - [4]
2025-04-21 16:43:49 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 4
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 16:43:49 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 16:43:49 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#4] : 516866200
2025-04-21 16:43:49 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1824801287
2025-04-21 16:43:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#68] : 149734487
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [6] - [10000.0]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [7] - [104]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [8] - [DELUXE]
2025-04-21 16:43:49 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#4
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 16:43:49 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:39]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [2] - [2030-10-12T12:00:39]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 16:43:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#68
2025-04-21 16:43:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@694b1ddb
2025-04-21 16:43:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:43:49 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@400720732 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:43:49 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:43:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:43:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 745186412
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:43:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:43:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2f112ade
2025-04-21 16:43:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:49 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 16:43:49 DEBUG TransactionImpl - begin
2025-04-21 16:43:49 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 16:43:49 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 16:43:49 DEBUG results - Initializer list is empty
2025-04-21 16:43:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4b76251c
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [0] - [40]
2025-04-21 16:43:49 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@20c283b4
2025-04-21 16:43:49 DEBUG TransactionImpl - committing
2025-04-21 16:43:49 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 16:43:49 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 16:43:49 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 16:43:49 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 16:43:49 DEBUG EntityPrinter - Listing entities:
2025-04-21 16:43:49 DEBUG EntityPrinter - org.example.entity.Invoice{amount=2.0E7, booking=org.example.entity.Booking#68, invoiceId=40, issueDate=2025-04-21T16:43:49.062496800, user=org.example.entity.User#13, paymentStatus=PENDING}
2025-04-21 16:43:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:49 INFO  UserMenuUI - Invoice successfully generated: ID 40
2025-04-21 16:43:49 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:43:49 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1887542184 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1147824431)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@675203915 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@170974144)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1980780021 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-21 16:43:49 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-21 16:43:49 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 40
2025-04-21 16:43:49 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#40] : 863811613
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [2] - [68]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [1] - [2.0E7]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [3] - [2025-04-21T16:43:49.062497]
2025-04-21 16:43:49 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-21 16:43:49 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#40
2025-04-21 16:43:49 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bf28f61
2025-04-21 16:43:49 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:43:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e19bb76 is alive
2025-04-21 16:43:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2ce213ad is alive
2025-04-21 16:43:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6044553a is alive
2025-04-21 16:43:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:43:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:44:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:44:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:44:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@68e62534 is alive
2025-04-21 16:44:53 INFO  UserMenuUI - User 13 is booking a room
2025-04-21 16:44:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:44:53 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1308815741 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:44:53 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 605660635
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1699592203
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1365260222
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 943613748
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 861958315
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1004866348
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1810368041
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 547670951
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 284230192
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 64931689
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 673992821
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 785604388
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 16:44:53 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:44:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 16:44:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52bb3dcd
2025-04-21 16:44:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:44:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:44:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fbebd79 is alive
2025-04-21 16:44:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:44:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:45:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6d91d031 is alive
2025-04-21 16:45:06 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 16:45:06 DEBUG TransactionImpl - begin
2025-04-21 16:45:06 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 16:45:06 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 16:45:06 DEBUG SqlExceptionHelper - could not execute statement [insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id]
org.postgresql.util.PSQLException: ERROR: timestamp out of range: "549606-09-15 12:00:01.041437+05:30"
  Where: unnamed portal parameter $2 = '...'
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:180) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.execute(ResultSetReturnImpl.java:129) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.InsertReturningDelegate.executeAndExtractReturning(InsertReturningDelegate.java:96) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.AbstractReturningDelegate.performMutation(AbstractReturningDelegate.java:58) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:388) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:302) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:221) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:135) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.createBooking(BookingDaoImpl.java:24) [classes/:?]
	at org.example.service.BookingServiceImpl.createBooking(BookingServiceImpl.java:32) [classes/:?]
	at org.example.controller.BookingController.createBooking(BookingController.java:33) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.bookRoomByUser(UserMenuUI.java:491) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.displayUserMenu(UserMenuUI.java:66) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:104) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 16:45:06 WARN  SqlExceptionHelper - SQL Error: 0, SQLState: 22008
2025-04-21 16:45:06 ERROR SqlExceptionHelper - ERROR: timestamp out of range: "549606-09-15 12:00:01.041437+05:30"
  Where: unnamed portal parameter $2 = '...'
2025-04-21 16:45:06 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:213) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:541) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:780) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.createBooking(BookingDaoImpl.java:24) [classes/:?]
	at org.example.service.BookingServiceImpl.createBooking(BookingServiceImpl.java:32) [classes/:?]
	at org.example.controller.BookingController.createBooking(BookingController.java:33) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.bookRoomByUser(UserMenuUI.java:491) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.displayUserMenu(UserMenuUI.java:66) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:104) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 16:45:06 DEBUG TransactionImpl - rolling back
2025-04-21 16:45:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:45:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:45:06 ERROR BookingDaoImpl - Error while creating booking for user ID: 13
org.hibernate.exception.DataException: could not execute statement [ERROR: timestamp out of range: "549606-09-15 12:00:01.041437+05:30"
  Where: unnamed portal parameter $2 = '...'] [insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:103) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.execute(ResultSetReturnImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.InsertReturningDelegate.executeAndExtractReturning(InsertReturningDelegate.java:96) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.id.insert.AbstractReturningDelegate.performMutation(AbstractReturningDelegate.java:58) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:388) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:302) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:221) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:135) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.createBooking(BookingDaoImpl.java:24) [classes/:?]
	at org.example.service.BookingServiceImpl.createBooking(BookingServiceImpl.java:32) [classes/:?]
	at org.example.controller.BookingController.createBooking(BookingController.java:33) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.bookRoomByUser(UserMenuUI.java:491) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.displayUserMenu(UserMenuUI.java:66) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:104) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.postgresql.util.PSQLException: ERROR: timestamp out of range: "549606-09-15 12:00:01.041437+05:30"
  Where: unnamed portal parameter $2 = '...'
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:180) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.execute(ResultSetReturnImpl.java:129) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 31 more
2025-04-21 16:45:06 INFO  BookingServiceImpl - Booking created successfully with ID: null
2025-04-21 16:45:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:45:06 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@892135447 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:45:06 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:45:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 5
2025-04-21 16:45:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#5] : 411425835
2025-04-21 16:45:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:45:06 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:45:06 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 16:45:06 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:45:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#5
2025-04-21 16:45:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a3bf37c
2025-04-21 16:45:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:45:06 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 16:45:06 DEBUG TransactionImpl - begin
2025-04-21 16:45:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:45:06 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1219145433 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:45:06 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:45:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 5
2025-04-21 16:45:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#5] : 848187627
2025-04-21 16:45:06 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:45:06 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:45:06 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 16:45:06 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:45:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#5
2025-04-21 16:45:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2fcffc05
2025-04-21 16:45:06 DEBUG TransactionImpl - committing
2025-04-21 16:45:06 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 16:45:06 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 16:45:06 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 16:45:06 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 16:45:06 DEBUG EntityPrinter - Listing entities:
2025-04-21 16:45:06 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=201, price=2500.0, roomID=5, roomType=SINGLE}
2025-04-21 16:45:06 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 16:45:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:45:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:45:06 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=5, roomNumber=201, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-21 16:45:06 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=5, roomNumber=201, roomType=SINGLE, price=2500.0, isAvailable=false}
2025-04-21 16:45:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1edb5366 is alive
2025-04-21 16:45:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@151e6099 is alive
2025-04-21 16:45:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f914236 is alive
2025-04-21 16:45:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:45:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:45:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6abc3e4a is alive
2025-04-21 16:46:06 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 16:46:06 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 16:46:06 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 16:46:06 DEBUG HikariConfig - autoCommit......................true
2025-04-21 16:46:06 DEBUG HikariConfig - catalog.........................none
2025-04-21 16:46:06 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 16:46:06 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 16:46:06 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 16:46:06 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-21 16:46:06 DEBUG HikariConfig - dataSource......................none
2025-04-21 16:46:06 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 16:46:06 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 16:46:06 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 16:46:06 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 16:46:06 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 16:46:06 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 16:46:06 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 16:46:06 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 16:46:06 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 16:46:06 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 16:46:06 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 16:46:06 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 16:46:06 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 16:46:06 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 16:46:06 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 16:46:06 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 16:46:06 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 16:46:06 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 16:46:06 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 16:46:06 DEBUG HikariConfig - password........................<masked>
2025-04-21 16:46:06 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 16:46:06 DEBUG HikariConfig - readOnly........................false
2025-04-21 16:46:06 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 16:46:06 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 16:46:06 DEBUG HikariConfig - schema..........................none
2025-04-21 16:46:06 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 16:46:06 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 16:46:06 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 16:46:06 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 16:46:06 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (92930028-fe4c-4206-9eda-14176fe5bd5a)
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Established new connection (92930028-fe4c-4206-9eda-14176fe5bd5a)
2025-04-21 16:46:06 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c1156a7
2025-04-21 16:46:06 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 16:46:06 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 16:46:06 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 16:46:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 16:46:06 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 16:46:06 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 16:46:06 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 16:46:06 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (70c398f5-62c0-4c04-aff7-58236db3fabb)
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:46:06 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Established new connection (70c398f5-62c0-4c04-aff7-58236db3fabb)
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@564fc047
2025-04-21 16:46:06 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 16:46:06 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9c9b6c1d-cdaf-4aa8-81a2-ec01d3522d93)
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Established new connection (9c9b6c1d-cdaf-4aa8-81a2-ec01d3522d93)
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5cb7ab37
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5ccdbc49-2771-41aa-8185-65f0cef05c85)
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@41200e0c
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70d2e40b
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-21 16:46:06 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-21 16:46:06 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@344344fa] into BootstrapContext; was [null]
2025-04-21 16:46:06 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2db2cd5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70e659aa]
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Established new connection (5ccdbc49-2771-41aa-8185-65f0cef05c85)
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@19b53ec5
2025-04-21 16:46:06 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 16:46:06 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9c6c9eba-c1c6-4f2e-9580-d5c6d8d0568a)
2025-04-21 16:46:06 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Established new connection (9c6c9eba-c1c6-4f2e-9580-d5c6d8d0568a)
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@31d0984c
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (93bf65d5-9cb7-4359-b0c0-b047d7a10379)
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Established new connection (93bf65d5-9cb7-4359-b0c0-b047d7a10379)
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2866654c
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (52e45194-06b8-4c87-9772-4ca368ebb9cd)
2025-04-21 16:46:06 DEBUG PoolBase - HikariPool-1 - Established new connection (52e45194-06b8-4c87-9772-4ca368ebb9cd)
2025-04-21 16:46:06 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@49e99d64
2025-04-21 16:46:06 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 16:46:06 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 16:46:07 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 16:46:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-21 16:46:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0f8898d0-2d85-4501-9565-c95e97a82af5)
2025-04-21 16:46:07 DEBUG PoolBase - HikariPool-1 - Established new connection (0f8898d0-2d85-4501-9565-c95e97a82af5)
2025-04-21 16:46:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@799ac18a
2025-04-21 16:46:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 16:46:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (719a161d-a141-4368-ad2d-642b8edffb00)
2025-04-21 16:46:07 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 16:46:07 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 16:46:07 DEBUG PoolBase - HikariPool-1 - Established new connection (719a161d-a141-4368-ad2d-642b8edffb00)
2025-04-21 16:46:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4cbd240d
2025-04-21 16:46:07 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 16:46:07 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f0cb5a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@1b29d52b)
2025-04-21 16:46:07 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47547132) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@655523dd)
2025-04-21 16:46:07 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 16:46:07 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 16:46:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 16:46:07 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9c811559-1480-4f3f-9d68-c217ef7dabbf)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33b082c5
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@41200e0c`
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:46:07 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:46:07 DEBUG PoolBase - HikariPool-1 - Established new connection (9c811559-1480-4f3f-9d68-c217ef7dabbf)
2025-04-21 16:46:07 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57ea64d3
2025-04-21 16:46:07 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 16:46:07 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e3994ef] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@680d4a6a]
2025-04-21 16:46:07 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:46:07 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 16:46:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 16:46:07 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 16:46:07 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property id
2025-04-21 16:46:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property number
2025-04-21 16:46:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 16:46:07 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 16:46:07 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property id
2025-04-21 16:46:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property name
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property passport
2025-04-21 16:46:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 16:46:07 DEBUG EntityBinder - Import with entity name User
2025-04-21 16:46:07 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property userID
2025-04-21 16:46:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property email
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property isActive
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property name
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property password
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property userRole
2025-04-21 16:46:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 16:46:07 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 16:46:07 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property guestId
2025-04-21 16:46:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property age
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property name
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property user
2025-04-21 16:46:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 16:46:07 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 16:46:07 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property bookingId
2025-04-21 16:46:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property checkIn
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property checkOut
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property room
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property status
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property user
2025-04-21 16:46:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 16:46:07 DEBUG EntityBinder - Import with entity name Room
2025-04-21 16:46:07 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property roomID
2025-04-21 16:46:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property price
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property roomType
2025-04-21 16:46:07 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 16:46:07 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 16:46:07 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 16:46:07 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property amount
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property booking
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property issueDate
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 16:46:07 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 16:46:07 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 16:46:07 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 16:46:07 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:46:07 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:46:07 DEBUG PropertyBinder - Building property user
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 16:46:07 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 16:46:07 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 16:46:07 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 16:46:07 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 16:46:07 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 16:46:07 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 16:46:07 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 16:46:07 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 16:46:07 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:46:07 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:46:07 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:46:07 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6bee793f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 16:46:07 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6413d7e7] under count; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6d67f5eb] under every; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4f654cee] under any; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e] under sinh; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd] under cosh; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633] under tanh; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae] under pi; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd] under log; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6a1ef65c] under position; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7d986d83] under overlay; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@12a470dd] under trim; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4cad79bc] under cast; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c63762b] under collate; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@68e02f33] under extract; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@158ae284] under ifnull; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7235f92b] under pad; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@69d3cf7e] under str; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@152c4495] under format; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1d06f16f] under timestampadd; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@65cf4d6d] under timestampdiff; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10272bbb] under current_date; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36d33f4] under current_time; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16736040] under current_timestamp; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under local_date; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550e9be6] under local_time; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f96f020] under local_datetime; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32eae6f2] under offset_datetime; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26ca61bf] under instant; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1f2f0109] under sql; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483b0690] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f10f633
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45ab3bdd
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1642eeae
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@1faf386c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@550e9be6
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3f96f020
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@66a5755] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@771a7d53] under bit_length; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6d6d480c] under octet_length; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e95595b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6a1ef65c
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a917723] under bitand; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4579c7] under bitor; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under bitxor; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d94a2dc] under bitnot; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cedee22] under median; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under insert; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@60a7e509] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7d986d83
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2e13f304] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@5d0b0cb9] under listagg; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@40ac6b76] under array; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@7980cf2c] under array_list; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@294f9d50] under array_agg; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@6b6eae52] under array_position; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@d919544] under array_positions; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@23da79eb] under array_positions_list; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168b4cb0] under array_length; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@383c3eb3] under array_concat; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@54c622a7] under array_prepend; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@37348491] under array_append; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@7ab1127c] under array_contains; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@6e60f18] under array_contains_nullable; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@55f4887d] under array_overlaps; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@26837057] under array_overlaps_nullable; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@456bcb74] under array_get; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@3e28fee1] under array_set; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@2e7bf7b7] under array_remove_index; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fb25f4c] under array_slice; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@de81be1] under array_trim; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@69909c14] under array_fill; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5d3b58ca] under array_fill_list; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@58a2d9f9] under array_to_string; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5ad1904f] under mode; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a146b11] under percentile_cont; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f438904] under percentile_disc; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22ad1bae] under rank; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4116f66a] under dense_rank; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@59c04bee] under percent_rank; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45900b64] under cume_dist; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@67b355c8] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@388623ad] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@91f565d] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@414f87a9] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2d119405] under trunc; prior registration was null
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 16:46:07 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57e388c3] under date_trunc; prior registration was null
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 16:46:07 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 16:46:07 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 16:46:07 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:46:07 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:46:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:46:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:46:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:46:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:46:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:46:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 16:46:08 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:46:08 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:46:08 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 16:46:08 DEBUG creation - Starting post-init callbacks
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 16:46:08 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : g1_0
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@216f01] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:46:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 16:46:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:46:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 16:46:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 16:46:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 16:46:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@184afb78] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e5a8718] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:46:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 16:46:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:46:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:46:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 16:46:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:46:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:46:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 16:46:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:46:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e50ae56] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : p2_0
2025-04-21 16:46:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 16:46:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 16:46:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 16:46:08 DEBUG create - Created new SQL alias : i1_0
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42730828] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 16:46:08 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e2c6702] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 16:46:08 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 16:46:08 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 16:46:08 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 16:46:08 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 16:46:08 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 16:46:08 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 16:46:08 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 16:46:08 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 16:46:08 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e3994ef] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@729cd862]
2025-04-21 16:46:08 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 16:46:08 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 16:46:08 DEBUG Table - No alter strings for table : bookings
2025-04-21 16:46:08 DEBUG Table - No alter strings for table : guests
2025-04-21 16:46:08 DEBUG Table - No alter strings for table : invoices
2025-04-21 16:46:08 DEBUG Table - No alter strings for table : Passport
2025-04-21 16:46:08 DEBUG Table - No alter strings for table : Persons
2025-04-21 16:46:08 DEBUG Table - No alter strings for table : rooms
2025-04-21 16:46:08 DEBUG Table - No alter strings for table : users
2025-04-21 16:46:08 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5908e6d6
2025-04-21 16:46:08 DEBUG SessionFactoryRegistry - Registering SessionFactory: bc20727b-1d28-43d1-ae49-d41f61eaf339 (my-persistence-unit)
2025-04-21 16:46:08 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 16:46:08 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 16:46:08 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 16:46:08 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 16:46:09 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 16:46:09 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:46:09 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:46:09 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:46:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 16:46:09 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 16:46:09 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 16:46:09 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:46:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:46:09 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@2011996123 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:46:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:46:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:46:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:46:09 ERROR UserDaoImpl - Error fetching user by email suarav@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.authenticateUser(UserServiceImpl.java:59) [classes/:?]
	at org.example.controller.UserController.authenticateUser(UserController.java:41) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:77) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 16:46:09 WARN  HomeMenuUI - Invalid login attempt for email: suarav@gmail.com
2025-04-21 16:46:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:46:24 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@535525049 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:46:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:46:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:46:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 198347910
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:46:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:46:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a12f3e7
2025-04-21 16:46:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:46:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:46:24 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:46:24 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1886391178 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:46:24 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:46:24 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:46:24 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 778232359
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:46:24 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:46:24 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:46:24 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ebe903a
2025-04-21 16:46:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:46:24 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:46:24 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 16:46:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:46:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:46:38 INFO  UserMenuUI - User 13 is booking a room
2025-04-21 16:46:38 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 16:46:38 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:46:38 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:46:38 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:46:38 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 16:46:38 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 16:46:38 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:46:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:46:38 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1424067142 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:46:38 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 861443773
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1328901016
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 448288866
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1347174748
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1822323955
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 135506771
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1345362299
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1657042048
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 2112011719
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1748949019
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1007775526
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 16:46:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:46:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 16:46:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1325f967
2025-04-21 16:46:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:46:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:03 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 16:47:03 DEBUG TransactionImpl - begin
2025-04-21 16:47:03 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 16:47:03 DEBUG SQL - insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 16:47:03 DEBUG results - Initializer list is empty
2025-04-21 16:47:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5d94ac8a
2025-04-21 16:47:03 DEBUG results - Extracted JDBC value [0] - [69]
2025-04-21 16:47:03 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Booking]: [Ljava.lang.Object;@2bc8caa7
2025-04-21 16:47:03 DEBUG TransactionImpl - committing
2025-04-21 16:47:03 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 16:47:03 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 16:47:03 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 16:47:03 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 16:47:03 DEBUG EntityPrinter - Listing entities:
2025-04-21 16:47:03 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-21T12:00:56.162047400, checkOut=2025-04-22T12:00:56.162047400, user=org.example.entity.User#13, bookingId=69, room=org.example.entity.Room#6, status=CONFIRMED}
2025-04-21 16:47:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:03 INFO  BookingServiceImpl - Booking created successfully with ID: 69
2025-04-21 16:47:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:03 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1409058575 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:47:03 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:47:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 16:47:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 1401898481
2025-04-21 16:47:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:47:03 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:47:03 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:47:03 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:47:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 16:47:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64fc6470
2025-04-21 16:47:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:03 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 16:47:03 DEBUG TransactionImpl - begin
2025-04-21 16:47:03 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:47:03 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:47:03 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 16:47:03 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:47:03 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:03 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@842984696 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:47:03 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:47:03 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 16:47:03 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 1697258007
2025-04-21 16:47:03 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:47:03 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:47:03 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:47:03 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:47:03 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 16:47:03 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20b67366
2025-04-21 16:47:03 DEBUG TransactionImpl - committing
2025-04-21 16:47:03 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 16:47:03 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 16:47:03 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 16:47:03 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 16:47:03 DEBUG EntityPrinter - Listing entities:
2025-04-21 16:47:03 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=202, price=3500.0, roomID=6, roomType=DOUBLE}
2025-04-21 16:47:03 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 16:47:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:03 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:03 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=6, roomNumber=202, roomType=DOUBLE, price=3500.0, isAvailable=false}
2025-04-21 16:47:03 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=6, roomNumber=202, roomType=DOUBLE, price=3500.0, isAvailable=false}
2025-04-21 16:47:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:47:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:47:09 INFO  UserMenuUI - Generating invoice for user 13 | Booking ID: 69 | Amount: 3500.0 | Paid: true
2025-04-21 16:47:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:09 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@467573282 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@751402567 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1956658133)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@142590204 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1730106459)

2025-04-21 16:47:09 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 16:47:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 69
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [4] - [6]
2025-04-21 16:47:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 6
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 16:47:09 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 16:47:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#6] : 118566821
2025-04-21 16:47:09 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 875413568
2025-04-21 16:47:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#69] : 61401817
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [7] - [202]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-21 16:47:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#6
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 16:47:09 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 16:47:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#69
2025-04-21 16:47:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3831f4c2
2025-04-21 16:47:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:09 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@624630973 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:47:09 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:47:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:47:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1441062248
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:47:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:47:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28c7fd9d
2025-04-21 16:47:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:09 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 16:47:09 DEBUG TransactionImpl - begin
2025-04-21 16:47:09 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 16:47:09 DEBUG SQL - insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 16:47:09 DEBUG results - Initializer list is empty
2025-04-21 16:47:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@d65e744
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-21 16:47:09 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Invoice]: [Ljava.lang.Object;@44de3b46
2025-04-21 16:47:09 DEBUG TransactionImpl - committing
2025-04-21 16:47:09 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 16:47:09 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 16:47:09 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 16:47:09 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 16:47:09 DEBUG EntityPrinter - Listing entities:
2025-04-21 16:47:09 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3500.0, booking=org.example.entity.Booking#69, invoiceId=41, issueDate=2025-04-21T16:47:09.936152900, user=org.example.entity.User#13, paymentStatus=PAID}
2025-04-21 16:47:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:09 INFO  UserMenuUI - Invoice successfully generated: ID 41
2025-04-21 16:47:09 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:09 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@275925618 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@625170225)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@271588719 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1557557661)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1593151919 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-21 16:47:09 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-21 16:47:09 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 41
2025-04-21 16:47:09 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#41] : 516866200
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [2] - [69]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [3] - [2025-04-21T16:47:09.936153]
2025-04-21 16:47:09 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-21 16:47:09 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#41
2025-04-21 16:47:09 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2c6aa46c
2025-04-21 16:47:09 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:20 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 16:47:20 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 16:47:20 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:20 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1572407320 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:47:20 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1937294500
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:47:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6694fb1b
2025-04-21 16:47:20 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:20 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 16:47:20 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 16:47:20 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:47:20 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:47:20 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:47:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8d7718e] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:47:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7c871ce4] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:47:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5dc9d25a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:47:20 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5dc9d25a] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@7c871ce4
2025-04-21 16:47:20 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 16:47:20 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 16:47:20 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 16:47:20 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 16:47:20 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 16:47:20 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:47:20 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@890126260 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@1730106459)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@333295611 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1956658133)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1513204713 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 16:47:20 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [0] - [67]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 67
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#67] : 390560699
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#3) : 3
2025-04-21 16:47:20 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:20 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1090446425 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:47:20 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 332149215
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 16:47:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24a7d3d3
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#3] : 3 has being loaded by session.internalLoad.
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 16:47:20 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:20 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1140572863 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:47:20 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1141137903
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:47:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5977bdea
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#67
2025-04-21 16:47:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49c13ecd
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [0] - [69]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 69
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#69] : 793068998
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#6) : 6
2025-04-21 16:47:20 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:20 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1210663640 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:47:20 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 1774995948
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 16:47:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b71e98f
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#6] : 6 has being loaded by session.internalLoad.
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#69
2025-04-21 16:47:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49c13ecd
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [0] - [68]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 68
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#68] : 1859631557
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#4) : 4
2025-04-21 16:47:20 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:47:20 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@274580038 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:47:20 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 1391983205
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 16:47:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@62c6db99
2025-04-21 16:47:20 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#4] : 4 has being loaded by session.internalLoad.
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:39]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [2] - [2030-10-12T12:00:39]
2025-04-21 16:47:20 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:47:20 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#68
2025-04-21 16:47:20 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49c13ecd
2025-04-21 16:47:20 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:20 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:47:20 INFO  UserMenuUI - Displayed booking: ID 67 | Check-in: 2025-04-21T15:18 | Check-out: 2025-04-23T10:00 | Status: CONFIRMED
2025-04-21 16:47:20 INFO  UserMenuUI - Displayed booking: ID 69 | Check-in: 2025-04-21T12:00:56 | Check-out: 2025-04-22T12:00:56 | Status: CONFIRMED
2025-04-21 16:47:20 INFO  UserMenuUI - Displayed booking: ID 68 | Check-in: 2025-04-21T12:00:39 | Check-out: 2030-10-12T12:00:39 | Status: CONFIRMED
2025-04-21 16:47:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:47:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:47:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2866654c is alive
2025-04-21 16:47:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@19b53ec5 is alive
2025-04-21 16:47:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@49e99d64 is alive
2025-04-21 16:47:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@799ac18a is alive
2025-04-21 16:47:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@564fc047 is alive
2025-04-21 16:47:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5cb7ab37 is alive
2025-04-21 16:47:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2c1156a7 is alive
2025-04-21 16:47:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cbd240d is alive
2025-04-21 16:48:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31d0984c is alive
2025-04-21 16:48:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@57ea64d3 is alive
2025-04-21 16:48:06 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:48:06 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:48:36 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:48:36 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:49:02 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 16:49:02 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 16:49:02 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 16:49:02 DEBUG HikariConfig - autoCommit......................true
2025-04-21 16:49:02 DEBUG HikariConfig - catalog.........................none
2025-04-21 16:49:02 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 16:49:02 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 16:49:02 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 16:49:02 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-21 16:49:02 DEBUG HikariConfig - dataSource......................none
2025-04-21 16:49:02 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 16:49:02 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 16:49:02 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 16:49:02 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 16:49:02 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 16:49:02 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 16:49:02 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 16:49:02 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 16:49:02 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 16:49:02 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 16:49:02 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 16:49:02 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 16:49:02 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 16:49:02 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 16:49:02 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 16:49:02 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 16:49:02 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 16:49:02 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 16:49:02 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 16:49:02 DEBUG HikariConfig - password........................<masked>
2025-04-21 16:49:02 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 16:49:02 DEBUG HikariConfig - readOnly........................false
2025-04-21 16:49:02 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 16:49:02 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 16:49:02 DEBUG HikariConfig - schema..........................none
2025-04-21 16:49:02 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 16:49:02 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 16:49:02 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 16:49:02 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 16:49:02 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 16:49:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (30b720bd-0180-4242-a209-646ae0380adc)
2025-04-21 16:49:02 DEBUG PoolBase - HikariPool-1 - Established new connection (30b720bd-0180-4242-a209-646ae0380adc)
2025-04-21 16:49:02 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e3181aa
2025-04-21 16:49:02 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 16:49:02 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 16:49:02 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 16:49:02 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 16:49:02 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 16:49:02 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 16:49:02 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 16:49:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 16:49:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (cf85fc1a-8a8b-488a-92f3-3cdfd9e15dfc)
2025-04-21 16:49:02 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 16:49:02 DEBUG PoolBase - HikariPool-1 - Established new connection (cf85fc1a-8a8b-488a-92f3-3cdfd9e15dfc)
2025-04-21 16:49:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@674ea068
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:49:02 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 16:49:02 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 16:49:02 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 16:49:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 16:49:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (592fdac0-64bc-413b-a2a9-a13d52ec79f4)
2025-04-21 16:49:02 DEBUG PoolBase - HikariPool-1 - Established new connection (592fdac0-64bc-413b-a2a9-a13d52ec79f4)
2025-04-21 16:49:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6db6cb18
2025-04-21 16:49:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 16:49:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (756b5022-5a2e-467b-92b0-77460c772240)
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@13006998
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@37fbe4a8
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@352c308
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7d373bcf
2025-04-21 16:49:02 DEBUG PoolBase - HikariPool-1 - Established new connection (756b5022-5a2e-467b-92b0-77460c772240)
2025-04-21 16:49:02 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28b448ca
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70e29e14
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@71e9a896
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43c67247
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@fac80
2025-04-21 16:49:02 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@726386ed
2025-04-21 16:49:02 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24f43aa3] into BootstrapContext; was [null]
2025-04-21 16:49:02 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@63fd4873] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1e11bc55]
2025-04-21 16:49:02 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 16:49:02 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (ebeb512e-3508-4105-8b4a-fb3ab8c8cc7d)
2025-04-21 16:49:02 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 16:49:02 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Established new connection (ebeb512e-3508-4105-8b4a-fb3ab8c8cc7d)
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a6be054
2025-04-21 16:49:03 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9c5acc9a-3b81-4d7d-b8f7-6f453e76052f)
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Established new connection (9c5acc9a-3b81-4d7d-b8f7-6f453e76052f)
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@19d6a322
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5f94f8d9-580b-491d-8bde-dc615ba439b9)
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Established new connection (5f94f8d9-580b-491d-8bde-dc615ba439b9)
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@42e3550b
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (45522fd5-d28f-47b4-9d6b-10ceee6ac3e2)
2025-04-21 16:49:03 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 16:49:03 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 16:49:03 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Established new connection (45522fd5-d28f-47b4-9d6b-10ceee6ac3e2)
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@489bb785
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e88182f2-9376-43c0-9eee-b91479e35595)
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Established new connection (e88182f2-9376-43c0-9eee-b91479e35595)
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d178782
2025-04-21 16:49:03 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 16:49:03 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 16:49:03 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6d35d546-a707-49b1-b82b-43a25cf2d561)
2025-04-21 16:49:03 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2063c53e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@2a9bc08f)
2025-04-21 16:49:03 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50f40653) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a3d0f6)
2025-04-21 16:49:03 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 16:49:03 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 16:49:03 DEBUG PoolBase - HikariPool-1 - Established new connection (6d35d546-a707-49b1-b82b-43a25cf2d561)
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1f4feb1
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@289fdb08
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70e29e14`
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:49:03 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:49:03 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:49:03 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 16:49:03 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5edf2821] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4dbad37]
2025-04-21 16:49:03 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 16:49:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 16:49:03 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 16:49:03 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property id
2025-04-21 16:49:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property number
2025-04-21 16:49:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 16:49:03 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 16:49:03 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property id
2025-04-21 16:49:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property name
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property passport
2025-04-21 16:49:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 16:49:03 DEBUG EntityBinder - Import with entity name User
2025-04-21 16:49:03 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property userID
2025-04-21 16:49:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property email
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property isActive
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property name
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property password
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property userRole
2025-04-21 16:49:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 16:49:03 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 16:49:03 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property guestId
2025-04-21 16:49:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property age
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property name
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property user
2025-04-21 16:49:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 16:49:03 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 16:49:03 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property bookingId
2025-04-21 16:49:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property checkIn
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property checkOut
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property room
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property status
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property user
2025-04-21 16:49:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 16:49:03 DEBUG EntityBinder - Import with entity name Room
2025-04-21 16:49:03 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property roomID
2025-04-21 16:49:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property price
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property roomType
2025-04-21 16:49:03 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 16:49:03 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 16:49:03 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 16:49:03 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property amount
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property booking
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property issueDate
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 16:49:03 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 16:49:03 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 16:49:03 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 16:49:03 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:49:03 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:49:03 DEBUG PropertyBinder - Building property user
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 16:49:03 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 16:49:03 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 16:49:03 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 16:49:03 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 16:49:03 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 16:49:03 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 16:49:03 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 16:49:03 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 16:49:03 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:49:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:49:03 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:49:03 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@550de6b8, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 16:49:03 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@40de8f93] under count; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@45ab3bdd] under every; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f10f633] under any; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403] under sinh; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4] under cosh; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@798dad3d] under tanh; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27abb6ca] under pi; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620] under log; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3f6bf8aa] under position; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@d48e998] under overlay; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1a256d80] under trim; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3a3ed300] under cast; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1984212d] under collate; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3af58f76] under extract; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@27a09971] under ifnull; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@152c4495] under pad; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1d06f16f] under str; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7c5d1d25] under format; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@26ca61bf] under timestampadd; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6870c3c2] under timestampdiff; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a5e167a] under current_date; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e06f7d] under current_time; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66a5755] under current_timestamp; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@771a7d53] under local_date; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6d6d480c] under local_time; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e95595b] under local_datetime; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a917723] under offset_datetime; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e4579c7] under instant; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59b32539] under sql; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696db620
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@798dad3d
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f85fa4
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27abb6ca
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@60a7e509] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6d6d480c
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@e95595b
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6274670b] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@53ce2392] under bit_length; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@32d5279] under octet_length; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c067c0d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3f6bf8aa
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d0b0cb9] under bitand; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f7b6639] under bitor; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35] under bitxor; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3965bdf9] under bitnot; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c0e00a8] under median; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd15072] under insert; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4dde8976] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@d48e998
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4887de2b] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@294f9d50] under listagg; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@50a13c2f] under array; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@610d28b8] under array_list; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@74606204] under array_agg; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@32ec9c90] under array_position; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@45545e7a] under array_positions; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@ebda593] under array_positions_list; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5792c08c] under array_length; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@5e13f156] under array_concat; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6e60f18] under array_prepend; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@5cf8676a] under array_append; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@dd4aec3] under array_contains; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@4dac121d] under array_contains_nullable; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@4519f676] under array_overlaps; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@78ec89a6] under array_overlaps_nullable; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642a16aa] under array_get; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@4e224df5] under array_set; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@4337afd] under array_remove_index; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d02af26] under array_slice; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fa7df1] under array_trim; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4116f66a] under array_fill; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@59c04bee] under array_fill_list; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@22bdb1d0] under array_to_string; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32118208] under mode; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@414f87a9] under percentile_cont; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1ddc6db2] under percentile_disc; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@416d56f2] under rank; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6e31d989] under dense_rank; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1b01a0d] under percent_rank; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2ed71727] under cume_dist; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@72a2312e] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@47c7a9e5] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7951c3a2] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@20580d4e] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@c689973] under trunc; prior registration was null
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 16:49:04 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41fa769c] under date_trunc; prior registration was null
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 16:49:04 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 16:49:04 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 16:49:04 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:49:04 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:49:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:49:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:49:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:49:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:49:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:49:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 16:49:04 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:49:04 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:49:04 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 16:49:04 DEBUG creation - Starting post-init callbacks
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 16:49:04 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : g1_0
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b31af02] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:49:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 16:49:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:49:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 16:49:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 16:49:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 16:49:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3af36922] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ce267cc] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:49:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 16:49:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:49:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:49:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 16:49:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:49:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:49:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 16:49:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:49:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38f617f4] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : p2_0
2025-04-21 16:49:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 16:49:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 16:49:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 16:49:04 DEBUG create - Created new SQL alias : i1_0
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7c91fe86] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 16:49:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54a056e4] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 16:49:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 16:49:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 16:49:04 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 16:49:04 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 16:49:04 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 16:49:04 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 16:49:04 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 16:49:04 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 16:49:04 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5edf2821] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@52c46334]
2025-04-21 16:49:04 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 16:49:04 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 16:49:04 DEBUG Table - No alter strings for table : bookings
2025-04-21 16:49:04 DEBUG Table - No alter strings for table : guests
2025-04-21 16:49:04 DEBUG Table - No alter strings for table : invoices
2025-04-21 16:49:04 DEBUG Table - No alter strings for table : Passport
2025-04-21 16:49:04 DEBUG Table - No alter strings for table : Persons
2025-04-21 16:49:04 DEBUG Table - No alter strings for table : rooms
2025-04-21 16:49:04 DEBUG Table - No alter strings for table : users
2025-04-21 16:49:04 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@9f9146d
2025-04-21 16:49:04 DEBUG SessionFactoryRegistry - Registering SessionFactory: c57cfaa3-613e-47c1-bc94-49fa94dc768c (my-persistence-unit)
2025-04-21 16:49:04 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 16:49:04 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 16:49:05 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 16:49:05 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 16:49:05 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 16:49:05 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:49:05 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:49:05 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:49:05 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 16:49:05 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 16:49:05 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 16:49:05 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:49:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:49:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@543615127 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:49:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:49:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:49:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1331052438
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:49:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:49:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b7cf475
2025-04-21 16:49:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:05 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:49:05 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1354952534 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:49:05 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:49:05 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:49:05 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1376708275
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:49:05 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:49:05 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:49:05 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@15f11bfb
2025-04-21 16:49:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:05 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:05 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 16:49:06 INFO  UserMenuUI - User 13 is viewing their bookings
2025-04-21 16:49:06 INFO  UserMenuUI - User 13 requested to view their bookings.
2025-04-21 16:49:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:06 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@840661918 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:49:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1438076523
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:49:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c1908c8
2025-04-21 16:49:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:06 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 16:49:06 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 16:49:06 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:49:06 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:49:06 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:49:06 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b6ee447] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:49:06 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f356b98] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:49:06 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@504c415c] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:49:06 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@504c415c] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@4f356b98
2025-04-21 16:49:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 16:49:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 16:49:06 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 16:49:06 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 16:49:06 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 16:49:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:49:06 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@315841481 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@502475785)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@446895188 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1518753442)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1375949608 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 16:49:06 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [0] - [67]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 67
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#67] : 1011646033
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#3) : 3
2025-04-21 16:49:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:06 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1811655452 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:49:06 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 2023843291
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 16:49:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40cb95c1
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#3] : 3 has being loaded by session.internalLoad.
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 16:49:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:06 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1579897131 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:49:06 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1617481121
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:49:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@644e6a8e
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#67
2025-04-21 16:49:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6032622
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [0] - [69]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 69
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#69] : 1556116954
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#6) : 6
2025-04-21 16:49:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:06 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@619969415 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:49:06 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 2078824926
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 16:49:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@40fcaae7
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#6] : 6 has being loaded by session.internalLoad.
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#69
2025-04-21 16:49:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6032622
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [0] - [68]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 68
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#68] : 2141739605
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#4) : 4
2025-04-21 16:49:06 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:06 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@212977036 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:49:06 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 770178574
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 16:49:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ff8d39b
2025-04-21 16:49:06 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#4] : 4 has being loaded by session.internalLoad.
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:39]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [2] - [2030-10-12T12:00:39]
2025-04-21 16:49:06 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:49:06 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#68
2025-04-21 16:49:06 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6032622
2025-04-21 16:49:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:06 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:06 INFO  UserMenuUI - Displayed booking: ID 67 | Check-in: 2025-04-21T15:18 | Check-out: 2025-04-23T10:00 | Status: CONFIRMED
2025-04-21 16:49:06 INFO  UserMenuUI - Displayed booking: ID 69 | Check-in: 2025-04-21T12:00:56 | Check-out: 2025-04-22T12:00:56 | Status: CONFIRMED
2025-04-21 16:49:06 INFO  UserMenuUI - Displayed booking: ID 68 | Check-in: 2025-04-21T12:00:39 | Check-out: 2030-10-12T12:00:39 | Status: CONFIRMED
2025-04-21 16:49:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:49:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:49:56 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-21 16:49:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:56 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1876525009 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:49:56 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 312243725
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:49:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@361fa478
2025-04-21 16:49:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:49:56 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@403649458 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@502475785)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@958301663 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1518753442)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1220780271 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 16:49:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [0] - [67]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 67
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#67] : 792363366
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#3) : 3
2025-04-21 16:49:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2058066102 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:49:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 2044816857
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 16:49:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fa9247b
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#3] : 3 has being loaded by session.internalLoad.
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 16:49:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:56 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@567163682 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:49:56 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 414386513
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:49:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48f4264e
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#67
2025-04-21 16:49:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2697c156
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [0] - [69]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 69
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#69] : 1396538465
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#6) : 6
2025-04-21 16:49:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1405357782 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:49:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 1766444717
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 16:49:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@fe13916
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#6] : 6 has being loaded by session.internalLoad.
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#69
2025-04-21 16:49:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2697c156
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [0] - [68]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 68
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#68] : 1587586985
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#4) : 4
2025-04-21 16:49:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:49:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@41470360 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:49:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 2013958608
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 16:49:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3cfab340
2025-04-21 16:49:56 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#4] : 4 has being loaded by session.internalLoad.
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:39]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [2] - [2030-10-12T12:00:39]
2025-04-21 16:49:56 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:49:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#68
2025-04-21 16:49:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2697c156
2025-04-21 16:49:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:49:56 INFO  UserMenuUI - 1. Booking ID: 67, Status: CONFIRMED, Room Number: 3, Check-in: 2025-04-21T15:18, Check-out: 2025-04-23T10:00
2025-04-21 16:49:56 INFO  UserMenuUI - 2. Booking ID: 69, Status: CONFIRMED, Room Number: 6, Check-in: 2025-04-21T12:00:56, Check-out: 2025-04-22T12:00:56
2025-04-21 16:49:56 INFO  UserMenuUI - 3. Booking ID: 68, Status: CONFIRMED, Room Number: 4, Check-in: 2025-04-21T12:00:39, Check-out: 2030-10-12T12:00:39
2025-04-21 16:49:56 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-21 16:50:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:50:02 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:50:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:50:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:50:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@42e3550b is alive
2025-04-21 16:50:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@674ea068 is alive
2025-04-21 16:50:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@19d6a322 is alive
2025-04-21 16:50:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2d178782 is alive
2025-04-21 16:50:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1f4feb1 is alive
2025-04-21 16:50:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7e3181aa is alive
2025-04-21 16:50:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@489bb785 is alive
2025-04-21 16:50:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6db6cb18 is alive
2025-04-21 16:50:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@28b448ca is alive
2025-04-21 16:51:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3a6be054 is alive
2025-04-21 16:51:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:51:02 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:51:20 WARN  UserMenuUI - Booking ID 0 not found in eligible bookings.
2025-04-21 16:51:22 INFO  UserMenuUI - User 13 is booking a room
2025-04-21 16:51:22 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 16:51:22 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:51:22 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:51:22 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:51:22 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 16:51:22 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 16:51:22 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:51:22 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:51:22 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1370856792 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:51:22 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 52290172
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 357238600
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 3522572
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1826086004
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1835622084
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 542467430
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 240055488
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1554562305
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 2064664366
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1894085503
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 16:51:22 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:51:22 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 16:51:22 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebfe01a
2025-04-21 16:51:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:51:22 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:51:32 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:51:32 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:52:02 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:52:02 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:55:58 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 16:55:58 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 16:55:58 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 16:55:58 DEBUG HikariConfig - autoCommit......................true
2025-04-21 16:55:58 DEBUG HikariConfig - catalog.........................none
2025-04-21 16:55:58 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 16:55:58 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 16:55:58 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 16:55:58 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@6f36c2f0
2025-04-21 16:55:58 DEBUG HikariConfig - dataSource......................none
2025-04-21 16:55:58 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 16:55:58 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 16:55:58 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 16:55:58 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 16:55:58 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 16:55:58 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 16:55:58 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 16:55:58 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 16:55:58 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 16:55:58 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 16:55:58 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 16:55:58 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 16:55:58 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 16:55:58 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 16:55:58 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 16:55:58 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 16:55:58 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 16:55:58 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 16:55:58 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 16:55:58 DEBUG HikariConfig - password........................<masked>
2025-04-21 16:55:58 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 16:55:58 DEBUG HikariConfig - readOnly........................false
2025-04-21 16:55:58 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 16:55:58 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 16:55:58 DEBUG HikariConfig - schema..........................none
2025-04-21 16:55:58 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 16:55:58 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 16:55:58 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 16:55:58 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 16:55:58 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 16:55:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b1dd818a-9564-4ffa-acf9-7bae382b308b)
2025-04-21 16:55:58 DEBUG PoolBase - HikariPool-1 - Established new connection (b1dd818a-9564-4ffa-acf9-7bae382b308b)
2025-04-21 16:55:58 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22295ec4
2025-04-21 16:55:58 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 16:55:58 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 16:55:58 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 16:55:58 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 16:55:58 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 16:55:58 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 16:55:58 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 16:55:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 16:55:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7c30b485-6d3f-40b5-abd8-ddc114eb48cb)
2025-04-21 16:55:58 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 16:55:58 DEBUG PoolBase - HikariPool-1 - Established new connection (7c30b485-6d3f-40b5-abd8-ddc114eb48cb)
2025-04-21 16:55:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1adfffbf
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:55:58 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 16:55:58 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 16:55:58 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 16:55:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 16:55:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3b2a7de6-1600-4ece-a750-07f0d8fd4c6b)
2025-04-21 16:55:58 DEBUG PoolBase - HikariPool-1 - Established new connection (3b2a7de6-1600-4ece-a750-07f0d8fd4c6b)
2025-04-21 16:55:58 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@102794cf
2025-04-21 16:55:58 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 16:55:58 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5e6b2ad5-3234-45b4-a1cf-1a344b8e421d)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Established new connection (5e6b2ad5-3234-45b4-a1cf-1a344b8e421d)
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@552508af
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@aec50a1
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@aec50a1
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5a4bef8
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-21 16:55:59 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7249dadf] into BootstrapContext; was [null]
2025-04-21 16:55:59 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4362d7df] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@66238be2]
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (dfe03ee9-e1ba-4006-b9dd-e5d7193adf14)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Established new connection (dfe03ee9-e1ba-4006-b9dd-e5d7193adf14)
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@30e237b3
2025-04-21 16:55:59 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 16:55:59 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 16:55:59 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7ac0bdab-c88c-4312-a108-ebaa1647819f)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Established new connection (7ac0bdab-c88c-4312-a108-ebaa1647819f)
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@64ba9f99
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b5ddbee0-67c7-40f6-a1df-43d45eaa4e61)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Established new connection (b5ddbee0-67c7-40f6-a1df-43d45eaa4e61)
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4897fe2d
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2f200fa1-c174-4c15-a6b0-bdb0765bb959)
2025-04-21 16:55:59 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 16:55:59 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 16:55:59 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Established new connection (2f200fa1-c174-4c15-a6b0-bdb0765bb959)
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@350af7e0
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (411754c5-2fc3-4046-9ea1-d895b98609e4)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Established new connection (411754c5-2fc3-4046-9ea1-d895b98609e4)
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1474015d
2025-04-21 16:55:59 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 16:55:59 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 16:55:59 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=8/10, active=1, waiting=0)
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (591c2159-7539-4edf-aa51-a752f0b59f11)
2025-04-21 16:55:59 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f3f0fae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@21a66d45)
2025-04-21 16:55:59 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f966492) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63fdffcd)
2025-04-21 16:55:59 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 16:55:59 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 16:55:59 DEBUG PoolBase - HikariPool-1 - Established new connection (591c2159-7539-4edf-aa51-a752f0b59f11)
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2482121d
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@17740dae
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17740dae
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@aec50a1`
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:55:59 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:55:59 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:55:59 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 16:55:59 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21618fa7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15f2eda3]
2025-04-21 16:55:59 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 16:55:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 16:55:59 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 16:55:59 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property id
2025-04-21 16:55:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property number
2025-04-21 16:55:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 16:55:59 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 16:55:59 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property id
2025-04-21 16:55:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property name
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property passport
2025-04-21 16:55:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 16:55:59 DEBUG EntityBinder - Import with entity name User
2025-04-21 16:55:59 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property userID
2025-04-21 16:55:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property email
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property isActive
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property name
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property password
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property userRole
2025-04-21 16:55:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 16:55:59 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 16:55:59 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property guestId
2025-04-21 16:55:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property age
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property name
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property user
2025-04-21 16:55:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 16:55:59 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 16:55:59 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property bookingId
2025-04-21 16:55:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property checkIn
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property checkOut
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property room
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property status
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property user
2025-04-21 16:55:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 16:55:59 DEBUG EntityBinder - Import with entity name Room
2025-04-21 16:55:59 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property roomID
2025-04-21 16:55:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property price
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property roomType
2025-04-21 16:55:59 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 16:55:59 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 16:55:59 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 16:55:59 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property amount
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property booking
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property issueDate
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 16:55:59 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 16:55:59 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 16:55:59 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 16:55:59 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:55:59 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:55:59 DEBUG PropertyBinder - Building property user
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 16:55:59 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 16:55:59 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 16:55:59 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 16:55:59 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 16:55:59 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 16:55:59 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 16:55:59 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 16:55:59 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 16:55:59 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:56:00 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:56:00 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3a90c13c, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 16:56:00 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4f654cee] under count; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2262d6d5] under every; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@40de8f93] under any; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@502a4156] under sinh; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5416f8db] under cosh; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64e1377c] under tanh; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b0fd744] under pi; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@92d1782] under log; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6968c1d6] under position; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@13c8ac77] under overlay; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7a9eccc4] under trim; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@158ae284] under cast; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@50eb4a2c] under collate; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7885776b] under extract; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3a3ed300] under ifnull; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2404b5a] under pad; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@31b82e0f] under str; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@80b122b] under format; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4b0bd001] under timestampadd; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3f96f020] under timestampdiff; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fa5f81c] under current_date; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a1d526c] under current_time; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f2f0109] under current_timestamp; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483b0690] under local_date; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@687e6293] under local_time; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6870c3c2] under local_datetime; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fb0a08c] under offset_datetime; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1faf386c] under instant; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@66a5755] under sql; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@92d1782
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@771a7d53] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64e1377c
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@502a4156
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5416f8db
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b0fd744
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@7e4579c7] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@687e6293
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6870c3c2
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@59b32539] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5b47731f] under bit_length; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@233db8e9] under octet_length; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40c2ce52] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6968c1d6
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18a19e] under bitand; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60a7e509] under bitor; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e13f304] under bitxor; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@787508ca] under bitnot; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d24420b] under median; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ce2392] under insert; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7f7b6639] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@13c8ac77
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@16ac5d35] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@2b6a0ea9] under listagg; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@70721c12] under array; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@769bd849] under array_list; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@682abca7] under array_agg; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@93824eb] under array_position; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@33eb6758] under array_positions; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@7e62cfa3] under array_positions_list; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@46e190ed] under array_length; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@4d157493] under array_concat; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@310ed6b4] under array_prepend; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@640cc04b] under array_append; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@2d74c81b] under array_contains; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@10b687f2] under array_contains_nullable; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@568750b7] under array_overlaps; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@3e28fee1] under array_overlaps_nullable; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e7bf7b7] under array_get; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@78ec89a6] under array_set; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@642a16aa] under array_remove_index; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642ee49c] under array_slice; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@294aba23] under array_trim; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4dd90166] under array_fill; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@52227eb2] under array_fill_list; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@4ed5a1b0] under array_to_string; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@45900b64] under mode; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f2a1813] under percentile_cont; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@79f90a3a] under percentile_disc; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@91f565d] under rank; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@46e3559f] under dense_rank; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b83459e] under percent_rank; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@32118208] under cume_dist; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2eda072] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3fa21d49] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@416d56f2] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e13f304
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@5261ec9] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@580fd26b] under trunc; prior registration was null
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 16:56:00 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78fe204a] under date_trunc; prior registration was null
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 16:56:00 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 16:56:00 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 16:56:00 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:56:00 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:56:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:56:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:56:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:56:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:56:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:56:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 16:56:00 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:56:00 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:56:00 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 16:56:00 DEBUG creation - Starting post-init callbacks
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 16:56:00 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : g1_0
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48dff674] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:56:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 16:56:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:56:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 16:56:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 16:56:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 16:56:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@615e83ac] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@18c7f6b5] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:56:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 16:56:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:56:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:56:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 16:56:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:56:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:56:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 16:56:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:56:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@474e34e4] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : p2_0
2025-04-21 16:56:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 16:56:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 16:56:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 16:56:00 DEBUG create - Created new SQL alias : i1_0
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51eb0e84] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 16:56:00 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4899799b] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 16:56:00 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 16:56:00 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 16:56:00 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 16:56:00 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 16:56:00 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 16:56:00 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 16:56:00 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 16:56:00 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 16:56:00 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21618fa7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@20b829d5]
2025-04-21 16:56:00 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 16:56:00 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 16:56:00 DEBUG Table - No alter strings for table : bookings
2025-04-21 16:56:00 DEBUG Table - No alter strings for table : guests
2025-04-21 16:56:00 DEBUG Table - No alter strings for table : invoices
2025-04-21 16:56:00 DEBUG Table - No alter strings for table : Passport
2025-04-21 16:56:00 DEBUG Table - No alter strings for table : Persons
2025-04-21 16:56:00 DEBUG Table - No alter strings for table : rooms
2025-04-21 16:56:00 DEBUG Table - No alter strings for table : users
2025-04-21 16:56:00 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3356ff58
2025-04-21 16:56:00 DEBUG SessionFactoryRegistry - Registering SessionFactory: 2ed7810c-b652-4187-b7c7-cdd2674008d5 (my-persistence-unit)
2025-04-21 16:56:00 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 16:56:00 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 16:56:00 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 16:56:00 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 16:56:01 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 16:56:01 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:56:01 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:56:01 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:56:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 16:56:01 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 16:56:01 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 16:56:01 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:56:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:56:01 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1035726142 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:56:01 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:56:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:56:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1097699568
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:56:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:56:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3164d5aa
2025-04-21 16:56:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:56:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:56:01 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:56:01 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@252246185 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:56:01 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:56:01 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:56:01 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1420694080
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:56:01 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:56:01 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:56:01 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c2b65cc
2025-04-21 16:56:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:56:01 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:56:01 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 16:56:16 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-21 16:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:56:16 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@201291340 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:56:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 169571657
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7aa63f50
2025-04-21 16:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:56:16 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 16:56:16 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 16:56:16 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:56:16 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:56:16 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:56:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54e18a46] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:56:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b33892a] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:56:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11a67420] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:56:16 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11a67420] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@6b33892a
2025-04-21 16:56:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 16:56:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 16:56:16 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 16:56:16 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 16:56:16 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 16:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:56:16 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@2003665047 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@2050248794)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@192442996 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1321604822)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1437884065 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 16:56:16 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [0] - [67]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 67
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#67] : 997692431
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#3) : 3
2025-04-21 16:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:56:16 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@502475785 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:56:16 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 1375949608
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 16:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78a165db
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#3] : 3 has being loaded by session.internalLoad.
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 16:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:56:16 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@758888772 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:56:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 125059477
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77f529a6
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#67
2025-04-21 16:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ead3c67
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [0] - [69]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 69
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#69] : 1579897131
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#6) : 6
2025-04-21 16:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:56:16 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1682860686 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:56:16 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 294528135
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 16:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6032622
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#6] : 6 has being loaded by session.internalLoad.
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#69
2025-04-21 16:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ead3c67
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [0] - [68]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 68
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#68] : 1556116954
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#4) : 4
2025-04-21 16:56:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:56:16 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@69566726 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:56:16 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 619969415
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 16:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c7673ae
2025-04-21 16:56:16 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#4] : 4 has being loaded by session.internalLoad.
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:39]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [2] - [2030-10-12T12:00:39]
2025-04-21 16:56:16 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:56:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#68
2025-04-21 16:56:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ead3c67
2025-04-21 16:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:56:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:56:16 INFO  UserMenuUI - 1. Booking ID: 67, Status: CONFIRMED, Room Number: 3, Check-in: 2025-04-21T15:18, Check-out: 2025-04-23T10:00
2025-04-21 16:56:16 INFO  UserMenuUI - 2. Booking ID: 69, Status: CONFIRMED, Room Number: 6, Check-in: 2025-04-21T12:00:56, Check-out: 2025-04-22T12:00:56
2025-04-21 16:56:16 INFO  UserMenuUI - 3. Booking ID: 68, Status: CONFIRMED, Room Number: 4, Check-in: 2025-04-21T12:00:39, Check-out: 2030-10-12T12:00:39
2025-04-21 16:56:16 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-21 16:56:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:56:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:56:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:56:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:57:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:57:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:57:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@22295ec4 is alive
2025-04-21 16:57:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@64ba9f99 is alive
2025-04-21 16:57:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2482121d is alive
2025-04-21 16:57:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@350af7e0 is alive
2025-04-21 16:57:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@102794cf is alive
2025-04-21 16:57:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1474015d is alive
2025-04-21 16:57:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@552508af is alive
2025-04-21 16:57:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30e237b3 is alive
2025-04-21 16:57:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4897fe2d is alive
2025-04-21 16:57:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1adfffbf is alive
2025-04-21 16:57:58 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:57:58 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:58:28 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:58:28 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:58:49 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 16:58:49 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 16:58:49 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 16:58:49 DEBUG HikariConfig - autoCommit......................true
2025-04-21 16:58:49 DEBUG HikariConfig - catalog.........................none
2025-04-21 16:58:49 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 16:58:49 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 16:58:49 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 16:58:49 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-21 16:58:49 DEBUG HikariConfig - dataSource......................none
2025-04-21 16:58:49 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 16:58:49 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 16:58:49 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 16:58:49 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 16:58:49 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 16:58:49 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 16:58:49 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 16:58:49 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 16:58:49 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 16:58:49 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 16:58:49 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 16:58:49 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 16:58:49 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 16:58:49 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 16:58:49 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 16:58:49 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 16:58:49 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 16:58:49 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 16:58:49 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 16:58:49 DEBUG HikariConfig - password........................<masked>
2025-04-21 16:58:49 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 16:58:49 DEBUG HikariConfig - readOnly........................false
2025-04-21 16:58:49 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 16:58:49 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 16:58:49 DEBUG HikariConfig - schema..........................none
2025-04-21 16:58:49 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 16:58:49 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 16:58:49 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 16:58:49 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 16:58:49 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c11825b1-788c-46ac-82bc-0f1b9fbfe663)
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Established new connection (c11825b1-788c-46ac-82bc-0f1b9fbfe663)
2025-04-21 16:58:49 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1941a8ff
2025-04-21 16:58:49 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 16:58:49 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 16:58:49 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 16:58:49 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 16:58:49 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 16:58:49 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 16:58:49 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 16:58:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8457cb6d-2a1b-4294-afde-9ce57bd59f1d)
2025-04-21 16:58:49 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Established new connection (8457cb6d-2a1b-4294-afde-9ce57bd59f1d)
2025-04-21 16:58:49 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f33c870
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 16:58:49 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 16:58:49 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 16:58:49 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 16:58:49 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (de0ba89b-bd7e-4e88-899b-4ab753812c2b)
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Established new connection (de0ba89b-bd7e-4e88-899b-4ab753812c2b)
2025-04-21 16:58:49 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25cba300
2025-04-21 16:58:49 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f9aa970d-0564-46f1-9974-9a491b4c7672)
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@790174f2
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@42257bdd
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7689ddef
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@687a762c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a2e2935
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@733c423e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b629f13
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@70925b45
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Established new connection (f9aa970d-0564-46f1-9974-9a491b4c7672)
2025-04-21 16:58:49 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@60c939dd
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2970a5bc
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24be2d9c
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5bd73d1a
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@aec50a1
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2555fff0
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@70d2e40b
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@120f38e6
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a0e1b5e
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@702ed190
2025-04-21 16:58:49 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@173b9122
2025-04-21 16:58:49 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@499b2a5c] into BootstrapContext; was [null]
2025-04-21 16:58:49 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@596df867] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@c1fca1e]
2025-04-21 16:58:49 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (deb19ab6-5cd9-4641-b48a-0ef5d400f18b)
2025-04-21 16:58:49 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 16:58:49 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 16:58:49 DEBUG PoolBase - HikariPool-1 - Established new connection (deb19ab6-5cd9-4641-b48a-0ef5d400f18b)
2025-04-21 16:58:49 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@51081dfc
2025-04-21 16:58:49 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5191e44e-8d64-400c-afbb-a801ef83e485)
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Established new connection (5191e44e-8d64-400c-afbb-a801ef83e485)
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@51637f38
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0bb38ab1-48ad-4b7f-a298-01695704db6b)
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Established new connection (0bb38ab1-48ad-4b7f-a298-01695704db6b)
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@294805b7
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (9ca16a42-2f12-498f-8fb0-2cee4f58301a)
2025-04-21 16:58:50 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 16:58:50 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 16:58:50 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Established new connection (9ca16a42-2f12-498f-8fb0-2cee4f58301a)
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e6c692
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (3160d4f6-f788-4d09-be7a-ad099de48f0d)
2025-04-21 16:58:50 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Established new connection (3160d4f6-f788-4d09-be7a-ad099de48f0d)
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1110dc8f
2025-04-21 16:58:50 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 16:58:50 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 16:58:50 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3047254d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6cf31447)
2025-04-21 16:58:50 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e92466a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e8997c)
2025-04-21 16:58:50 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 16:58:50 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b31cf675-51d7-40ce-bc46-e79f62fc0c73)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a20b94b
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2970a5bc`
2025-04-21 16:58:50 DEBUG PoolBase - HikariPool-1 - Established new connection (b31cf675-51d7-40ce-bc46-e79f62fc0c73)
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5bc0fb2a
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:58:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 16:58:50 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:58:50 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 16:58:50 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21f8e55f]
2025-04-21 16:58:50 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 16:58:50 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 16:58:50 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 16:58:50 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property id
2025-04-21 16:58:50 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property number
2025-04-21 16:58:50 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 16:58:50 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 16:58:50 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property id
2025-04-21 16:58:50 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property name
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property passport
2025-04-21 16:58:50 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 16:58:50 DEBUG EntityBinder - Import with entity name User
2025-04-21 16:58:50 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property userID
2025-04-21 16:58:50 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property email
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property isActive
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property name
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property password
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property userRole
2025-04-21 16:58:50 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 16:58:50 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 16:58:50 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property guestId
2025-04-21 16:58:50 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property age
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property name
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property user
2025-04-21 16:58:50 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 16:58:50 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 16:58:50 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property bookingId
2025-04-21 16:58:50 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property checkIn
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property checkOut
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property room
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property status
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property user
2025-04-21 16:58:50 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 16:58:50 DEBUG EntityBinder - Import with entity name Room
2025-04-21 16:58:50 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property roomID
2025-04-21 16:58:50 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property price
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property roomType
2025-04-21 16:58:50 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 16:58:50 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 16:58:50 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 16:58:50 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property amount
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property booking
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property issueDate
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 16:58:50 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 16:58:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 16:58:50 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 16:58:50 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 16:58:50 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 16:58:50 DEBUG PropertyBinder - Building property user
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 16:58:50 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 16:58:50 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 16:58:50 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 16:58:50 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 16:58:50 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 16:58:50 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 16:58:50 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 16:58:50 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 16:58:50 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:58:50 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:58:50 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:58:50 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6bcc3f27, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 16:58:50 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1f939a0f] under count; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@111d5c97] under every; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@29c17c3d] under any; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4] under sinh; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ba3d4b6] under cosh; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51b77cdf] under tanh; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89] under pi; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e] under log; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5416f8db] under position; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@798dad3d] under overlay; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7d986d83] under trim; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@e784320] under cast; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f6bf8aa] under collate; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2c63762b] under extract; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@68e02f33] under ifnull; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@158ae284] under pad; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7235f92b] under str; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@27a09971] under format; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@152c4495] under timestampadd; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4a44cfc0] under timestampdiff; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cf4d6d] under current_date; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b410308] under current_time; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b0bd001] under current_timestamp; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f9cab00] under local_date; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10272bbb] under local_time; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36d33f4] under local_datetime; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16736040] under offset_datetime; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c5d1d25] under instant; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@26ca61bf] under sql; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6088451e
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73a0f2b] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51b77cdf
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f3560d4
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ba3d4b6
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@441fbe89
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@483b0690] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@10272bbb
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@36d33f4
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@1faf386c] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4debbf0] under bit_length; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6a5e167a] under octet_length; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e06f7d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5416f8db
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66a5755] under bitand; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@771a7d53] under bitor; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c] under bitxor; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e95595b] under bitnot; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a917723] under median; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under insert; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5b47731f] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@798dad3d
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@233db8e9] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@6274670b] under listagg; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2b6a0ea9] under array; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@4dde8976] under array_list; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@7980cf2c] under array_agg; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@53c99b09] under array_position; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@60aec68a] under array_positions; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@f8a6243] under array_positions_list; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a8ffd75] under array_length; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@23cbbd07] under array_concat; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@da28d03] under array_prepend; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@ebda593] under array_append; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@65afeb6d] under array_contains; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@6723610b] under array_contains_nullable; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@59939293] under array_overlaps; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@68b366e2] under array_overlaps_nullable; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26837057] under array_get; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@a9c5b75] under array_set; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@3e28fee1] under array_remove_index; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16a2ed51] under array_slice; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b332962] under array_trim; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@781711b7] under array_fill; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@642a16aa] under array_fill_list; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@5d3b58ca] under array_to_string; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1d02af26] under mode; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3fa7df1] under percentile_cont; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4dd90166] under percentile_disc; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@f438904] under rank; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4ed5a1b0] under dense_rank; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@18d003cd] under percent_rank; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3135bf25] under cume_dist; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@45900b64] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@f2a1813] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79f90a3a] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d6d480c
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@91f565d] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@72a2312e] under trunc; prior registration was null
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 16:58:50 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47c7a9e5] under date_trunc; prior registration was null
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 16:58:50 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 16:58:50 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 16:58:50 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 16:58:50 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 16:58:51 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 16:58:51 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 16:58:51 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 16:58:51 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 16:58:51 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 16:58:51 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 16:58:51 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 16:58:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 16:58:51 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 16:58:51 DEBUG creation - Starting post-init callbacks
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 16:58:51 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : g1_0
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@55c50f52] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:58:51 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 16:58:51 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:58:51 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 16:58:51 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 16:58:51 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 16:58:51 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11bfffb3] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f03ee8f] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:58:51 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 16:58:51 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 16:58:51 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : r1_0
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 16:58:51 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 16:58:51 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 16:58:51 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:58:51 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 16:58:51 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:58:51 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : p1_0
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e5a8718] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : p2_0
2025-04-21 16:58:51 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 16:58:51 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 16:58:51 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 16:58:51 DEBUG create - Created new SQL alias : i1_0
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e50ae56] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@629b780f] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 16:58:51 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 16:58:51 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 16:58:51 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 16:58:51 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 16:58:51 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 16:58:51 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 16:58:51 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 16:58:51 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 16:58:51 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b7cae6f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@54f2df29]
2025-04-21 16:58:51 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 16:58:51 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 16:58:51 DEBUG Table - No alter strings for table : bookings
2025-04-21 16:58:51 DEBUG Table - No alter strings for table : guests
2025-04-21 16:58:51 DEBUG Table - No alter strings for table : invoices
2025-04-21 16:58:51 DEBUG Table - No alter strings for table : Passport
2025-04-21 16:58:51 DEBUG Table - No alter strings for table : Persons
2025-04-21 16:58:51 DEBUG Table - No alter strings for table : rooms
2025-04-21 16:58:51 DEBUG Table - No alter strings for table : users
2025-04-21 16:58:51 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@547aaa32
2025-04-21 16:58:51 DEBUG SessionFactoryRegistry - Registering SessionFactory: 0894c169-864c-4edc-b813-d862c1b9082b (my-persistence-unit)
2025-04-21 16:58:51 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 16:58:51 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 16:58:51 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 16:58:51 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 16:58:51 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 16:58:51 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:58:51 DEBUG create - Created new SQL alias : u1_0
2025-04-21 16:58:51 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 16:58:52 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 16:58:52 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 16:58:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 16:58:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 16:58:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:58:52 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@612641678 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:58:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:58:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:58:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1458969972
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:58:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:58:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@425f94d7
2025-04-21 16:58:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:58:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:58:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:58:52 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@629598328 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:58:52 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 16:58:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 16:58:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 251155815
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:58:52 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:58:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 16:58:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c2fb9e8
2025-04-21 16:58:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:58:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:58:52 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 16:58:55 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-21 16:58:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:58:55 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1379589736 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:58:55 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1084936573
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:58:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44e79e9e
2025-04-21 16:58:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:58:55 DEBUG hql - HQL : SELECT b FROM Booking b WHERE b.user = :user ORDER BY b.checkIn DESC LIMIT 3
2025-04-21 16:58:55 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Booking#user(MANY_TO_ONE)
2025-04-21 16:58:55 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Booking(b)`
            <- [root] - `org.example.entity.Booking(b)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Booking(b)`
          <- [root] - `org.example.entity.Booking(b)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Booking(b).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 16:58:55 DEBUG create - Created new SQL alias : b1_0
2025-04-21 16:58:55 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking(b))] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 16:58:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69944a90] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 16:58:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7131d668] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:58:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@667dd150] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 16:58:55 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@667dd150] for NavigablePath [org.example.entity.Booking(b).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@7131d668
2025-04-21 16:58:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 16:58:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 16:58:55 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Booking(b).user) 
2025-04-21 16:58:55 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking(b)]
 |  +-BasicFetch [org.example.entity.Booking(b).checkIn]
 |  +-BasicFetch [org.example.entity.Booking(b).checkOut]
 |  +-EntityFetchSelectImpl [org.example.entity.Booking(b).room]
 |  +-BasicFetch [org.example.entity.Booking(b).status]
 |  \-EntityFetchSelectImpl [org.example.entity.Booking(b).user]

2025-04-21 16:58:55 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking(b)) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.example.entity.Booking(b).room) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Booking(b).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Booking(b).user) {
            }
          }
        }
      }
    }

2025-04-21 16:58:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:58:55 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@307476514 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@63712830 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1099556456 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 16:58:55 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [0] - [67]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 67
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#67] : 810715571
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#3) : 3
2025-04-21 16:58:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:58:55 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@654662186 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:58:55 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 2003665047
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 16:58:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12d35bc9
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#3] : 3 has being loaded by session.internalLoad.
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 16:58:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:58:55 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@446895188 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:58:55 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1444195845
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:58:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54970127
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#67
2025-04-21 16:58:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bfbab1c
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [0] - [68]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 68
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#68] : 882568900
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#4) : 4
2025-04-21 16:58:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:58:55 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@758888772 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:58:55 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 125059477
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 16:58:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77f529a6
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#4] : 4 has being loaded by session.internalLoad.
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:39]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [2] - [2030-10-12T12:00:39]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#68
2025-04-21 16:58:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bfbab1c
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 2101850145
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 16:58:55 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:58:55 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1695946783 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:58:55 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1579897131
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 16:58:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ba87c11
2025-04-21 16:58:55 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 16:58:55 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:58:55 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 16:58:55 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bfbab1c
2025-04-21 16:58:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:58:55 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:58:55 INFO  UserMenuUI - 1. Booking ID: 67, Status: CONFIRMED, Room Number: 3, Check-in: 2025-04-21T15:18, Check-out: 2025-04-23T10:00
2025-04-21 16:58:55 INFO  UserMenuUI - 2. Booking ID: 68, Status: CONFIRMED, Room Number: 4, Check-in: 2025-04-21T12:00:39, Check-out: 2030-10-12T12:00:39
2025-04-21 16:58:55 INFO  UserMenuUI - 3. Booking ID: 65, Status: CONFIRMED, Room Number: 2, Check-in: 2025-04-18T11:00, Check-out: 2025-04-20T10:00
2025-04-21 16:58:55 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-21 16:59:09 WARN  UserMenuUI - Booking ID 69 not found in eligible bookings.
2025-04-21 16:59:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:59:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 16:59:41 INFO  UserMenuUI - User 13 is canceling a booking
2025-04-21 16:59:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:59:41 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@100869666 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:59:41 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1693394713
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:59:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b423f90
2025-04-21 16:59:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:59:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 16:59:41 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@619969415 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@209089454 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@289163990 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 16:59:41 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [0] - [67]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 67
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#67] : 2141739605
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#3) : 3
2025-04-21 16:59:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:59:41 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@212977036 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:59:41 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 770178574
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 16:59:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ff8d39b
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#3] : 3 has being loaded by session.internalLoad.
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 16:59:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:59:41 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1749712938 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 16:59:41 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 5533778
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 16:59:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ca3eba2
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#67
2025-04-21 16:59:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23c00420
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [0] - [69]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 69
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#69] : 36635755
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#6) : 6
2025-04-21 16:59:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:59:41 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@559559324 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:59:41 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 722306493
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 16:59:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@102ecb61
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#6] : 6 has being loaded by session.internalLoad.
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#69
2025-04-21 16:59:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23c00420
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [0] - [68]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 68
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#68] : 533769848
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#4) : 4
2025-04-21 16:59:41 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 16:59:41 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1479553213 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 16:59:41 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 1669140765
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 16:59:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a917017
2025-04-21 16:59:41 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#4] : 4 has being loaded by session.internalLoad.
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:39]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [2] - [2030-10-12T12:00:39]
2025-04-21 16:59:41 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 16:59:41 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#68
2025-04-21 16:59:41 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23c00420
2025-04-21 16:59:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:59:41 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 16:59:41 INFO  UserMenuUI - 1. Booking ID: 67, Status: CONFIRMED, Room Number: 3, Check-in: 2025-04-21T15:18, Check-out: 2025-04-23T10:00
2025-04-21 16:59:41 INFO  UserMenuUI - 2. Booking ID: 69, Status: CONFIRMED, Room Number: 6, Check-in: 2025-04-21T12:00:56, Check-out: 2025-04-22T12:00:56
2025-04-21 16:59:41 INFO  UserMenuUI - 3. Booking ID: 68, Status: CONFIRMED, Room Number: 4, Check-in: 2025-04-21T12:00:39, Check-out: 2030-10-12T12:00:39
2025-04-21 16:59:41 INFO  UserMenuUI - Prompting user to enter booking ID to cancel.
2025-04-21 16:59:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 16:59:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:00:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:00:04 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1822648234 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@820854836 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@385929353 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:00:04 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:00:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 69
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [4] - [6]
2025-04-21 17:00:04 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 6
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [11] - [31]
2025-04-21 17:00:04 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 31
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [10] - [31]
2025-04-21 17:00:04 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#6] : 706857959
2025-04-21 17:00:04 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#31] : 1001702066
2025-04-21 17:00:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#69] : 1337741679
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [7] - [202]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-21 17:00:04 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#6
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [12] - [abrar@gmail.com]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [14] - [ABRAR SHAHA]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:00:04 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#31
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:00:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#69
2025-04-21 17:00:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1acc768
2025-04-21 17:00:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:04 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.booking = :booking
2025-04-21 17:00:04 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(booking)] : null -> org.example.entity.Invoice#booking(MANY_TO_ONE)
2025-04-21 17:00:04 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).booking`
              :booking
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 17:00:04 DEBUG create - Created new SQL alias : i1_0
2025-04-21 17:00:04 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 17:00:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72a0a60d] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 17:00:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65930e02] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 17:00:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@85c3522] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 17:00:04 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@85c3522] for NavigablePath [org.example.entity.Invoice(i).booking] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@72a0a60d
2025-04-21 17:00:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-21 17:00:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(booking)
2025-04-21 17:00:04 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).booking) 
2025-04-21 17:00:04 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-21 17:00:04 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (b2 : org.example.entity.Invoice(i).booking) {
            }
          }
        }
      }
    }

2025-04-21 17:00:04 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:00:04 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@62190059 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1648869516)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@792363366 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@2058066102 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1580467617)

2025-04-21 17:00:04 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-21 17:00:04 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 41
2025-04-21 17:00:04 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#41] : 1587586985
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [2] - [69]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [3] - [2025-04-21T16:47:09.936153]
2025-04-21 17:00:04 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-21 17:00:04 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#41
2025-04-21 17:00:04 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4203529f
2025-04-21 17:00:04 INFO  UserMenuUI - Are you sure you want to cancel the booking with ID: 69? (Y/N)
2025-04-21 17:00:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:00:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:00:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:00:21 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@715819458 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1515772738 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@35126588 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:00:21 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 69
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [4] - [6]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 6
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [11] - [31]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 31
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [10] - [31]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#6] : 195587155
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#31] : 921406983
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#69] : 1039550799
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [7] - [202]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#6
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [12] - [abrar@gmail.com]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [14] - [ABRAR SHAHA]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#31
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#69
2025-04-21 17:00:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5f960a
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:00:21 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1407036358 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@967609356 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@908006983 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:00:21 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 69
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [4] - [6]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 6
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [11] - [31]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 31
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [10] - [31]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#6] : 842729010
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#31] : 2094564124
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#69] : 342735014
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [7] - [202]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#6
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [12] - [abrar@gmail.com]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [14] - [ABRAR SHAHA]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#31
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#69
2025-04-21 17:00:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a20da9f
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:00:21 DEBUG TransactionImpl - begin
2025-04-21 17:00:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:00:21 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@444211664 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@196218979 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1747043900 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:00:21 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 69
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [4] - [6]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 6
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [3] - [6]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [11] - [31]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 31
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [10] - [31]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#6] : 762337688
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#31] : 681835572
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#69] : 1971495275
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [6] - [3500.0]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [7] - [202]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [8] - [DOUBLE]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#6
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [12] - [abrar@gmail.com]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [13] - [false]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [14] - [ABRAR SHAHA]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [15] - [!Q1q]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:00:21 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#31
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:56]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [2] - [2025-04-22T12:00:56]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#69
2025-04-21 17:00:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4dd752e8
2025-04-21 17:00:21 DEBUG TransactionImpl - committing
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:00:21 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:00:21 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-21T12:00:56, checkOut=2025-04-22T12:00:56, user=org.example.entity.User#31, bookingId=69, room=org.example.entity.Room#6, status=CANCELLED}
2025-04-21 17:00:21 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=ABRAR SHAHA, isActive=false, userRole=GUEST, userID=31, email=abrar@gmail.com}
2025-04-21 17:00:21 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=202, price=3500.0, roomID=6, roomType=DOUBLE}
2025-04-21 17:00:21 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 INFO  UserMenuUI - Attempting to update room availability. Room ID: 6, Availability: true
2025-04-21 17:00:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:00:21 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@36214154 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:00:21 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 94166581
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 17:00:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43de9fc9
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 INFO  RoomServiceImpl - Fetched room with ID 6: Optional[Room{roomID=6, roomNumber=202, roomType=DOUBLE, price=3500.0, isAvailable=false}]
2025-04-21 17:00:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:00:21 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@923286262 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:00:21 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 1784938289
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 17:00:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c4aa701
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:00:21 DEBUG TransactionImpl - begin
2025-04-21 17:00:21 DEBUG create - Created new SQL alias : r1_0
2025-04-21 17:00:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 17:00:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 17:00:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 17:00:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:00:21 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@444983406 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:00:21 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 6
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#6] : 271588719
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#6
2025-04-21 17:00:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cd6719d
2025-04-21 17:00:21 DEBUG TransactionImpl - committing
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:00:21 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:00:21 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=202, price=3500.0, roomID=6, roomType=DOUBLE}
2025-04-21 17:00:21 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=6, roomNumber=202, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-21 17:00:21 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=6, roomNumber=202, roomType=DOUBLE, price=3500.0, isAvailable=true}
2025-04-21 17:00:21 INFO  UserMenuUI - Room ID: 6 availability successfully updated to: true
2025-04-21 17:00:21 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:00:21 DEBUG TransactionImpl - begin
2025-04-21 17:00:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:00:21 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1912282531 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1580467617)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@516866200 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1648869516)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@1824801287 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-21 17:00:21 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 41
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#41] : 1240537166
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [2] - [69]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [3] - [2025-04-21T16:47:09.936153]
2025-04-21 17:00:21 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-21 17:00:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#41
2025-04-21 17:00:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ebaf0d
2025-04-21 17:00:21 DEBUG TransactionImpl - committing
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 17:00:21 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:00:21 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:00:21 DEBUG EntityPrinter - org.example.entity.Invoice{amount=3500.0, booking=<uninitialized>, invoiceId=41, issueDate=2025-04-21T16:47:09.936153, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-21 17:00:21 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:00:21 INFO  UserMenuUI - Booking successfully canceled, and room availability updated.
2025-04-21 17:00:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:00:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:00:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:00:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:00:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:00:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:00:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:00:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:00:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:00:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:00:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:00:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:01:02 INFO  UserMenuUI - User 13 is viewing their invoice
2025-04-21 17:01:02 INFO  UserMenuUI - User 13 requested to view their invoices.
2025-04-21 17:01:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:01:02 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1294714218 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:01:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1015200451
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 17:01:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ddac0b6
2025-04-21 17:01:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:01:02 DEBUG hql - HQL : SELECT i FROM Invoice i WHERE i.user = :user
2025-04-21 17:01:02 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(user)] : null -> org.example.entity.Invoice#user(MANY_TO_ONE)
2025-04-21 17:01:02 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Invoice(i)`
            <- [root] - `org.example.entity.Invoice(i)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Invoice(i)`
          <- [root] - `org.example.entity.Invoice(i)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [entity-path] - `org.example.entity.Invoice(i).user`
              :user
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 17:01:02 DEBUG create - Created new SQL alias : i1_0
2025-04-21 17:01:02 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice(i))] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 17:01:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@20c283b4] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 17:01:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@366b4a7b] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 17:01:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a251135] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 17:01:02 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a251135] for NavigablePath [org.example.entity.Invoice(i).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@366b4a7b
2025-04-21 17:01:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 17:01:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(user)
2025-04-21 17:01:02 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(org.example.entity.Invoice(i).user) 
2025-04-21 17:01:02 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice(i)]
 |  +-BasicFetch [org.example.entity.Invoice(i).amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice(i).booking]
 |  +-BasicFetch [org.example.entity.Invoice(i).issueDate]
 |  +-BasicFetch [org.example.entity.Invoice(i).paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice(i).user]

2025-04-21 17:01:02 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice(i)) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice(i).booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice(i).user) {
            }
             join LazyTableGroup (u2 : org.example.entity.Invoice(i).user) {
            }
          }
        }
      }
    }

2025-04-21 17:01:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:01:02 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1147824431 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1648869516)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@675203915 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@170974144 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1580467617)

2025-04-21 17:01:02 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.user_id=?
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [0] - [37]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 37
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#37] : 1067354869
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [2] - [65]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [1] - [7000.0]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [3] - [2025-04-17T17:20:14.773512]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#37
2025-04-21 17:01:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@337cb81d
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [0] - [38]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 38
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#38] : 1198990434
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [2] - [66]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [1] - [5000.0]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [3] - [2025-04-17T17:25:41.035596]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [4] - [PAID]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#38
2025-04-21 17:01:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@337cb81d
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [0] - [39]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 39
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#39] : 93923756
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [2] - [67]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [1] - [14000.0]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [3] - [2025-04-21T15:18:29.657769]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#39
2025-04-21 17:01:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@337cb81d
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [0] - [40]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 40
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#40] : 1318834888
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [2] - [68]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [1] - [2.0E7]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [3] - [2025-04-21T16:43:49.062497]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#40
2025-04-21 17:01:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@337cb81d
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [0] - [41]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 41
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#41] : 418461526
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [2] - [69]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [1] - [3500.0]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [3] - [2025-04-21T16:47:09.936153]
2025-04-21 17:01:02 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-21 17:01:02 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#41
2025-04-21 17:01:02 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@337cb81d
2025-04-21 17:01:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:01:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:01:02 INFO  UserMenuUI - Displayed invoice: ID 37 | Booking ID 65 | Amount: 7000.0 | Payment Status: PENDING
2025-04-21 17:01:02 INFO  UserMenuUI - Displayed invoice: ID 38 | Booking ID 66 | Amount: 5000.0 | Payment Status: PAID
2025-04-21 17:01:02 INFO  UserMenuUI - Displayed invoice: ID 39 | Booking ID 67 | Amount: 14000.0 | Payment Status: PENDING
2025-04-21 17:01:02 INFO  UserMenuUI - Displayed invoice: ID 40 | Booking ID 68 | Amount: 2.0E7 | Payment Status: PENDING
2025-04-21 17:01:02 INFO  UserMenuUI - Displayed invoice: ID 41 | Booking ID 69 | Amount: 3500.0 | Payment Status: CANCELED
2025-04-21 17:01:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:01:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:01:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:01:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:02:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:02:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:02:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:02:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:02:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:02:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:02:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:02:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:02:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:02:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:02:34 INFO  UserMenuUI - User 13 is logging out
2025-04-21 17:02:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:02:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:02:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:02:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:03:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:03:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:03:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:03:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:04:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:04:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:04:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:04:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:04:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:04:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:04:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:04:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:04:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:04:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:04:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:04:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:04:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:04:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1811058529 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:04:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [0] - [31]
2025-04-21 17:04:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 31
2025-04-21 17:04:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#31] : 564892060
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:04:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#31
2025-04-21 17:04:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5edd9b4f
2025-04-21 17:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:04:36 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:04:36 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1572407320 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:04:36 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [0] - [31]
2025-04-21 17:04:36 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 31
2025-04-21 17:04:36 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#31] : 1937294500
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [1] - [abrar@gmail.com]
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [3] - [ABRAR SHAHA]
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 17:04:36 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:04:36 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#31
2025-04-21 17:04:36 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6694fb1b
2025-04-21 17:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:04:36 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:04:36 WARN  HomeMenuUI - Inactive account login attempt: abrar@gmail.com
2025-04-21 17:04:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:04:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:05:10 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:05:10 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1640899470 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:05:10 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:05:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 17:05:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 768427295
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:05:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 17:05:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@342394b3
2025-04-21 17:05:10 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:05:10 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:05:10 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:05:10 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1574368535 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:05:10 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:05:10 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 17:05:10 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1905093500
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:05:10 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:05:10 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 17:05:10 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b994617
2025-04-21 17:05:10 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:05:10 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:05:10 INFO  HomeMenuUI - Login successful: SHUBHAM LANKE (STAFF)
2025-04-21 17:05:10 INFO  StaffMenuUI - Staff menu accessed by: SHUBHAM LANKE (Role: STAFF)
2025-04-21 17:05:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:05:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:05:26 WARN  StaffMenuUI - Invalid menu choice by user SHUBHAM LANKE: -1
2025-04-21 17:05:35 WARN  StaffMenuUI - Invalid menu choice by user SHUBHAM LANKE: 0
2025-04-21 17:05:38 ERROR StaffMenuUI - InputMismatchException: Invalid input by user SHUBHAM LANKE in staff menu
2025-04-21 17:05:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:05:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:05:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:05:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:05:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:05:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:05:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:06:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:06:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:06:16 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 17:06:16 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 17:06:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:06:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:06:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:06:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:06:21 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1425617516 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:06:21 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1457383927
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b2acb12
2025-04-21 17:06:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:06:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:06:21 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 17:06:21 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 17:06:21 DEBUG create - Created new SQL alias : r1_0
2025-04-21 17:06:21 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 17:06:21 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 17:06:21 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 17:06:21 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 17:06:21 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:06:21 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@333295611 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:06:21 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1771811588
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1090446425
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 198024918
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1073352504
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 332149215
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 614978515
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1140572863
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 748127799
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1579620531
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1141137903
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1501019626
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 17:06:21 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:06:21 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 17:06:21 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17477bbb
2025-04-21 17:06:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:06:21 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:06:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:06:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:06:36 INFO  StaffMenuUI - Creating booking for user saurav@gmail.com in room 202 from 2025-04-21T17:06 to 2025-04-22T10:00
2025-04-21 17:06:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:06:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:07:00 INFO  StaffMenuUI - Room booked successfully for user: saurav@gmail.com
2025-04-21 17:07:13 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-21 17:07:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:07:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:07:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:07:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:07:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:07:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:07:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:07:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:07:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:07:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:08:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:08:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:08:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:08:19 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1210663640 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:08:19 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1774995948
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 17:08:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b71e98f
2025-04-21 17:08:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:08:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:08:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:08:19 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1859631557 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:08:19 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 2139936252
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 17:08:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2c465259
2025-04-21 17:08:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:08:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:08:19 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@1391983205 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1657199513 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@2080162056 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 17:08:19 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [0] - [67]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 67
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#67] : 1546740272
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#3) : 3
2025-04-21 17:08:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:08:19 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1096293439 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:08:19 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 882156382
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 17:08:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@352ce817
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#3] : 3 has being loaded by session.internalLoad.
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 17:08:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:08:19 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1903062949 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:08:19 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1245442940
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 17:08:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48aaaed9
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#67
2025-04-21 17:08:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@116915f1
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [0] - [68]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 68
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#68] : 666625907
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#4) : 4
2025-04-21 17:08:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:08:19 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@848187627 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:08:19 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 245908294
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 17:08:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e614370
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#4] : 4 has being loaded by session.internalLoad.
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:39]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [2] - [2030-10-12T12:00:39]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#68
2025-04-21 17:08:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@116915f1
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 505323885
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 17:08:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:08:19 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1839813660 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:08:19 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 244839708
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 17:08:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@29394966
2025-04-21 17:08:19 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 17:08:19 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 17:08:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 17:08:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@116915f1
2025-04-21 17:08:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:08:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:08:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:08:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:08:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:08:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:08:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:08:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:08:58 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-21 17:09:00 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:09:00 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@417004859 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:09:00 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:09:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:09:00 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:09:00 ERROR UserDaoImpl - Error fetching user by email hjgygh: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.searchUserDetails(StaffMenuUI.java:556) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:74) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 17:09:09 ERROR StaffMenuUI - InputMismatchException: Invalid input by user SHUBHAM LANKE in staff menu
2025-04-21 17:09:15 INFO  StaffMenuUI - User SHUBHAM LANKE selected: View Available Rooms
2025-04-21 17:09:15 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:09:15 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1444353676 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:09:15 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1410897862
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 25322613
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1805866468
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 2064996849
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1796597388
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 2040956503
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 148631794
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1506867913
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 490030841
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1357705014
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 124246457
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 17:09:15 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:09:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 17:09:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ad558bf
2025-04-21 17:09:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:09:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:09:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:09:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:09:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:09:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:09:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:09:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:09:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:09:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:09:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:09:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:09:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:10:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:10:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:10:18 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 17:10:18 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 17:10:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:10:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:10:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:10:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:10:31 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1497333038 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:10:31 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:10:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:10:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:10:31 ERROR UserDaoImpl - Error fetching user by email ----@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:300) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 17:10:31 INFO  StaffMenuUI - User not found, creating a new user.
2025-04-21 17:10:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:10:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:10:56 WARN  StaffMenuUI - Invalid name format entered: ```````````
2025-04-21 17:10:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:11:01 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 17:11:01 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 17:11:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:11:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:11:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:11:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:11:12 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1614519627 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:11:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:11:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:11:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:11:12 ERROR UserDaoImpl - Error fetching user by email ----@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:300) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 17:11:12 INFO  StaffMenuUI - User not found, creating a new user.
2025-04-21 17:11:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:11:19 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:11:19 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:11:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:11:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:11:49 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:11:49 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:11:53 WARN  StaffMenuUI - Invalid name format entered: 5
2025-04-21 17:11:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:11:57 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 17:11:57 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 17:12:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:12:02 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1668400620 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:12:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:12:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:12:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:12:02 ERROR UserDaoImpl - Error fetching user by email ---@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:300) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 17:12:02 INFO  StaffMenuUI - User not found, creating a new user.
2025-04-21 17:12:07 WARN  StaffMenuUI - Invalid name format entered: I9
2025-04-21 17:12:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:12:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:12:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:12:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:12:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:12:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:12:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:12:49 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 17:12:49 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 17:12:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:12:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:12:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:13:02 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:13:02 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1620758550 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:13:02 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:13:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:13:02 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:13:02 ERROR UserDaoImpl - Error fetching user by email ---@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:300) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 17:13:02 INFO  StaffMenuUI - User not found, creating a new user.
2025-04-21 17:13:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:13:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:13:16 WARN  StaffMenuUI - Invalid name format entered:  S S
2025-04-21 17:13:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:13:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:13:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:13:32 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 17:13:32 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 17:13:34 WARN  StaffMenuUI - Invalid email format entered: -----
2025-04-21 17:13:37 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 17:13:37 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 17:13:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:13:44 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@347696158 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:13:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:13:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:13:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:13:44 ERROR UserDaoImpl - Error fetching user by email ---@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.getUserByEmail(UserServiceImpl.java:69) [classes/:?]
	at org.example.controller.UserController.getUserByEmail(UserController.java:34) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.bookRoomByStaff(StaffMenuUI.java:300) [classes/:?]
	at org.example.consoleinterface.StaffMenuUI.displayStaffMenu(StaffMenuUI.java:82) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:103) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 17:13:44 INFO  StaffMenuUI - User not found, creating a new user.
2025-04-21 17:13:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:13:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:13:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:14:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:14:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:14:12 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-21 17:14:12 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-21 17:14:12 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 17:14:12 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 17:14:12 DEBUG create - Created new SQL alias : u1_0
2025-04-21 17:14:12 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 17:14:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 17:14:12 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 17:14:12 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-21 17:14:12 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 17:14:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:14:12 DEBUG results - Initializer list is empty
2025-04-21 17:14:12 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-21 17:14:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@51aa2a58
2025-04-21 17:14:12 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-21 17:14:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:14:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:14:12 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:14:12 DEBUG TransactionImpl - begin
2025-04-21 17:14:12 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 17:14:12 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 17:14:12 DEBUG results - Initializer list is empty
2025-04-21 17:14:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@289da1bc
2025-04-21 17:14:12 DEBUG results - Extracted JDBC value [0] - [32]
2025-04-21 17:14:12 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@e890591
2025-04-21 17:14:12 DEBUG TransactionImpl - committing
2025-04-21 17:14:12 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:14:12 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:14:12 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 17:14:12 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:14:12 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:14:12 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=S S, isActive=false, userRole=GUEST, userID=32, email=---@gmail.com}
2025-04-21 17:14:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:14:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:14:12 INFO  UserDaoImpl - User registered successfully: User{userID=32, name='S S', email='---@gmail.com', password='!Q1q', userRole=GUEST, isActive=false}
2025-04-21 17:14:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:14:12 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1268510462 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:14:12 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:14:12 DEBUG results - Extracted JDBC value [0] - [32]
2025-04-21 17:14:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 32
2025-04-21 17:14:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#32] : 1893679609
2025-04-21 17:14:12 DEBUG results - Extracted JDBC value [1] - [---@gmail.com]
2025-04-21 17:14:12 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 17:14:12 DEBUG results - Extracted JDBC value [3] - [S S]
2025-04-21 17:14:12 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 17:14:12 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:14:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#32
2025-04-21 17:14:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64a7ad02
2025-04-21 17:14:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:14:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:14:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:14:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:14:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:14:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:14:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:14:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:14:48 INFO  StaffMenuUI - New guest user created successfully: ---@gmail.com
2025-04-21 17:14:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:14:48 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1819508699 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:14:48 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 830929141
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1772339008
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 745740822
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 708058685
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 172871390
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 2128619880
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1249328904
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1085805965
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 619120762
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1538514663
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 676275686
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 17:14:48 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:14:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 17:14:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@467cd4b9
2025-04-21 17:14:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:14:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:14:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:14:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:14:50 WARN  StaffMenuUI - Operation canceled, the room you've selected might have booked by other already.
2025-04-21 17:14:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:15:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:15:19 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Book a Room
2025-04-21 17:15:19 INFO  StaffMenuUI - Booking room for a user.
2025-04-21 17:15:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:15:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:15:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:15:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:15:38 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@677071135 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:15:38 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [32]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 32
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#32] : 550764532
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [---@gmail.com]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [S S]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#32
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52325940
2025-04-21 17:15:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:15:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:15:38 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:15:38 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@2138645808 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:15:38 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1710518520
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 881300604
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1998741793
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 823635085
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1980528509
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 2124429748
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 451900456
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 370196540
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 53672476
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 2082475607
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 487553999
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 17:15:38 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:15:38 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 17:15:38 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531299d3
2025-04-21 17:15:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:15:38 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:15:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:15:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:15:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:15:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:16:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:16:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:16:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:16:17 ERROR StaffMenuUI - Failed to create booking: createBooking returned null.
2025-04-21 17:16:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:16:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:16:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:16:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:16:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:16:47 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-21 17:16:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:16:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:16:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:16:51 INFO  StaffMenuUI - Cancellation process started for Booking ID: 6
2025-04-21 17:16:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:16:51 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@219040114 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@427339989 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1700153115 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:16:51 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:16:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:16:51 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:16:51 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@2019937411 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1555521648 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@860285190 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:16:51 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:16:51 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:16:51 INFO  InvoiceServiceImpl - No booking found for ID: 6
2025-04-21 17:16:54 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-21 17:16:56 INFO  StaffMenuUI - Cancellation process started for Booking ID: 859
2025-04-21 17:16:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:16:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1967017653 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1899272141 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1664191318 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:16:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:16:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:16:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:16:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1266035080 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@619864203 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@313124964 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:16:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:16:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:16:56 INFO  InvoiceServiceImpl - No booking found for ID: 859
2025-04-21 17:17:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:17:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:17:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:17:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:17:34 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Check Guest Details
2025-04-21 17:17:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:17:39 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@187571699 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:17:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 779639592
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 17:17:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55c20a91
2025-04-21 17:17:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:17:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:17:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:17:39 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@1244993277 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:17:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 305646302
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 17:17:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70d7a49b
2025-04-21 17:17:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:17:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:17:39 DEBUG results - Initializer list:
	  org.example.entity.Booking(b).room -> EntitySelectFetchInitializer(org.example.entity.Booking(b).room)@4524471 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)
	  org.example.entity.Booking(b).user -> EntitySelectFetchInitializer(org.example.entity.Booking(b).user)@1911619650 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking(b) -> EntityResultInitializer(org.example.entity.Booking(b))@1572619672 (SingleTableEntityPersister(org.example.entity.Booking))

2025-04-21 17:17:39 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,b1_0.status,b1_0.user_id from bookings b1_0 where b1_0.user_id=? order by b1_0.check_in desc fetch first ? rows only
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [0] - [67]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 67
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#67] : 1093181064
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#3) : 3
2025-04-21 17:17:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:17:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@2122810288 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:17:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 1443621056
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 17:17:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14d36bb2
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#3] : 3 has being loaded by session.internalLoad.
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).user#13) : 13
2025-04-21 17:17:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:17:39 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@4400200 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:17:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1108811877
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 17:17:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b6f3d0b
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).user#13] : 13 has being loaded by session.internalLoad.
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#67
2025-04-21 17:17:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8e77c5b
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [0] - [68]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 68
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#68] : 2003448677
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [3] - [4]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#4) : 4
2025-04-21 17:17:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:17:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@201662949 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:17:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 4
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#4] : 1002541036
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#4
2025-04-21 17:17:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1eee9b78
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#4] : 4 has being loaded by session.internalLoad.
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [1] - [2025-04-21T12:00:39]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [2] - [2030-10-12T12:00:39]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#68
2025-04-21 17:17:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8e77c5b
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [0] - [65]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking(b)): 65
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking(b)#65] : 913711668
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [3] - [2]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Found existing loading entry [org.example.entity.Booking(b).user#13] - using loading instance
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.example.entity.Booking(b).room#2) : 2
2025-04-21 17:17:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:17:39 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@419394876 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:17:39 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1120514542
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 17:17:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@217c6a1e
2025-04-21 17:17:39 DEBUG entity - (EntitySelectFetchInitializer) Entity [org.example.entity.Booking(b).room#2] : 2 has being loaded by session.internalLoad.
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [1] - [2025-04-18T11:00]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [2] - [2025-04-20T10:00]
2025-04-21 17:17:39 DEBUG results - Extracted JDBC value [4] - [CONFIRMED]
2025-04-21 17:17:39 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking(b)#65
2025-04-21 17:17:39 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8e77c5b
2025-04-21 17:17:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:17:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:17:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:17:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:17:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:17:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:18:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:18:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:18:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:18:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:18:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:18:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:18:20 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-21 17:18:20 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-21 17:18:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:23 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1068336694 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@812448650 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1067809448 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:18:23 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:18:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 67
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 3
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#3] : 2036555904
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1837573438
2025-04-21 17:18:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#67] : 1311880781
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#3
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:18:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#67
2025-04-21 17:18:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b561f51
2025-04-21 17:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:18:23 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1029638356 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1648869516)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@989504415 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@2071663688 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1580467617)

2025-04-21 17:18:23 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [0] - [39]
2025-04-21 17:18:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 39
2025-04-21 17:18:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#39] : 1243165922
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [2] - [67]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [1] - [14000.0]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [3] - [2025-04-21T15:18:29.657769]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-21 17:18:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#39
2025-04-21 17:18:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6963b0bd
2025-04-21 17:18:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:23 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1755926104 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1232343668 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1246335388 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:18:23 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:18:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 67
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 3
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#3] : 1974219375
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1936689207
2025-04-21 17:18:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#67] : 341985996
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#3
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:18:23 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:18:23 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:18:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#67
2025-04-21 17:18:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b6e4761
2025-04-21 17:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:18:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:18:46 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Cancel Booking
2025-04-21 17:18:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:18:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:18:52 INFO  StaffMenuUI - Cancellation process started for Booking ID: 67
2025-04-21 17:18:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:52 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1717080658 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1722351469 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@448512468 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:18:52 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:18:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 67
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 3
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#3] : 1260431905
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 256993264
2025-04-21 17:18:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#67] : 308332638
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#3
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:18:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#67
2025-04-21 17:18:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b576ff8
2025-04-21 17:18:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:52 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@636002577 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@553790651 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@892609277 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:18:52 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:18:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 67
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 3
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#3] : 891020651
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 556534527
2025-04-21 17:18:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#67] : 561514757
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#3
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:18:52 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:18:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#67
2025-04-21 17:18:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@47666b39
2025-04-21 17:18:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:52 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:18:52 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@767356419 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1648869516)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@1820750521 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@232226317 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1580467617)

2025-04-21 17:18:52 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [0] - [39]
2025-04-21 17:18:52 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 39
2025-04-21 17:18:52 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#39] : 1825991051
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [2] - [67]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [1] - [14000.0]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [3] - [2025-04-21T15:18:29.657769]
2025-04-21 17:18:52 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-21 17:18:52 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#39
2025-04-21 17:18:52 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ac7550a
2025-04-21 17:18:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1155317988 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@555019034 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@2119255170 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:18:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 67
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 3
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#3] : 988637485
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1324113830
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#67] : 559389493
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#3
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#67
2025-04-21 17:18:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25b83dce
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1959627861 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@1483799557 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1172527629 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:18:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 67
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 3
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#3] : 1722389892
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 960858222
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#67] : 309747389
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#3
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#67
2025-04-21 17:18:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dac0784
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:18:56 DEBUG TransactionImpl - begin
2025-04-21 17:18:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:56 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@922985472 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@571497590 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@36924735 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:18:56 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 67
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 3
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#3] : 1963218853
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1816626863
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#67] : 1707510247
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [5] - [false]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#3
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:18:56 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [9] - [CONFIRMED]
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#67
2025-04-21 17:18:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a6a2c20
2025-04-21 17:18:56 DEBUG TransactionImpl - committing
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:18:56 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:18:56 DEBUG EntityPrinter - org.example.entity.Booking{checkIn=2025-04-21T15:18, checkOut=2025-04-23T10:00, user=org.example.entity.User#13, bookingId=67, room=org.example.entity.Room#3, status=CANCELLED}
2025-04-21 17:18:56 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-21 17:18:56 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=103, price=7000.0, roomID=3, roomType=SUITE}
2025-04-21 17:18:56 DEBUG SQL - update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 INFO  StaffMenuUI - Booking ID: 67 successfully canceled
2025-04-21 17:18:56 INFO  StaffMenuUI - Attempting to update room availability. Room ID: 3, Availability: true
2025-04-21 17:18:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@229014598 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:18:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 2098066214
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 17:18:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43f7f48d
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 INFO  RoomServiceImpl - Fetched room with ID 3: Optional[Room{roomID=3, roomNumber=103, roomType=SUITE, price=7000.0, isAvailable=false}]
2025-04-21 17:18:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1829390882 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:18:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 1999666001
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 17:18:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48d464cf
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:18:56 DEBUG TransactionImpl - begin
2025-04-21 17:18:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:56 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@504672873 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:18:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 3
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#3] : 2010366935
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#3
2025-04-21 17:18:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4cefa0be
2025-04-21 17:18:56 DEBUG TransactionImpl - committing
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:18:56 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:18:56 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=103, price=7000.0, roomID=3, roomType=SUITE}
2025-04-21 17:18:56 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 INFO  RoomDaoImpl - Room updated successfully: Room{roomID=3, roomNumber=103, roomType=SUITE, price=7000.0, isAvailable=true}
2025-04-21 17:18:56 INFO  RoomServiceImpl - Room updated successfully: Room{roomID=3, roomNumber=103, roomType=SUITE, price=7000.0, isAvailable=true}
2025-04-21 17:18:56 INFO  StaffMenuUI - Room ID: 3 availability successfully updated to: true
2025-04-21 17:18:56 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:18:56 DEBUG TransactionImpl - begin
2025-04-21 17:18:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:18:56 DEBUG results - Initializer list:
	  org.example.entity.Invoice.booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice.booking)@1213257323 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1580467617)
	  org.example.entity.Invoice.user -> EntityDelayedFetchInitializer(org.example.entity.Invoice.user)@569670093 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1648869516)
	  org.example.entity.Invoice -> EntityResultInitializer(org.example.entity.Invoice)@271570717 (SingleTableEntityPersister(org.example.entity.Invoice))

2025-04-21 17:18:56 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.invoice_id=?
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice): 39
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice#39] : 1148535790
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [2] - [67]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [1] - [14000.0]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [3] - [2025-04-21T15:18:29.657769]
2025-04-21 17:18:56 DEBUG results - Extracted JDBC value [4] - [PENDING]
2025-04-21 17:18:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice#39
2025-04-21 17:18:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a0ce342
2025-04-21 17:18:56 DEBUG TransactionImpl - committing
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 17:18:56 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:18:56 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:18:56 DEBUG EntityPrinter - org.example.entity.Invoice{amount=14000.0, booking=<uninitialized>, invoiceId=39, issueDate=2025-04-21T15:18:29.657769, user=<uninitialized>, paymentStatus=CANCELED}
2025-04-21 17:18:56 DEBUG SQL - update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:18:56 INFO  StaffMenuUI - Room availability updated for Room ID: 3 and payment status set to CANCELED
2025-04-21 17:19:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:19:17 INFO  StaffMenuUI - User SHUBHAM LANKE selected: Generate Invoices
2025-04-21 17:19:17 INFO  StaffMenuUI - Generating invoice by booking ID.
2025-04-21 17:19:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:19:19 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@750529970 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@770272954 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1056511221 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:19:19 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:19:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 67
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 3
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#3] : 1250344449
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1018053912
2025-04-21 17:19:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#67] : 1516588549
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#3
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-21 17:19:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#67
2025-04-21 17:19:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@121dac1a
2025-04-21 17:19:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:19:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:19:19 DEBUG results - Initializer list:
	  org.example.entity.Invoice(i).user -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).user)@1838444270 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.user])@1648869516)
	  org.example.entity.Invoice(i) -> EntityResultInitializer(org.example.entity.Invoice(i))@601649345 (SingleTableEntityPersister(org.example.entity.Invoice))
	  org.example.entity.Invoice(i).booking -> EntityDelayedFetchInitializer(org.example.entity.Invoice(i).booking)@1404635097 (ToOneAttributeMapping(NavigableRole[org.example.entity.Invoice.booking])@1580467617)

2025-04-21 17:19:19 DEBUG SQL - select i1_0.invoice_id,i1_0.amount,i1_0.booking_id,i1_0.issue_date,i1_0.payment_status,i1_0.user_id from invoices i1_0 where i1_0.booking_id=?
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [0] - [39]
2025-04-21 17:19:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Invoice(i)): 39
2025-04-21 17:19:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Invoice(i)#39] : 571267668
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [2] - [67]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [5] - [13]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [1] - [14000.0]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [3] - [2025-04-21T15:18:29.657769]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [4] - [CANCELED]
2025-04-21 17:19:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Invoice(i)#39
2025-04-21 17:19:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39109603
2025-04-21 17:19:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:19:19 DEBUG results - Initializer list:
	  org.example.entity.Booking -> EntityResultInitializer(org.example.entity.Booking)@1295618213 (SingleTableEntityPersister(org.example.entity.Booking))
	  org.example.entity.Booking.user -> EntityJoinedFetchInitializer(org.example.entity.Booking.user)@417277601 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.user])@1309988128)
	  org.example.entity.Booking.room -> EntityJoinedFetchInitializer(org.example.entity.Booking.room)@1548063124 (ToOneAttributeMapping(NavigableRole[org.example.entity.Booking.room])@310192878)

2025-04-21 17:19:19 DEBUG SQL - select b1_0.booking_id,b1_0.check_in,b1_0.check_out,b1_0.room_id,r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type,b1_0.status,b1_0.user_id,u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from bookings b1_0 join rooms r1_0 on r1_0.room_id=b1_0.room_id join users u1_0 on u1_0.user_id=b1_0.user_id where b1_0.booking_id=?
2025-04-21 17:19:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Booking): 67
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [4] - [3]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.room): 3
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [3] - [3]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [11] - [13]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.example.entity.Booking.user): 13
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [10] - [13]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.room#3] : 32400436
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Created new entity instance [org.example.entity.Booking.user#13] : 1909951660
2025-04-21 17:19:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Booking#67] : 1427067435
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [5] - [true]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [6] - [7000.0]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [7] - [103]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [8] - [SUITE]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.room#3
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [12] - [saurav@gmail.com]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [13] - [true]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [14] - [SAURAV SHARMA]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [15] - [password]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [16] - [GUEST]
2025-04-21 17:19:19 DEBUG entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.example.entity.Booking.user#13
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [1] - [2025-04-21T15:18]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [2] - [2025-04-23T10:00]
2025-04-21 17:19:19 DEBUG results - Extracted JDBC value [9] - [CANCELLED]
2025-04-21 17:19:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Booking#67
2025-04-21 17:19:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1842dc39
2025-04-21 17:19:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:19:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:19:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:19:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:19:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:19:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:19:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:19:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:19:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:19:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:19:53 INFO  StaffMenuUI - User SHUBHAM LANKE is logging out
2025-04-21 17:19:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:19:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:20:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@60c939dd is alive
2025-04-21 17:20:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:20:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1786758337 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:20:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-21 17:20:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-21 17:20:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 110932276
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [3] - [Super Admin]
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-21 17:20:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-21 17:20:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@125124ea
2025-04-21 17:20:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:20:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:20:16 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:20:16 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@827092873 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:20:16 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-21 17:20:16 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 1
2025-04-21 17:20:16 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#1] : 1239291141
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [1] - [superadmin@dss.com]
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [3] - [Super Admin]
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:20:16 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-21 17:20:16 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#1
2025-04-21 17:20:16 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1bbc1b90
2025-04-21 17:20:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:20:16 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:20:16 INFO  HomeMenuUI - Login successful: Super Admin (SUPER_ADMIN)
2025-04-21 17:20:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:20:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:20:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:20:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:20:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:20:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:21:01 WARN  AdminMenuUI - Invalid menu input: For input string: "unhu"
2025-04-21 17:21:06 WARN  AdminMenuUI - Invalid menu input: For input string: "-"
2025-04-21 17:21:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:21:12 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@43924520 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:21:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 2035364310
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 986473968
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1508661771
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 692264801
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 16354559
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1505987317
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1648668612
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1397558522
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 522189848
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1515079980
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 489940782
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 648151726
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 17:21:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:21:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 17:21:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d7a8d23
2025-04-21 17:21:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:21:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:21:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:21:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:21:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:21:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:21:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:21:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:21:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:21:37 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1846735756 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:21:37 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 17:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1914962576
2025-04-21 17:21:37 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:21:37 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:21:37 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:21:37 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 17:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b5311cb
2025-04-21 17:21:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:21:37 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:21:37 DEBUG TransactionImpl - begin
2025-04-21 17:21:37 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:21:37 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@887742093 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:21:37 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:21:37 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 17:21:37 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1912920463
2025-04-21 17:21:37 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:21:37 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:21:37 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:21:37 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:21:37 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 17:21:37 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8636cf4
2025-04-21 17:21:37 DEBUG TransactionImpl - committing
2025-04-21 17:21:37 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:21:37 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:21:37 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 17:21:37 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:21:37 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:21:37 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-21 17:21:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:21:37 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:21:37 INFO  RoomDaoImpl - Room with ID 2 marked as under maintenance.
2025-04-21 17:21:37 INFO  RoomServiceImpl - Room with ID 2 marked as under maintenance.
2025-04-21 17:21:37 INFO  AdminMenuUI - Room 2 marked under maintenance.
2025-04-21 17:21:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:21:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1110dc8f is alive
2025-04-21 17:21:47 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@60c939dd: (connection has passed maxLifetime)
2025-04-21 17:21:47 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c0f6f2ea-6ff0-4870-925d-4fcd2161f0bc)
2025-04-21 17:21:47 DEBUG PoolBase - HikariPool-1 - Established new connection (c0f6f2ea-6ff0-4870-925d-4fcd2161f0bc)
2025-04-21 17:21:47 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5712aba4
2025-04-21 17:21:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:21:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:21:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1941a8ff is alive
2025-04-21 17:22:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5bc0fb2a is alive
2025-04-21 17:22:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:22:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:22:24 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1941a8ff: (connection has passed maxLifetime)
2025-04-21 17:22:24 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2ee6f874-cb1f-42fb-9327-5a9e7235585b)
2025-04-21 17:22:24 DEBUG PoolBase - HikariPool-1 - Established new connection (2ee6f874-cb1f-42fb-9327-5a9e7235585b)
2025-04-21 17:22:24 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@50e2153a
2025-04-21 17:22:25 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1110dc8f: (connection has passed maxLifetime)
2025-04-21 17:22:25 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5a766f27-1545-4f45-bf44-b793d6ed5597)
2025-04-21 17:22:25 DEBUG PoolBase - HikariPool-1 - Established new connection (5a766f27-1545-4f45-bf44-b793d6ed5597)
2025-04-21 17:22:25 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e25f156
2025-04-21 17:22:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:22:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:22:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:23:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:23:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@294805b7 is alive
2025-04-21 17:23:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51637f38 is alive
2025-04-21 17:23:18 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = false
2025-04-21 17:23:18 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 17:23:18 DEBUG create - Created new SQL alias : r1_0
2025-04-21 17:23:18 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 17:23:18 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 17:23:18 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 17:23:18 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 17:23:18 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:23:18 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1332064145 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:23:18 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=false
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [0] - [4]
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 4
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#4] : 1547248893
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [3] - [104]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#4
2025-04-21 17:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ec211cc
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [0] - [5]
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 5
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#5] : 1804911104
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [3] - [201]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#5
2025-04-21 17:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ec211cc
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 321041730
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-21 17:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ec211cc
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 1
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#1] : 111768855
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [3] - [101]
2025-04-21 17:23:18 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:23:18 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#1
2025-04-21 17:23:18 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3ec211cc
2025-04-21 17:23:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:23:18 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:23:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:23:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:23:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:23:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:23:25 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@1694636980 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:23:25 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:23:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 17:23:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 1555711823
2025-04-21 17:23:25 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:23:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:23:25 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:23:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:23:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 17:23:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@291028d7
2025-04-21 17:23:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:23:25 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:23:25 DEBUG TransactionImpl - begin
2025-04-21 17:23:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:23:25 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@726226084 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:23:25 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:23:25 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 17:23:25 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 604148185
2025-04-21 17:23:25 DEBUG results - Extracted JDBC value [1] - [false]
2025-04-21 17:23:25 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:23:25 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:23:25 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:23:25 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 17:23:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@450f0d89
2025-04-21 17:23:25 DEBUG TransactionImpl - committing
2025-04-21 17:23:25 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:23:25 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:23:25 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 17:23:25 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:23:25 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:23:25 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=true, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-21 17:23:25 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 17:23:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:23:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:23:25 INFO  RoomDaoImpl - Room with ID 2 marked as available.
2025-04-21 17:23:25 INFO  RoomServiceImpl - Room with ID 2 marked as available.
2025-04-21 17:23:25 INFO  AdminMenuUI - Room 2 marked as available.
2025-04-21 17:23:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2f33c870 is alive
2025-04-21 17:23:27 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@294805b7: (connection has passed maxLifetime)
2025-04-21 17:23:27 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (089066c8-afc4-4d90-945e-3b22d9550256)
2025-04-21 17:23:27 DEBUG PoolBase - HikariPool-1 - Established new connection (089066c8-afc4-4d90-945e-3b22d9550256)
2025-04-21 17:23:27 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@397064a9
2025-04-21 17:23:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:23:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:23:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:23:53 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5bc0fb2a: (connection has passed maxLifetime)
2025-04-21 17:23:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d3e599a8-1cb8-4277-8ac7-9669146e4859)
2025-04-21 17:23:53 DEBUG PoolBase - HikariPool-1 - Established new connection (d3e599a8-1cb8-4277-8ac7-9669146e4859)
2025-04-21 17:23:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@585c36de
2025-04-21 17:24:03 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@51637f38: (connection has passed maxLifetime)
2025-04-21 17:24:03 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e2bb5619-5091-4138-8fc5-7966b981ccf1)
2025-04-21 17:24:03 DEBUG PoolBase - HikariPool-1 - Established new connection (e2bb5619-5091-4138-8fc5-7966b981ccf1)
2025-04-21 17:24:03 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@48b1024b
2025-04-21 17:24:12 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:24:12 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@247461277 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:24:12 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 2
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#2] : 1241213245
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#2
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 89222885
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1734719138
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1975880178
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 115016870
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 150172894
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1114182596
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 465213538
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1159348615
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1448904830
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1545688642
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 320318508
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 68600240
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 17:24:12 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:24:12 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 17:24:12 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38197e82
2025-04-21 17:24:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:24:12 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:24:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:24:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@909878836 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:24:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:24:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 17:24:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 2089779261
2025-04-21 17:24:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:24:14 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:24:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:24:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 17:24:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@176e839e
2025-04-21 17:24:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:24:14 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:24:14 DEBUG TransactionImpl - begin
2025-04-21 17:24:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:24:14 DEBUG results - Initializer list:
	  org.example.entity.Room -> EntityResultInitializer(org.example.entity.Room)@78384457 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:24:14 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.room_id=?
2025-04-21 17:24:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room): 2
2025-04-21 17:24:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room#2] : 527783934
2025-04-21 17:24:14 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:24:14 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:24:14 DEBUG results - Extracted JDBC value [3] - [102]
2025-04-21 17:24:14 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:24:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room#2
2025-04-21 17:24:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7bd7d71c
2025-04-21 17:24:14 DEBUG TransactionImpl - committing
2025-04-21 17:24:14 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:24:14 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:24:14 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 17:24:14 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:24:14 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:24:14 DEBUG EntityPrinter - org.example.entity.Room{isAvailable=false, roomNumber=102, price=3500.0, roomID=2, roomType=DOUBLE}
2025-04-21 17:24:14 DEBUG SQL - update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 17:24:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:24:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:24:14 INFO  RoomDaoImpl - Room with ID 2 marked as under maintenance.
2025-04-21 17:24:14 INFO  RoomServiceImpl - Room with ID 2 marked as under maintenance.
2025-04-21 17:24:14 INFO  AdminMenuUI - Room 2 marked under maintenance.
2025-04-21 17:24:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:24:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:24:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:24:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:24:26 DEBUG hql - HQL : SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC
2025-04-21 17:24:26 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:24:26 ERROR BookingDaoImpl - Error occurred while fetching all bookings
java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:890) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:215) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getAllBookings(BookingDaoImpl.java:111) [classes/:?]
	at org.example.service.BookingServiceImpl.getAllBookings(BookingServiceImpl.java:84) [classes/:?]
	at org.example.controller.BookingController.getAllBookings(BookingController.java:79) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.viewAllBookings(AdminMenuUI.java:264) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displaySuperAdminMenu(AdminMenuUI.java:67) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:106) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:192) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:270) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:106) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5262) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5211) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5186) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4719) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:5177) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4514) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2268) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2212) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:2025) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:2004) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1235) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1032) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1017) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2003) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:487) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:446) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:319) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-21 17:24:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@e6c692 is alive
2025-04-21 17:24:45 DEBUG hql - HQL : FROM User WHERE userRole = 'STAFF'
2025-04-21 17:24:45 DEBUG hql - Unable to resolve unqualified attribute [userRole] in local from-clause
2025-04-21 17:24:45 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(27155048655300)`
            <- [root] - `org.example.entity.User(27155048655300)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(27155048655300)`
          <- [root] - `org.example.entity.User(27155048655300)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(27155048655300).userRole`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 17:24:45 DEBUG create - Created new SQL alias : u1_0
2025-04-21 17:24:45 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(27155048655300))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 17:24:45 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(27155048655300).userRole) 
2025-04-21 17:24:45 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(27155048655300)]
 |  +-BasicFetch [org.example.entity.User(27155048655300).email]
 |  +-BasicFetch [org.example.entity.User(27155048655300).isActive]
 |  +-BasicFetch [org.example.entity.User(27155048655300).name]
 |  +-BasicFetch [org.example.entity.User(27155048655300).password]
 |  \-BasicFetch [org.example.entity.User(27155048655300).userRole]

2025-04-21 17:24:45 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(27155048655300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 17:24:45 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:24:45 DEBUG results - Initializer list:
	  org.example.entity.User(27155048655300) -> EntityResultInitializer(org.example.entity.User(27155048655300))@1149922560 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:24:45 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-21 17:24:45 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:24:45 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 8
2025-04-21 17:24:45 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#8] : 450706947
2025-04-21 17:24:45 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 17:24:45 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:24:45 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 17:24:45 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:24:45 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:24:45 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#8
2025-04-21 17:24:45 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d28a235
2025-04-21 17:24:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:24:45 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:24:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:24:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:24:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:24:56 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2f33c870: (connection has passed maxLifetime)
2025-04-21 17:24:56 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2f14ac4e-bc74-4796-aed8-6b9168c7a132)
2025-04-21 17:24:56 DEBUG PoolBase - HikariPool-1 - Established new connection (2f14ac4e-bc74-4796-aed8-6b9168c7a132)
2025-04-21 17:24:56 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e7247bb
2025-04-21 17:25:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:25:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:25:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:25:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:25:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:25:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:25:31 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1138954005 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:25:31 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:25:31 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:25:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 8
2025-04-21 17:25:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#8] : 1953342799
2025-04-21 17:25:31 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 17:25:31 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:25:31 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 17:25:31 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:25:31 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:25:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#8
2025-04-21 17:25:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2f2d8770
2025-04-21 17:25:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:25:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:25:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:25:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:25:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:25:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:26:07 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:26:07 DEBUG TransactionImpl - begin
2025-04-21 17:26:07 DEBUG create - Created new SQL alias : u1_0
2025-04-21 17:26:07 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 17:26:07 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 17:26:07 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 17:26:07 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 17:26:07 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@753282599 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:26:07 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 17:26:07 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 8
2025-04-21 17:26:07 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#8] : 1871689990
2025-04-21 17:26:07 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 17:26:07 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:26:07 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 17:26:07 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:26:07 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:26:07 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#8
2025-04-21 17:26:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@728535c6
2025-04-21 17:26:07 DEBUG TransactionImpl - committing
2025-04-21 17:26:07 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:26:07 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:26:07 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 17:26:07 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:26:07 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:26:07 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SHUBHAM LANKE, isActive=true, userRole=STAFF, userID=8, email=shubhamlanke@gmail.com}
2025-04-21 17:26:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:26:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:26:07 INFO  AdminMenuUI - Staff registration approved: shubhamlanke@gmail.com
2025-04-21 17:26:17 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@e6c692: (connection has passed maxLifetime)
2025-04-21 17:26:17 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (124be75a-6a8d-46d1-89a7-4d1f1485ee5a)
2025-04-21 17:26:17 DEBUG PoolBase - HikariPool-1 - Established new connection (124be75a-6a8d-46d1-89a7-4d1f1485ee5a)
2025-04-21 17:26:17 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@67246683
2025-04-21 17:26:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:26:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:26:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:26:21 WARN  UserMenuUI - Invalid name format entered: sauravsharma@gmail.com
2025-04-21 17:26:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:26:26 WARN  UserMenuUI - Invalid name format entered: 2
2025-04-21 17:26:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:26:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:26:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@51081dfc is alive
2025-04-21 17:26:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:26:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:27:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:27:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:27:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:27:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:27:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:27:25 DEBUG results - Initializer list is empty
2025-04-21 17:27:25 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-21 17:27:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@51aa2a58
2025-04-21 17:27:25 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-21 17:27:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:25 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:27:25 DEBUG results - Initializer list is empty
2025-04-21 17:27:25 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-21 17:27:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@51aa2a58
2025-04-21 17:27:25 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-21 17:27:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:25 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:27:25 DEBUG TransactionImpl - begin
2025-04-21 17:27:25 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 17:27:25 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 17:27:25 DEBUG results - Initializer list is empty
2025-04-21 17:27:25 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3065efd0
2025-04-21 17:27:25 DEBUG results - Extracted JDBC value [0] - [33]
2025-04-21 17:27:25 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@7aaf6bfd
2025-04-21 17:27:25 DEBUG TransactionImpl - committing
2025-04-21 17:27:25 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 17:27:25 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 17:27:25 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 17:27:25 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 17:27:25 DEBUG EntityPrinter - Listing entities:
2025-04-21 17:27:25 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SAURAV V SHARMA, isActive=false, userRole=SUPER_ADMIN, userID=33, email=sauravsharma@gmail.com}
2025-04-21 17:27:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:25 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:25 INFO  UserDaoImpl - User registered successfully: User{userID=33, name='SAURAV V SHARMA', email='sauravsharma@gmail.com', password='!Q1q', userRole=SUPER_ADMIN, isActive=false}
2025-04-21 17:27:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:27:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:27:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:27:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:27:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:27:57 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1250685404 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:27:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [0] - [33]
2025-04-21 17:27:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 33
2025-04-21 17:27:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#33] : 2136962865
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [1] - [sauravsharma@gmail.com]
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [3] - [SAURAV V SHARMA]
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-21 17:27:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#33
2025-04-21 17:27:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a4f7c17
2025-04-21 17:27:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:57 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:27:57 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1481617469 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:27:57 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [0] - [33]
2025-04-21 17:27:57 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 33
2025-04-21 17:27:57 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#33] : 1139794020
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [1] - [sauravsharma@gmail.com]
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [3] - [SAURAV V SHARMA]
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 17:27:57 DEBUG results - Extracted JDBC value [5] - [SUPER_ADMIN]
2025-04-21 17:27:57 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#33
2025-04-21 17:27:57 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@66046e7c
2025-04-21 17:27:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:57 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:27:57 INFO  HomeMenuUI - Login successful: SAURAV V SHARMA (SUPER_ADMIN)
2025-04-21 17:28:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:28:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:28:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:28:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:28:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:28:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@25cba300 is alive
2025-04-21 17:28:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:28:29 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@51081dfc: (connection has passed maxLifetime)
2025-04-21 17:28:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b4b3fd6c-901b-4698-831f-3d18474f618c)
2025-04-21 17:28:29 DEBUG PoolBase - HikariPool-1 - Established new connection (b4b3fd6c-901b-4698-831f-3d18474f618c)
2025-04-21 17:28:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@31706169
2025-04-21 17:28:33 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@25cba300: (connection has passed maxLifetime)
2025-04-21 17:28:33 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (648e511a-f38d-490b-8a1a-164955e3b0a0)
2025-04-21 17:28:33 DEBUG PoolBase - HikariPool-1 - Established new connection (648e511a-f38d-490b-8a1a-164955e3b0a0)
2025-04-21 17:28:33 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3fb78937
2025-04-21 17:28:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:28:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:28:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:28:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:29:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:29:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:29:31 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:29:31 DEBUG results - Initializer list:
	  org.example.entity.User(27155048655300) -> EntityResultInitializer(org.example.entity.User(27155048655300))@745172195 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:29:31 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [0] - [33]
2025-04-21 17:29:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 33
2025-04-21 17:29:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#33] : 193502390
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [1] - [sauravsharma@gmail.com]
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [3] - [SAURAV V SHARMA]
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:29:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#33
2025-04-21 17:29:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74faf450
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:29:31 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 8
2025-04-21 17:29:31 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#8] : 1422097835
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:29:31 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:29:31 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#8
2025-04-21 17:29:31 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74faf450
2025-04-21 17:29:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:29:31 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:29:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:29:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:29:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:29:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:30:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:30:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:30:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:30:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:30:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:30:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:30:19 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:30:19 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1224760772 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 17:30:19 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1790453435
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 922931437
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1534790362
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1885172464
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1011753918
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 493488482
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 516226511
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 85317141
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1217087194
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 99055536
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 1014290502
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 402265251
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 17:30:19 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 17:30:19 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 17:30:19 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@219db855
2025-04-21 17:30:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:30:19 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:30:19 INFO  AdminMenuUI - Displayed 12 available rooms.
2025-04-21 17:30:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:30:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:30:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:30:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:30:23 DEBUG results - Initializer list:
	  org.example.entity.User(27155048655300) -> EntityResultInitializer(org.example.entity.User(27155048655300))@993104125 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:30:23 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-21 17:30:23 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:30:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 8
2025-04-21 17:30:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#8] : 1251218116
2025-04-21 17:30:23 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 17:30:23 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:30:23 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 17:30:23 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:30:23 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:30:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#8
2025-04-21 17:30:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d15c513
2025-04-21 17:30:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:30:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:30:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:30:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:30:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:31:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:31:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:31:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:31:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:31:35 INFO  AdminMenuUI - Fetching all admin users.
2025-04-21 17:31:35 DEBUG hql - HQL : FROM User WHERE userRole = 'ADMIN'
2025-04-21 17:31:35 DEBUG hql - Unable to resolve unqualified attribute [userRole] in local from-clause
2025-04-21 17:31:35 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(27564580087900)`
            <- [root] - `org.example.entity.User(27564580087900)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(27564580087900)`
          <- [root] - `org.example.entity.User(27564580087900)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(27564580087900).userRole`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 17:31:35 DEBUG create - Created new SQL alias : u1_0
2025-04-21 17:31:35 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(27564580087900))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 17:31:35 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(27564580087900).userRole) 
2025-04-21 17:31:35 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(27564580087900)]
 |  +-BasicFetch [org.example.entity.User(27564580087900).email]
 |  +-BasicFetch [org.example.entity.User(27564580087900).isActive]
 |  +-BasicFetch [org.example.entity.User(27564580087900).name]
 |  +-BasicFetch [org.example.entity.User(27564580087900).password]
 |  \-BasicFetch [org.example.entity.User(27564580087900).userRole]

2025-04-21 17:31:35 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(27564580087900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 17:31:35 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:31:35 DEBUG results - Initializer list:
	  org.example.entity.User(27564580087900) -> EntityResultInitializer(org.example.entity.User(27564580087900))@2025082827 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:31:35 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='ADMIN'
2025-04-21 17:31:35 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-21 17:31:35 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27564580087900)): 2
2025-04-21 17:31:35 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27564580087900)#2] : 75938986
2025-04-21 17:31:35 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-21 17:31:35 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:31:35 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-21 17:31:35 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:31:35 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-21 17:31:35 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27564580087900)#2
2025-04-21 17:31:35 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e9671e6
2025-04-21 17:31:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:31:35 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:31:35 DEBUG AdminMenuUI - Admin found: ID=2 Name=ADMIN Email=admin@dss.com Role=ADMIN Active=true
2025-04-21 17:31:35 INFO  AdminMenuUI - Total admins found: 1
2025-04-21 17:31:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:31:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:31:44 DEBUG results - Initializer list:
	  org.example.entity.User(27155048655300) -> EntityResultInitializer(org.example.entity.User(27155048655300))@2127092492 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:31:44 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-21 17:31:44 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:31:44 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 8
2025-04-21 17:31:44 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#8] : 1574103562
2025-04-21 17:31:44 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 17:31:44 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:31:44 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 17:31:44 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:31:44 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:31:44 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#8
2025-04-21 17:31:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65fa4a07
2025-04-21 17:31:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:31:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:31:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:31:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:31:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:31:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:31:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:31:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:31:59 DEBUG results - Initializer list:
	  org.example.entity.User(27155048655300) -> EntityResultInitializer(org.example.entity.User(27155048655300))@2015445992 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:31:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 17:31:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 8
2025-04-21 17:31:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#8] : 1461595925
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:31:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#8
2025-04-21 17:31:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2552181d
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [0] - [33]
2025-04-21 17:31:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 33
2025-04-21 17:31:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#33] : 1373240624
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [1] - [sauravsharma@gmail.com]
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [3] - [SAURAV V SHARMA]
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 17:31:59 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 17:31:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#33
2025-04-21 17:31:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2552181d
2025-04-21 17:31:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:31:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:32:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:32:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:32:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:32:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:32:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:32:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:32:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:32:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:33:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:33:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:33:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:33:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:33:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:33:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:33:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:33:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:33:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:33:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:33:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:34:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:34:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:34:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:34:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:34:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:34:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:34:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:35:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:35:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:35:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:35:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:35:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:35:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:35:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:35:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:35:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:35:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:35:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:36:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:36:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:36:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:36:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:36:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:36:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:36:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:36:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:36:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:36:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:36:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:36:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:37:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:37:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:37:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:37:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:37:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:37:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:37:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:38:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:38:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:38:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:38:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:38:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:38:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:38:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:38:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:38:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:38:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:38:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:39:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:39:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:39:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:39:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:39:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:39:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:39:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:39:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:39:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:39:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:40:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:40:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:40:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:40:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:40:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:40:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:40:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:40:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:41:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:41:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:41:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:41:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:41:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:41:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:41:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:41:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:41:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:41:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:41:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:42:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:42:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:42:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:42:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:42:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:42:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:42:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:43:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:43:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:43:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:43:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:43:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:43:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:43:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:43:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:43:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:43:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:43:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:44:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:44:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:44:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:44:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:44:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:44:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:44:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:44:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:44:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:44:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:45:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@397064a9 is alive
2025-04-21 17:45:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5712aba4 is alive
2025-04-21 17:45:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:45:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:45:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:45:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:45:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:45:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:45:53 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5712aba4: (connection has passed maxLifetime)
2025-04-21 17:45:53 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f9636709-ba1f-4b05-adc5-232783016a79)
2025-04-21 17:45:53 DEBUG PoolBase - HikariPool-1 - Established new connection (f9636709-ba1f-4b05-adc5-232783016a79)
2025-04-21 17:45:53 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1793164d
2025-04-21 17:45:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:46:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:46:08 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@397064a9: (connection has passed maxLifetime)
2025-04-21 17:46:08 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d779c5e6-209f-4295-bb68-a2c8a9184a70)
2025-04-21 17:46:08 DEBUG PoolBase - HikariPool-1 - Established new connection (d779c5e6-209f-4295-bb68-a2c8a9184a70)
2025-04-21 17:46:08 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b5ff375
2025-04-21 17:46:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:46:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:46:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:46:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:46:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:46:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:46:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:46:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:46:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:47:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:47:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:47:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:47:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 17:47:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:47:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:47:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 17:47:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:47:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@50e2153a is alive
2025-04-21 17:47:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:48:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:48:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:48:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:48:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:48:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:48:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e7247bb is alive
2025-04-21 17:48:44 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@50e2153a: (connection has passed maxLifetime)
2025-04-21 17:48:44 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (930d5721-7226-4963-81d8-a2d93965ea14)
2025-04-21 17:48:44 DEBUG PoolBase - HikariPool-1 - Established new connection (930d5721-7226-4963-81d8-a2d93965ea14)
2025-04-21 17:48:44 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2681b8a7
2025-04-21 17:48:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:48:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:49:08 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2e7247bb: (connection has passed maxLifetime)
2025-04-21 17:49:08 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (c9d16777-621b-4532-af24-5ec322246c62)
2025-04-21 17:49:08 DEBUG PoolBase - HikariPool-1 - Established new connection (c9d16777-621b-4532-af24-5ec322246c62)
2025-04-21 17:49:08 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@30bacb87
2025-04-21 17:49:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:49:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:49:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:49:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 17:49:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@585c36de is alive
2025-04-21 17:49:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:49:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:49:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:49:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 17:49:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:49:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:50:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5e25f156 is alive
2025-04-21 17:50:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:50:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:50:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 17:50:40 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@585c36de: (connection has passed maxLifetime)
2025-04-21 17:50:40 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8e1e0665-33b3-4029-b7fa-09e1ca5b502d)
2025-04-21 17:50:40 DEBUG PoolBase - HikariPool-1 - Established new connection (8e1e0665-33b3-4029-b7fa-09e1ca5b502d)
2025-04-21 17:50:40 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1a0fb95e
2025-04-21 17:50:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 17:50:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:50:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:51:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:51:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 17:51:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3fb78937 is alive
2025-04-21 17:51:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:51:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:51:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@31706169 is alive
2025-04-21 17:51:26 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3fb78937: (connection has passed maxLifetime)
2025-04-21 17:51:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (d326588c-3d19-4598-a4e3-db64c94412eb)
2025-04-21 17:51:26 DEBUG PoolBase - HikariPool-1 - Established new connection (d326588c-3d19-4598-a4e3-db64c94412eb)
2025-04-21 17:51:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@537bea7f
2025-04-21 17:51:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@48b1024b is alive
2025-04-21 17:51:33 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5e25f156: (connection has passed maxLifetime)
2025-04-21 17:51:33 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (50ca7923-0666-4569-862a-ab1f2759b152)
2025-04-21 17:51:33 DEBUG PoolBase - HikariPool-1 - Established new connection (50ca7923-0666-4569-862a-ab1f2759b152)
2025-04-21 17:51:33 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34ee0f39
2025-04-21 17:51:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 17:51:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:51:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:52:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:52:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:52:26 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@31706169: (connection has passed maxLifetime)
2025-04-21 17:52:26 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (a53cfc4d-c7cc-44c8-ba14-0f1180dba13c)
2025-04-21 17:52:26 DEBUG PoolBase - HikariPool-1 - Established new connection (a53cfc4d-c7cc-44c8-ba14-0f1180dba13c)
2025-04-21 17:52:26 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d7c216b
2025-04-21 17:52:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 17:52:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 17:52:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 17:52:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:52:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:52:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 17:52:59 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@48b1024b: (connection has passed maxLifetime)
2025-04-21 17:52:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (13baa533-f867-4c10-a067-16edc35fd4e0)
2025-04-21 17:52:59 DEBUG PoolBase - HikariPool-1 - Established new connection (13baa533-f867-4c10-a067-16edc35fd4e0)
2025-04-21 17:52:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@10843177
2025-04-21 17:53:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@67246683 is alive
2025-04-21 17:53:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 17:53:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 17:53:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:53:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:53:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 17:53:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:53:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:54:01 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@67246683: (connection has passed maxLifetime)
2025-04-21 17:54:01 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0a2ebe4b-49a8-42ca-80b0-b4d835b787b0)
2025-04-21 17:54:01 DEBUG PoolBase - HikariPool-1 - Established new connection (0a2ebe4b-49a8-42ca-80b0-b4d835b787b0)
2025-04-21 17:54:01 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@69d47c9c
2025-04-21 17:54:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 17:54:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 17:54:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 17:54:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:54:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:54:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 17:54:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 17:54:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 17:54:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 17:54:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:54:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:55:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 17:55:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:55:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:55:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 17:55:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 17:55:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:55:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:55:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 17:56:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 17:56:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 17:56:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 17:56:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 17:56:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:56:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:56:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 17:56:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 17:56:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 17:56:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:56:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:57:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:57:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:57:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 17:57:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 17:57:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 17:57:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:57:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:57:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 17:57:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 17:58:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 17:58:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 17:58:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 17:58:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:58:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:58:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 17:58:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 17:58:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:58:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:59:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 17:59:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:59:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 17:59:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 17:59:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:59:23 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@780027008 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:59:23 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-21 17:59:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-21 17:59:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 590842329
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-21 17:59:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-21 17:59:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7f31937b
2025-04-21 17:59:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:59:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:59:23 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 17:59:23 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@49609752 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 17:59:23 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [0] - [2]
2025-04-21 17:59:23 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 2
2025-04-21 17:59:23 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#2] : 490261982
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [1] - [admin@dss.com]
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [3] - [ADMIN]
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 17:59:23 DEBUG results - Extracted JDBC value [5] - [ADMIN]
2025-04-21 17:59:23 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#2
2025-04-21 17:59:23 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3809f65d
2025-04-21 17:59:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:59:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 17:59:23 INFO  HomeMenuUI - Login successful: ADMIN (ADMIN)
2025-04-21 17:59:35 DEBUG hql - HQL : SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC
2025-04-21 17:59:35 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 17:59:35 ERROR BookingDaoImpl - Error occurred while fetching all bookings
java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:890) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:215) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.BookingDaoImpl.getAllBookings(BookingDaoImpl.java:111) [classes/:?]
	at org.example.service.BookingServiceImpl.getAllBookings(BookingServiceImpl.java:84) [classes/:?]
	at org.example.controller.BookingController.getAllBookings(BookingController.java:79) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.viewAllBookings(AdminMenuUI.java:264) [classes/:?]
	at org.example.consoleinterface.AdminMenuUI.displayAdminMenu(AdminMenuUI.java:216) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:105) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking' [SELECT b FROM Booking b JOIN FETCH b.user JOIN FETCH b.room JOIN FETCH b.invoice ORDER BY b.checkIn DESC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'invoice' of 'org.example.entity.Booking'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.createJoin(QualifiedJoinPathConsumer.java:192) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer$AttributeJoinDelegate.consumeIdentifier(QualifiedJoinPathConsumer.java:270) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.QualifiedJoinPathConsumer.consumeIdentifier(QualifiedJoinPathConsumer.java:106) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5262) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5211) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5186) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$GeneralPathFragmentContext.accept(HqlParser.java:4719) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:5177) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitPath(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$PathContext.accept(HqlParser.java:4514) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.getJoin(SemanticQueryBuilder.java:2268) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeJoin(SemanticQueryBuilder.java:2212) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitEntityWithJoins(SemanticQueryBuilder.java:2025) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitFromClause(SemanticQueryBuilder.java:2004) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1235) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1032) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1017) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:274) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2003) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:487) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:446) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:319) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:831) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:882) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	... 9 more
2025-04-21 17:59:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 17:59:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 17:59:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 17:59:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 17:59:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 17:59:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:00:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:00:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:00:11 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:00:11 DEBUG results - Initializer list:
	  org.example.entity.User(27155048655300) -> EntityResultInitializer(org.example.entity.User(27155048655300))@1299788688 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:00:11 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-21 18:00:11 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 18:00:11 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 8
2025-04-21 18:00:11 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#8] : 664701888
2025-04-21 18:00:11 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 18:00:11 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 18:00:11 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 18:00:11 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 18:00:11 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 18:00:11 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#8
2025-04-21 18:00:11 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23ffc910
2025-04-21 18:00:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:00:11 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:00:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:00:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:00:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:00:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:00:28 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:00:28 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@891780204 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 18:00:28 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1959784828
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 848019559
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 864006565
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 951116455
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 970777311
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 1436082162
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 153820122
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1472186938
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1483280222
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1268591854
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 439946124
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 863956203
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 18:00:28 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 18:00:28 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 18:00:28 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7a053795
2025-04-21 18:00:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:00:28 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:00:28 INFO  AdminMenuUI - Displayed 12 available rooms.
2025-04-21 18:00:32 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:00:32 DEBUG results - Initializer list:
	  org.example.entity.User(27155048655300) -> EntityResultInitializer(org.example.entity.User(27155048655300))@595396133 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:00:32 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_role='STAFF'
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 18:00:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 8
2025-04-21 18:00:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#8] : 391056646
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [1] - [shubhamlanke@gmail.com]
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [3] - [SHUBHAM LANKE]
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 18:00:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#8
2025-04-21 18:00:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc87de4
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [0] - [33]
2025-04-21 18:00:32 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(27155048655300)): 33
2025-04-21 18:00:32 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(27155048655300)#33] : 1885769953
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [1] - [sauravsharma@gmail.com]
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [3] - [SAURAV V SHARMA]
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 18:00:32 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 18:00:32 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(27155048655300)#33
2025-04-21 18:00:32 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc87de4
2025-04-21 18:00:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:00:32 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:00:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:00:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:00:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:01:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:01:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 18:01:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:01:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:01:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 18:01:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 18:01:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 18:01:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:01:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:01:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:01:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:01:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:02:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:02:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:02:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:02:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:02:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:02:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:02:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:03:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 18:03:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 18:03:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 18:03:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:03:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:03:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:03:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 18:03:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:03:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:03:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:03:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:04:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:04:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:04:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:04:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:04:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 18:04:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:04:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 18:04:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:04:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:05:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 18:05:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:05:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:05:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:05:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 18:05:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:05:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:05:50 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:05:50 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:05:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:05:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:06:20 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:06:20 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:06:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 18:06:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 18:06:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:06:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 18:06:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:06:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:07:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:07:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:07:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:07:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:07:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 18:07:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:07:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:07:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:07:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:07:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:08:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 18:08:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 18:08:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:08:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:08:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:08:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 18:08:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:08:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:08:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:09:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:09:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:09:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:09:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:09:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:09:36 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 18:09:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:09:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 18:09:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2b5ff375 is alive
2025-04-21 18:09:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:09:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:10:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:10:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:10:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:10:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 18:10:33 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2b5ff375: (connection has passed maxLifetime)
2025-04-21 18:10:33 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (f5bc3ed0-718f-4b09-824c-da0b53eec8ef)
2025-04-21 18:10:33 DEBUG PoolBase - HikariPool-1 - Established new connection (f5bc3ed0-718f-4b09-824c-da0b53eec8ef)
2025-04-21 18:10:33 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71afbca7
2025-04-21 18:10:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:10:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:10:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:11:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:11:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:11:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:11:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:11:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 18:11:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:11:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:11:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 18:11:50 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:11:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:11:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:12:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1a0fb95e is alive
2025-04-21 18:12:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:12:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:12:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:12:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:12:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:12:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:12:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:13:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@537bea7f is alive
2025-04-21 18:13:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:13:18 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:13:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:13:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:13:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:13:22 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1a0fb95e: (connection has passed maxLifetime)
2025-04-21 18:13:22 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2dfdcffe-5de8-43c7-9bfb-47fc87299069)
2025-04-21 18:13:22 DEBUG PoolBase - HikariPool-1 - Established new connection (2dfdcffe-5de8-43c7-9bfb-47fc87299069)
2025-04-21 18:13:22 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4cf8b13e
2025-04-21 18:13:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1793164d is alive
2025-04-21 18:13:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:13:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:13:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:14:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:14:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:14:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:14:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:14:21 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@537bea7f: (connection has passed maxLifetime)
2025-04-21 18:14:21 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (18f04248-2301-4ad6-8a33-117963d42dbc)
2025-04-21 18:14:21 DEBUG PoolBase - HikariPool-1 - Established new connection (18f04248-2301-4ad6-8a33-117963d42dbc)
2025-04-21 18:14:21 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2fa0d0c3
2025-04-21 18:14:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:14:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:14:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:15:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:15:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:15:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:15:11 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1793164d: (connection has passed maxLifetime)
2025-04-21 18:15:11 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (5595b527-9317-4573-9405-4afbf166806f)
2025-04-21 18:15:11 DEBUG PoolBase - HikariPool-1 - Established new connection (5595b527-9317-4573-9405-4afbf166806f)
2025-04-21 18:15:11 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e732135
2025-04-21 18:15:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:15:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:15:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:15:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:15:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:15:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:15:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:16:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:16:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:16:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:16:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:16:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:16:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:16:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:16:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:16:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:17:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:17:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:17:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2681b8a7 is alive
2025-04-21 18:17:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:17:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:17:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:17:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:17:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@30bacb87 is alive
2025-04-21 18:17:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:17:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:18:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:18:06 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:18:13 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@30bacb87: (connection has passed maxLifetime)
2025-04-21 18:18:13 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6d4696f7-7fe2-478b-9c92-48bb11681be9)
2025-04-21 18:18:13 DEBUG PoolBase - HikariPool-1 - Established new connection (6d4696f7-7fe2-478b-9c92-48bb11681be9)
2025-04-21 18:18:13 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6602ac67
2025-04-21 18:18:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:18:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:18:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:18:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:18:29 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2681b8a7: (connection has passed maxLifetime)
2025-04-21 18:18:29 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6a444685-ecf7-48dd-ba35-0a2e3cb8b076)
2025-04-21 18:18:29 DEBUG PoolBase - HikariPool-1 - Established new connection (6a444685-ecf7-48dd-ba35-0a2e3cb8b076)
2025-04-21 18:18:29 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d3750d1
2025-04-21 18:18:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:18:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:18:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:18:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:18:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:19:13 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@34ee0f39 is alive
2025-04-21 18:19:16 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@34ee0f39: (connection has passed maxLifetime)
2025-04-21 18:19:16 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (10828a7c-26d3-4a92-aa2f-5ea6b187833c)
2025-04-21 18:19:16 DEBUG PoolBase - HikariPool-1 - Established new connection (10828a7c-26d3-4a92-aa2f-5ea6b187833c)
2025-04-21 18:19:16 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@711858d9
2025-04-21 18:19:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:19:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:19:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:19:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:19:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:19:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:20:00 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:20:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6602ac67 is alive
2025-04-21 18:20:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:20:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:20:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:20:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3750d1 is alive
2025-04-21 18:20:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@10843177 is alive
2025-04-21 18:20:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@69d47c9c is alive
2025-04-21 18:20:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d7c216b is alive
2025-04-21 18:20:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:20:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:20:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@711858d9 is alive
2025-04-21 18:20:59 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@69d47c9c: (connection has passed maxLifetime)
2025-04-21 18:20:59 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (281ada33-7d48-4878-83b6-88f335ffb212)
2025-04-21 18:20:59 DEBUG PoolBase - HikariPool-1 - Established new connection (281ada33-7d48-4878-83b6-88f335ffb212)
2025-04-21 18:20:59 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@200bfc09
2025-04-21 18:21:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:21:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:21:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:21:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:21:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:21:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:21:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:21:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6602ac67 is alive
2025-04-21 18:21:52 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@d7c216b: (connection has passed maxLifetime)
2025-04-21 18:21:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (72c36a1a-f5a6-4554-a1b1-c0e418221958)
2025-04-21 18:21:52 DEBUG PoolBase - HikariPool-1 - Established new connection (72c36a1a-f5a6-4554-a1b1-c0e418221958)
2025-04-21 18:21:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b0dc366
2025-04-21 18:21:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:22:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3750d1 is alive
2025-04-21 18:22:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:22:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:22:32 DEBUG PoolBase - HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@10843177: (connection has passed maxLifetime)
2025-04-21 18:22:32 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (484bb789-5911-4a42-a2af-a191208dfdcd)
2025-04-21 18:22:32 DEBUG PoolBase - HikariPool-1 - Established new connection (484bb789-5911-4a42-a2af-a191208dfdcd)
2025-04-21 18:22:32 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1076e532
2025-04-21 18:22:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@711858d9 is alive
2025-04-21 18:22:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:22:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:22:54 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@200bfc09 is alive
2025-04-21 18:23:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:23:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:23:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:23:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:23:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:23:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b0dc366 is alive
2025-04-21 18:23:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6602ac67 is alive
2025-04-21 18:23:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:23:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:23:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:24:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3750d1 is alive
2025-04-21 18:24:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1076e532 is alive
2025-04-21 18:24:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:24:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:24:22 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@711858d9 is alive
2025-04-21 18:24:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:24:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@200bfc09 is alive
2025-04-21 18:24:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:24:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:24:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:25:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:25:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:25:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:25:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b0dc366 is alive
2025-04-21 18:25:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6602ac67 is alive
2025-04-21 18:25:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:25:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:25:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:25:56 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1076e532 is alive
2025-04-21 18:26:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@711858d9 is alive
2025-04-21 18:26:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3750d1 is alive
2025-04-21 18:26:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:26:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:26:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:26:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:26:43 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@200bfc09 is alive
2025-04-21 18:26:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:26:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:27:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b0dc366 is alive
2025-04-21 18:27:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:27:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6602ac67 is alive
2025-04-21 18:27:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:27:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:27:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:27:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1076e532 is alive
2025-04-21 18:27:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@711858d9 is alive
2025-04-21 18:27:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:27:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:27:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3750d1 is alive
2025-04-21 18:28:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:28:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:28:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:28:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:28:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@200bfc09 is alive
2025-04-21 18:28:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:28:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:28:53 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b0dc366 is alive
2025-04-21 18:29:01 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:29:08 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6602ac67 is alive
2025-04-21 18:29:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1076e532 is alive
2025-04-21 18:29:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:29:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:29:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:29:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@711858d9 is alive
2025-04-21 18:29:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:29:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:29:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:29:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:29:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3750d1 is alive
2025-04-21 18:30:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:30:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:30:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@200bfc09 is alive
2025-04-21 18:30:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b0dc366 is alive
2025-04-21 18:30:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:30:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:30:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:30:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6602ac67 is alive
2025-04-21 18:31:03 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1076e532 is alive
2025-04-21 18:31:10 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@711858d9 is alive
2025-04-21 18:31:17 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:31:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:31:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:31:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:31:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:31:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3750d1 is alive
2025-04-21 18:31:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:31:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:32:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:32:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:32:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b0dc366 is alive
2025-04-21 18:32:26 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@200bfc09 is alive
2025-04-21 18:32:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:32:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1076e532 is alive
2025-04-21 18:32:46 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6602ac67 is alive
2025-04-21 18:32:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:32:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:32:52 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@711858d9 is alive
2025-04-21 18:32:55 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:32:58 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:33:14 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:33:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:33:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:33:27 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:33:27 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@912502580 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:33:27 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 18:33:27 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 18:33:27 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 18:33:27 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 37135332
2025-04-21 18:33:27 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 18:33:27 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 18:33:27 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 18:33:27 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 18:33:27 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 18:33:27 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 18:33:27 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2987b699
2025-04-21 18:33:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:33:27 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:33:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@d3750d1 is alive
2025-04-21 18:33:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:33:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:33:59 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 18:33:59 DEBUG TransactionImpl - begin
2025-04-21 18:33:59 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 18:33:59 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@758558161 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:33:59 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 18:33:59 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 13
2025-04-21 18:33:59 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#13] : 1456923361
2025-04-21 18:33:59 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 18:33:59 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 18:33:59 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 18:33:59 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 18:33:59 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 18:33:59 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#13
2025-04-21 18:33:59 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e9695cf
2025-04-21 18:33:59 DEBUG TransactionImpl - committing
2025-04-21 18:33:59 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 18:33:59 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 18:33:59 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 18:33:59 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 18:33:59 DEBUG EntityPrinter - Listing entities:
2025-04-21 18:33:59 DEBUG EntityPrinter - org.example.entity.User{password=password, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=13, email=saurav@gmail.com}
2025-04-21 18:33:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:33:59 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:33:59 INFO  AdminMenuUI - Staff registration approved: saurav@gmail.com
2025-04-21 18:34:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5b0dc366 is alive
2025-04-21 18:34:14 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:34:14 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@208427214 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:34:14 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 18:34:14 DEBUG results - Extracted JDBC value [0] - [33]
2025-04-21 18:34:14 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 33
2025-04-21 18:34:14 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#33] : 386284594
2025-04-21 18:34:14 DEBUG results - Extracted JDBC value [1] - [sauravsharma@gmail.com]
2025-04-21 18:34:14 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 18:34:14 DEBUG results - Extracted JDBC value [3] - [SAURAV V SHARMA]
2025-04-21 18:34:14 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 18:34:14 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 18:34:14 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#33
2025-04-21 18:34:14 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79c2bc34
2025-04-21 18:34:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:14 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:15 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 18:34:15 DEBUG TransactionImpl - begin
2025-04-21 18:34:15 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-04-21 18:34:15 DEBUG results - Initializer list:
	  org.example.entity.User -> EntityResultInitializer(org.example.entity.User)@2006081398 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:34:15 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.user_id=?
2025-04-21 18:34:15 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User): 33
2025-04-21 18:34:15 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User#33] : 1596377995
2025-04-21 18:34:15 DEBUG results - Extracted JDBC value [1] - [sauravsharma@gmail.com]
2025-04-21 18:34:15 DEBUG results - Extracted JDBC value [2] - [false]
2025-04-21 18:34:15 DEBUG results - Extracted JDBC value [3] - [SAURAV V SHARMA]
2025-04-21 18:34:15 DEBUG results - Extracted JDBC value [4] - [!Q1q]
2025-04-21 18:34:15 DEBUG results - Extracted JDBC value [5] - [STAFF]
2025-04-21 18:34:15 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User#33
2025-04-21 18:34:15 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a2a56f6
2025-04-21 18:34:15 DEBUG TransactionImpl - committing
2025-04-21 18:34:15 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 18:34:15 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 18:34:15 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-04-21 18:34:15 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 18:34:15 DEBUG EntityPrinter - Listing entities:
2025-04-21 18:34:15 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SAURAV V SHARMA, isActive=true, userRole=STAFF, userID=33, email=sauravsharma@gmail.com}
2025-04-21 18:34:15 DEBUG SQL - update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 18:34:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:15 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:15 INFO  AdminMenuUI - Staff registration approved: sauravsharma@gmail.com
2025-04-21 18:34:20 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@200bfc09 is alive
2025-04-21 18:34:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:34:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:34:27 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1076e532 is alive
2025-04-21 18:34:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2fa0d0c3 is alive
2025-04-21 18:34:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4cf8b13e is alive
2025-04-21 18:34:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@711858d9 is alive
2025-04-21 18:34:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6602ac67 is alive
2025-04-21 18:34:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4e732135 is alive
2025-04-21 18:34:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:34:48 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@370034120 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:34:48 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 18:34:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 18:34:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 273479239
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 18:34:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 18:34:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7488c183
2025-04-21 18:34:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:48 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:34:48 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1719112757 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:34:48 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 18:34:48 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 18:34:48 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1923489377
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 18:34:48 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 18:34:48 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 18:34:48 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@282aea3c
2025-04-21 18:34:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:48 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:48 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 18:34:50 INFO  UserMenuUI - User 13 is booking a room
2025-04-21 18:34:50 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:34:50 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1420130719 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 18:34:50 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 725418930
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 858760910
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 751413576
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 1865031664
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1685907816
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 707476223
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1271481627
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 1956845069
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 2006419032
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 77117079
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 100194946
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1770501966
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 18:34:50 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 18:34:50 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 18:34:50 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@542beecb
2025-04-21 18:34:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:50 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:34:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:34:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:35:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71afbca7 is alive
2025-04-21 18:35:07 INFO  UserMenuUI - Collected details for 2 guest(s)
2025-04-21 18:35:07 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 18:35:07 DEBUG TransactionImpl - begin
2025-04-21 18:35:07 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 18:35:07 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 18:35:07 DEBUG results - Initializer list is empty
2025-04-21 18:35:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1cc81ea1
2025-04-21 18:35:07 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 18:35:07 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@5cf1bbd3
2025-04-21 18:35:07 DEBUG TransactionImpl - committing
2025-04-21 18:35:07 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 18:35:07 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 18:35:07 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 18:35:07 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 18:35:07 DEBUG EntityPrinter - Listing entities:
2025-04-21 18:35:07 DEBUG EntityPrinter - org.example.entity.Guest{name=0, guestId=14, user=org.example.entity.User#13, age=0}
2025-04-21 18:35:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:35:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:35:07 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 18:35:07 DEBUG TransactionImpl - begin
2025-04-21 18:35:07 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 18:35:07 DEBUG SQL - insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 18:35:07 DEBUG results - Initializer list is empty
2025-04-21 18:35:07 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3a47bf0e
2025-04-21 18:35:07 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 18:35:07 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.Guest]: [Ljava.lang.Object;@4270705f
2025-04-21 18:35:07 DEBUG TransactionImpl - committing
2025-04-21 18:35:07 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 18:35:07 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 18:35:07 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 18:35:07 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 18:35:07 DEBUG EntityPrinter - Listing entities:
2025-04-21 18:35:07 DEBUG EntityPrinter - org.example.entity.Guest{name=0, guestId=15, user=org.example.entity.User#13, age=0}
2025-04-21 18:35:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:35:07 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:35:50 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 18:35:50 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 18:35:50 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 18:35:50 DEBUG HikariConfig - autoCommit......................true
2025-04-21 18:35:50 DEBUG HikariConfig - catalog.........................none
2025-04-21 18:35:50 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 18:35:50 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 18:35:50 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 18:35:50 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@69ee81fc
2025-04-21 18:35:50 DEBUG HikariConfig - dataSource......................none
2025-04-21 18:35:50 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 18:35:50 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 18:35:50 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 18:35:50 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 18:35:50 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 18:35:50 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 18:35:50 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 18:35:50 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 18:35:50 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 18:35:50 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 18:35:50 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 18:35:50 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://172.16.1.195:5331/dbdemo
2025-04-21 18:35:50 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 18:35:50 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 18:35:50 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 18:35:50 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 18:35:50 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 18:35:50 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 18:35:50 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 18:35:50 DEBUG HikariConfig - password........................<masked>
2025-04-21 18:35:50 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 18:35:50 DEBUG HikariConfig - readOnly........................false
2025-04-21 18:35:50 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 18:35:50 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 18:35:50 DEBUG HikariConfig - schema..........................none
2025-04-21 18:35:50 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 18:35:50 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 18:35:50 DEBUG HikariConfig - username........................"dbuser"
2025-04-21 18:35:50 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 18:35:50 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 18:35:50 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (e287db6c-0a9f-405b-b56b-773781dc45eb)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (e287db6c-0a9f-405b-b56b-773781dc45eb)
2025-04-21 18:35:51 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71529963
2025-04-21 18:35:51 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 18:35:51 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 18:35:51 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 18:35:51 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 18:35:51 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 18:35:51 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 18:35:51 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 18:35:51 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (0f4f5f3b-4afe-403f-a6b1-0bde03f3ae76)
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 18:35:51 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 18:35:51 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 18:35:51 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (0f4f5f3b-4afe-403f-a6b1-0bde03f3ae76)
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3303304f
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (acfbb07b-0760-41ae-9c35-a49dd5547796)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (acfbb07b-0760-41ae-9c35-a49dd5547796)
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39fb5b3f
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24be2d9c
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70e29e14
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@62da83ed
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d8445d7
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@37d80fe7
2025-04-21 18:35:51 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1827a871] into BootstrapContext; was [null]
2025-04-21 18:35:51 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48e64352] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7249dadf]
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (8ec7312c-ef21-428a-9794-d88e46abad01)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (8ec7312c-ef21-428a-9794-d88e46abad01)
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7cf9c264
2025-04-21 18:35:51 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 18:35:51 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 18:35:51 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (59fa5f34-902e-4287-89f5-63fbabb40c82)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (59fa5f34-902e-4287-89f5-63fbabb40c82)
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@565214fc
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1c32a07b-4599-474e-a51b-55521cd68161)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (1c32a07b-4599-474e-a51b-55521cd68161)
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4d4fb859
2025-04-21 18:35:51 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 14.2 (Debian 14.2-1.pgdg110+1)
	  major : 14
	  minor : 2
2025-04-21 18:35:51 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 18:35:51 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=5/10, active=1, waiting=0)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (66a32517-04ce-4c6b-a411-cec6deb431e4)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (66a32517-04ce-4c6b-a411-cec6deb431e4)
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e0e306c
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=6/10, active=1, waiting=0)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2c365a55-717f-4eea-a6d6-4a246f086544)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (2c365a55-717f-4eea-a6d6-4a246f086544)
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1cd63d2b
2025-04-21 18:35:51 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 14.2
2025-04-21 18:35:51 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 18:35:51 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 18:35:51 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@12958360) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@c6e0f32)
2025-04-21 18:35:51 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f3f0fae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21a66d45)
2025-04-21 18:35:51 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 18:35:51 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6c8d819d-7780-400c-ba61-6f45d0701663)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@14379273
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14379273
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24be2d9c`
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 18:35:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (6c8d819d-7780-400c-ba61-6f45d0701663)
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5a653fb9
2025-04-21 18:35:51 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 18:35:51 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@418c020b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51351f28]
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (537dc0d5-1e0f-40a5-b99f-013c395fd298)
2025-04-21 18:35:51 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 18:35:51 DEBUG PoolBase - HikariPool-1 - Established new connection (537dc0d5-1e0f-40a5-b99f-013c395fd298)
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6ad8c9dc
2025-04-21 18:35:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 18:35:51 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 18:35:51 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:35:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property id
2025-04-21 18:35:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property number
2025-04-21 18:35:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 18:35:51 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 18:35:51 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property id
2025-04-21 18:35:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property name
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property passport
2025-04-21 18:35:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 18:35:51 DEBUG EntityBinder - Import with entity name User
2025-04-21 18:35:51 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property userID
2025-04-21 18:35:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property email
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property isActive
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property name
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property password
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property userRole
2025-04-21 18:35:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 18:35:51 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 18:35:51 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property guestId
2025-04-21 18:35:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property age
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property name
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property user
2025-04-21 18:35:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 18:35:51 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 18:35:51 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property bookingId
2025-04-21 18:35:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property checkIn
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property checkOut
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property room
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property status
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property user
2025-04-21 18:35:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 18:35:51 DEBUG EntityBinder - Import with entity name Room
2025-04-21 18:35:51 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property roomID
2025-04-21 18:35:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property price
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property roomType
2025-04-21 18:35:51 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 18:35:51 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 18:35:51 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 18:35:51 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property amount
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property booking
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property issueDate
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 18:35:51 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 18:35:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 18:35:51 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 18:35:51 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 18:35:51 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:35:51 DEBUG PropertyBinder - Building property user
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 18:35:51 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 18:35:51 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 18:35:51 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 18:35:51 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 18:35:51 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 18:35:51 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 18:35:51 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 18:35:51 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 18:35:52 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 18:35:52 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 18:35:52 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@590f0c50, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 18:35:52 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1665fa54] under count; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7efa3f63] under every; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7134b8a7] under any; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27] under sinh; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549] under cosh; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@502a4156] under tanh; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5416f8db] under pi; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64e1377c] under log; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@27abb6ca] under position; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@e784320] under overlay; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4cad79bc] under trim; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@d48e998] under cast; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7cfac39f] under collate; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3069a360] under extract; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3472947a] under ifnull; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@39f5b723] under pad; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2ead6ba4] under str; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4a44cfc0] under format; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@65cf4d6d] under timestampadd; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7c5d1d25] under timestampdiff; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26ca61bf] under current_date; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73a0f2b] under current_time; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fa5f81c] under current_timestamp; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a1d526c] under local_date; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f2f0109] under local_time; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483b0690] under local_datetime; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@687e6293] under offset_datetime; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6870c3c2] under instant; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6a5e167a] under sql; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64e1377c
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e06f7d] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@502a4156
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5416f8db
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@e95595b] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1f2f0109
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@483b0690
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5d94a2dc] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@cedee22] under bit_length; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@59b32539] under octet_length; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@27abb6ca
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@233db8e9] under bitand; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40c2ce52] under bitor; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18a19e] under bitxor; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60a7e509] under bitnot; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e13f304] under median; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d24420b] under insert; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1c067c0d] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@e784320
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5d0b0cb9] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@78cfa264] under listagg; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@3ddb774f] under array; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@2582b0ef] under array_list; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@20a967fe] under array_agg; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@7bcecef6] under array_position; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@65f40689] under array_positions; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@23cbbd07] under array_positions_list; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@448b808a] under array_length; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@ebda593] under array_concat; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@3a17b2e3] under array_prepend; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@5e13f156] under array_append; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@59939293] under array_contains; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@68b366e2] under array_contains_nullable; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@dd4aec3] under array_overlaps; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@4dac121d] under array_overlaps_nullable; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b332962] under array_get; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@342e690b] under array_set; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@7237f3c1] under array_remove_index; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@781711b7] under array_slice; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642a16aa] under array_trim; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@1d02af26] under array_fill; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@3fa7df1] under array_fill_list; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@a146b11] under array_to_string; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4116f66a] under mode; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@59c04bee] under percentile_cont; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@45900b64] under percentile_disc; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@67b355c8] under rank; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@388623ad] under dense_rank; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@91f565d] under percent_rank; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@46e3559f] under cume_dist; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@1ddc6db2] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3cd26422] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eda072] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18a19e
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@1b01a0d] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@62f11ebb] under trunc; prior registration was null
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 18:35:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a6c54c3] under date_trunc; prior registration was null
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 18:35:52 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 18:35:52 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 18:35:52 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 18:35:52 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 18:35:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 18:35:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 18:35:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 18:35:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 18:35:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 18:35:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 18:35:52 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 18:35:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 18:35:52 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 18:35:52 DEBUG creation - Starting post-init callbacks
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 18:35:52 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : g1_0
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@541d4d9f] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:35:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 18:35:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 18:35:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : p1_0
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 18:35:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 18:35:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 18:35:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : b1_0
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e5a8718] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : r1_0
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@91a2543] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:35:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 18:35:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 18:35:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : r1_0
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 18:35:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 18:35:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 18:35:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 18:35:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 18:35:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 18:35:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : p1_0
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3af36922] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : p2_0
2025-04-21 18:35:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 18:35:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 18:35:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 18:35:52 DEBUG create - Created new SQL alias : i1_0
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5fb7ab9c] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 18:35:52 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6775c0d1] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 18:35:52 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 18:35:52 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 18:35:52 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 18:35:52 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 18:35:52 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 18:35:52 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 18:35:52 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 18:35:52 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 18:35:52 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@418c020b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@100d0218]
2025-04-21 18:35:52 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 18:35:52 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 18:35:52 DEBUG Table - No alter strings for table : bookings
2025-04-21 18:35:52 DEBUG Table - No alter strings for table : guests
2025-04-21 18:35:52 DEBUG Table - No alter strings for table : invoices
2025-04-21 18:35:52 DEBUG Table - No alter strings for table : Passport
2025-04-21 18:35:52 DEBUG Table - No alter strings for table : Persons
2025-04-21 18:35:52 DEBUG Table - No alter strings for table : rooms
2025-04-21 18:35:52 DEBUG Table - No alter strings for table : users
2025-04-21 18:35:52 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4afd65fd
2025-04-21 18:35:52 DEBUG SessionFactoryRegistry - Registering SessionFactory: c646cfa4-41dd-47bc-8fee-dbe501c378a6 (my-persistence-unit)
2025-04-21 18:35:52 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 18:35:52 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 18:35:53 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 18:35:53 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 18:35:53 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 18:35:53 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 18:35:53 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:35:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 18:35:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 18:35:53 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 18:35:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 18:35:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 18:35:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:35:53 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@909570727 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:35:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 18:35:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 18:35:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 689549299
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 18:35:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 18:35:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@14499b52
2025-04-21 18:35:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:35:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:35:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:35:53 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1475269729 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:35:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 18:35:53 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.User(u)): 13
2025-04-21 18:35:53 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.User(u)#13] : 1589606252
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [1] - [saurav@gmail.com]
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [2] - [true]
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [3] - [SAURAV SHARMA]
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [4] - [password]
2025-04-21 18:35:53 DEBUG results - Extracted JDBC value [5] - [GUEST]
2025-04-21 18:35:53 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.User(u)#13
2025-04-21 18:35:53 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7fd3fd06
2025-04-21 18:35:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:35:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:35:53 INFO  HomeMenuUI - Login successful: SAURAV SHARMA (GUEST)
2025-04-21 18:35:54 WARN  UserMenuUI - Invalid menu choice 11 by user 13
2025-04-21 18:35:56 INFO  UserMenuUI - User 13 is booking a room
2025-04-21 18:35:56 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 18:35:56 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 18:35:56 DEBUG create - Created new SQL alias : r1_0
2025-04-21 18:35:56 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 18:35:56 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 18:35:56 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 18:35:56 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 18:35:56 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:35:56 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@1392900406 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 18:35:56 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [3]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 3
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#3] : 1749286340
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [103]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#3
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [6]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 6
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#6] : 1185511429
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [202]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#6
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [7]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 7
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#7] : 1719521616
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [203]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#7
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [8]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 8
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#8] : 183521033
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [204]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#8
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [9]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 9
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#9] : 1972193961
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [301]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#9
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [10]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 10
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#10] : 2028567885
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [302]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#10
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [11]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 11
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#11] : 1888932945
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [303]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#11
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [12]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 12
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#12] : 2014725453
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [304]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#12
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [13]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 13
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#13] : 1741783268
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [2500.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [401]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [SINGLE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#13
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [14]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 14
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#14] : 1424067142
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [3500.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [402]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [DOUBLE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#14
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [15]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 15
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#15] : 311687383
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [7000.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [403]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [SUITE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#15
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [0] - [16]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (org.example.entity.Room(r)): 16
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Created new entity instance [org.example.entity.Room(r)#16] : 1491467237
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [1] - [true]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [2] - [10000.0]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [3] - [404]
2025-04-21 18:35:56 DEBUG results - Extracted JDBC value [4] - [DELUXE]
2025-04-21 18:35:56 DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : org.example.entity.Room(r)#16
2025-04-21 18:35:56 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7131d668
2025-04-21 18:35:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:35:56 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:36:11 INFO  UserMenuUI - Collected details for 0 guest(s)
2025-04-21 18:36:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:36:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:36:31 ERROR UserMenuUI - Invalid input by user 13: null
2025-04-21 18:36:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:36:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:37:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:37:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:37:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4fb859 is alive
2025-04-21 18:37:29 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cd63d2b is alive
2025-04-21 18:37:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39fb5b3f is alive
2025-04-21 18:37:34 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a653fb9 is alive
2025-04-21 18:37:35 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71529963 is alive
2025-04-21 18:37:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e0e306c is alive
2025-04-21 18:37:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3303304f is alive
2025-04-21 18:37:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ad8c9dc is alive
2025-04-21 18:37:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@565214fc is alive
2025-04-21 18:37:44 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7cf9c264 is alive
2025-04-21 18:37:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:37:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:38:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:38:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:38:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:38:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:39:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4fb859 is alive
2025-04-21 18:39:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cd63d2b is alive
2025-04-21 18:39:09 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39fb5b3f is alive
2025-04-21 18:39:16 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a653fb9 is alive
2025-04-21 18:39:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71529963 is alive
2025-04-21 18:39:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:39:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:39:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e0e306c is alive
2025-04-21 18:39:31 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3303304f is alive
2025-04-21 18:39:33 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ad8c9dc is alive
2025-04-21 18:39:37 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@565214fc is alive
2025-04-21 18:39:38 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7cf9c264 is alive
2025-04-21 18:39:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:39:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:40:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:40:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:40:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4fb859 is alive
2025-04-21 18:40:45 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cd63d2b is alive
2025-04-21 18:40:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39fb5b3f is alive
2025-04-21 18:40:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:40:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:40:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a653fb9 is alive
2025-04-21 18:41:04 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71529963 is alive
2025-04-21 18:41:12 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e0e306c is alive
2025-04-21 18:41:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:41:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:41:21 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3303304f is alive
2025-04-21 18:41:24 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ad8c9dc is alive
2025-04-21 18:41:30 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@565214fc is alive
2025-04-21 18:41:32 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7cf9c264 is alive
2025-04-21 18:41:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:41:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:42:19 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4fb859 is alive
2025-04-21 18:42:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:42:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:42:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cd63d2b is alive
2025-04-21 18:42:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39fb5b3f is alive
2025-04-21 18:42:42 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a653fb9 is alive
2025-04-21 18:42:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71529963 is alive
2025-04-21 18:42:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:42:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:42:59 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@2e0e306c is alive
2025-04-21 18:43:11 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@3303304f is alive
2025-04-21 18:43:15 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6ad8c9dc is alive
2025-04-21 18:43:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:43:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:43:23 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@565214fc is alive
2025-04-21 18:43:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7cf9c264 is alive
2025-04-21 18:43:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:43:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:43:57 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4d4fb859 is alive
2025-04-21 18:44:02 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@1cd63d2b is alive
2025-04-21 18:44:07 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@39fb5b3f is alive
2025-04-21 18:44:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:44:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:44:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5a653fb9 is alive
2025-04-21 18:44:51 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 18:44:51 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 18:44:51 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 18:44:51 DEBUG HikariConfig - autoCommit......................true
2025-04-21 18:44:51 DEBUG HikariConfig - catalog.........................none
2025-04-21 18:44:51 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 18:44:51 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 18:44:51 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 18:44:51 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@45385f75
2025-04-21 18:44:51 DEBUG HikariConfig - dataSource......................none
2025-04-21 18:44:51 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 18:44:51 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 18:44:51 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 18:44:51 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 18:44:51 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 18:44:51 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 18:44:51 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 18:44:51 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 18:44:51 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 18:44:51 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 18:44:51 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 18:44:51 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/postgres
2025-04-21 18:44:51 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 18:44:51 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 18:44:51 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 18:44:51 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 18:44:51 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 18:44:51 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 18:44:51 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 18:44:51 DEBUG HikariConfig - password........................<masked>
2025-04-21 18:44:51 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 18:44:51 DEBUG HikariConfig - readOnly........................false
2025-04-21 18:44:51 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 18:44:51 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 18:44:51 DEBUG HikariConfig - schema..........................none
2025-04-21 18:44:51 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 18:44:51 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 18:44:51 DEBUG HikariConfig - username........................"postgres"
2025-04-21 18:44:51 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 18:44:51 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 18:44:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (28454745-2f43-4fae-8716-9eae72273038)
2025-04-21 18:44:51 DEBUG PoolBase - HikariPool-1 - Established new connection (28454745-2f43-4fae-8716-9eae72273038)
2025-04-21 18:44:51 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4f1bfe23
2025-04-21 18:44:51 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 18:44:51 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 18:44:51 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 18:44:51 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 18:44:51 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 18:44:51 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 18:44:51 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 18:44:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 18:44:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (58be0ae7-38a5-4e69-9c07-387e26bd9f0f)
2025-04-21 18:44:51 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 18:44:51 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 18:44:51 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 18:44:51 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 18:44:51 DEBUG PoolBase - HikariPool-1 - Established new connection (58be0ae7-38a5-4e69-9c07-387e26bd9f0f)
2025-04-21 18:44:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7bc7cec0
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1b9ea3e3
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@aa22f1c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@55e7a35c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@37cd92d6
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5922ae77
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4263b080
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2af616d3
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@71f67a79
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3deb2326
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@62d363ab
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7889a1ac
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 18:44:51 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 18:44:51 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (2b0eced6-f7e5-4ead-8507-c29675675cd6)
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6bc28a83
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6bc28a83
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@173b9122
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7c18432b
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7646731d
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@70e29e14
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3b1bb3ab
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5a4bef8
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@40bffbca
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2449cff7
2025-04-21 18:44:51 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42a9a63e
2025-04-21 18:44:51 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@285f09de] into BootstrapContext; was [null]
2025-04-21 18:44:51 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@73393584] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@31500940]
2025-04-21 18:44:51 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 18:44:51 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 18:44:51 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 18:44:51 DEBUG PoolBase - HikariPool-1 - Established new connection (2b0eced6-f7e5-4ead-8507-c29675675cd6)
2025-04-21 18:44:51 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@713fa5b0
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (81cd5f09-c879-4e2f-a87a-148bddb18b5c)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Established new connection (81cd5f09-c879-4e2f-a87a-148bddb18b5c)
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@343d25f3
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=3/10, active=1, waiting=0)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (01149a97-d0e1-4f02-a1e6-e5d2e66fe31d)
2025-04-21 18:44:52 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 17.4
	  major : 17
	  minor : 4
2025-04-21 18:44:52 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 18:44:52 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 18:44:52 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 17.4
2025-04-21 18:44:52 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 18:44:52 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 18:44:52 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@6f7e336b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@3a2b2322)
2025-04-21 18:44:52 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e1218b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12958360)
2025-04-21 18:44:52 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 18:44:52 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3bead518
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3bead518
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6bc28a83`
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 18:44:52 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Established new connection (01149a97-d0e1-4f02-a1e6-e5d2e66fe31d)
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71495c7a
2025-04-21 18:44:52 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 18:44:52 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@724c5cbe] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70101687]
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (1eaa96e9-2ad9-4c62-bac8-efbf4f5ea27a)
2025-04-21 18:44:52 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 18:44:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 18:44:52 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 18:44:52 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Established new connection (1eaa96e9-2ad9-4c62-bac8-efbf4f5ea27a)
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@54353f4
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property id
2025-04-21 18:44:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property number
2025-04-21 18:44:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 18:44:52 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 18:44:52 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property id
2025-04-21 18:44:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property name
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property passport
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (613024b8-dbbb-4fa5-82e6-982455c3c916)
2025-04-21 18:44:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 18:44:52 DEBUG EntityBinder - Import with entity name User
2025-04-21 18:44:52 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property userID
2025-04-21 18:44:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property email
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property isActive
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property name
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property password
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property userRole
2025-04-21 18:44:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 18:44:52 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 18:44:52 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property guestId
2025-04-21 18:44:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property age
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property name
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property user
2025-04-21 18:44:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 18:44:52 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 18:44:52 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property bookingId
2025-04-21 18:44:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property checkIn
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property checkOut
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property room
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property status
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property user
2025-04-21 18:44:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 18:44:52 DEBUG EntityBinder - Import with entity name Room
2025-04-21 18:44:52 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property roomID
2025-04-21 18:44:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property price
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property roomType
2025-04-21 18:44:52 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 18:44:52 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 18:44:52 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 18:44:52 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property amount
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property booking
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property issueDate
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 18:44:52 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 18:44:52 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 18:44:52 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 18:44:52 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 18:44:52 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:44:52 DEBUG PropertyBinder - Building property user
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 18:44:52 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 18:44:52 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 18:44:52 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 18:44:52 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 18:44:52 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 18:44:52 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 18:44:52 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 18:44:52 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Established new connection (613024b8-dbbb-4fa5-82e6-982455c3c916)
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@9dd74c9
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (6e562148-8a84-49f5-8468-ae39945caeb5)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Established new connection (6e562148-8a84-49f5-8468-ae39945caeb5)
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5412dabc
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (98c22e60-c9ee-428b-9b71-b4d601729ff8)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Established new connection (98c22e60-c9ee-428b-9b71-b4d601729ff8)
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6f03e6c8
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (88798a42-ee19-492f-be2e-b9e5e212b5f7)
2025-04-21 18:44:52 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 18:44:52 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 18:44:52 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 18:44:52 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@30893e08, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 18:44:52 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 18:44:52 DEBUG PoolBase - HikariPool-1 - Established new connection (88798a42-ee19-492f-be2e-b9e5e212b5f7)
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7040c42f
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@111d5c97] under count; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@558b4942] under every; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@30ec7d21] under any; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 18:44:52 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd] under sinh; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28a9494b] under cosh; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a09303] under tanh; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27] under pi; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549] under log; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@e280403] under position; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@12a470dd] under overlay; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3f6bf8aa] under trim; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5f05c8d6] under cast; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68e02f33] under collate; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@158ae284] under extract; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7235f92b] under ifnull; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@69d3cf7e] under pad; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4eaa375c] under str; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1d06f16f] under format; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@60e3c26e] under timestampadd; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@10272bbb] under timestampdiff; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550e9be6] under current_date; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f96f020] under current_time; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32eae6f2] under current_timestamp; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26ca61bf] under local_date; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73a0f2b] under local_time; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fa5f81c] under local_datetime; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a1d526c] under offset_datetime; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f2f0109] under instant; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@fb0a08c] under sql; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@322ba549
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1faf386c] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a09303
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3440e9cd
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28a9494b
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1163a27
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@66a5755] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@73a0f2b
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@fa5f81c
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@5a917723] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7e4579c7] under bit_length; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@796f632b] under octet_length; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d94a2dc] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@e280403
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cedee22] under bitand; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b32539] under bitor; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f] under bitxor; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@233db8e9] under bitnot; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40c2ce52] under median; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60a7e509] under insert; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6274670b] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@12a470dd
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@53ce2392] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@3c0e00a8] under listagg; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@5649d11a] under array; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@294f9d50] under array_list; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@70721c12] under array_agg; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@13e5d243] under array_position; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@fe87ddd] under array_positions; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@45545e7a] under array_positions_list; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9f674ac] under array_length; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@5be052ca] under array_concat; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@75023c53] under array_prepend; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@66813e6e] under array_append; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@3520963d] under array_contains; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@388d14e] under array_contains_nullable; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@78d71df1] under array_overlaps; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@456bcb74] under array_overlaps_nullable; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@568750b7] under array_get; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@2e7bf7b7] under array_set; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@4519f676] under array_remove_index; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78ec89a6] under array_slice; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3596b249] under array_trim; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@5f5827d0] under array_fill; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@58a2d9f9] under array_fill_list; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@4dd90166] under array_to_string; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18d003cd] under mode; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3135bf25] under percentile_cont; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@22ad1bae] under percentile_disc; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@f2a1813] under rank; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79f90a3a] under dense_rank; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@22bdb1d0] under percent_rank; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@67b355c8] under cume_dist; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@3b83459e] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@32118208] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@414f87a9] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b47731f
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@3fa21d49] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@2d0b05] under trunc; prior registration was null
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 18:44:52 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b432e53] under date_trunc; prior registration was null
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 18:44:52 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 18:44:52 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 18:44:53 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 18:44:53 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 18:44:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 18:44:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 18:44:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 18:44:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 18:44:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 18:44:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 18:44:53 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 18:44:53 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 18:44:53 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 18:44:53 DEBUG creation - Starting post-init callbacks
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 18:44:53 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : g1_0
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27bc1d44] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:44:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 18:44:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 18:44:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : p1_0
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 18:44:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 18:44:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 18:44:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : b1_0
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a717d79] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : r1_0
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@538b3c88] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:44:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 18:44:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 18:44:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : r1_0
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 18:44:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 18:44:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 18:44:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 18:44:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 18:44:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 18:44:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : p1_0
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@22ae905f] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : p2_0
2025-04-21 18:44:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 18:44:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 18:44:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 18:44:53 DEBUG create - Created new SQL alias : i1_0
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d4a05f7] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 18:44:53 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@29dcdd1c] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 18:44:53 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 18:44:53 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 18:44:53 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 18:44:53 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 18:44:53 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 18:44:53 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 18:44:53 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 18:44:53 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 18:44:53 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@724c5cbe] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5f61e002]
2025-04-21 18:44:53 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 18:44:53 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 18:44:53 DEBUG SQL - create table bookings (booking_id integer generated by default as identity, check_in timestamp(6), check_out timestamp(6), status varchar(255) check (status in ('PENDING','CONFIRMED','CANCELLED','COMPLETED')), room_id integer not null, user_id integer not null, primary key (booking_id))
2025-04-21 18:44:53 DEBUG SQL - create table guests (guest_id integer generated by default as identity, age integer not null, name varchar(255), user_id integer not null, primary key (guest_id))
2025-04-21 18:44:53 DEBUG SQL - create table invoices (invoice_id integer generated by default as identity, amount float(53) not null, issue_date timestamp(6), payment_status varchar(255) check (payment_status in ('PENDING','PAID','CANCELED','FAILED')), booking_id integer not null, user_id integer not null, primary key (invoice_id))
2025-04-21 18:44:53 DEBUG SQL - create table Passport (id integer generated by default as identity, number varchar(255), primary key (id))
2025-04-21 18:44:53 DEBUG SQL - create table Persons (id integer generated by default as identity, name varchar(255), passport_id integer, primary key (id))
2025-04-21 18:44:53 DEBUG SQL - create table rooms (room_id integer generated by default as identity, is_available boolean not null, price float(53) not null, room_number integer not null, room_type varchar(255) not null check (room_type in ('SINGLE','DOUBLE','SUITE','DELUXE')), primary key (room_id))
2025-04-21 18:44:53 DEBUG SQL - create table users (user_id integer generated by default as identity, email varchar(255) not null, is_active boolean not null, name varchar(255) not null, password varchar(255) not null, user_role varchar(255) not null check (user_role in ('GUEST','STAFF','ADMIN','SUPER_ADMIN')), primary key (user_id))
2025-04-21 18:44:53 DEBUG SQL - alter table if exists Persons drop constraint if exists UK91y6blei1qpa5lnw7bsu2fidv
2025-04-21 18:44:53 DEBUG SqlExceptionHelper - SQL Warning
org.postgresql.util.PSQLWarning: constraint "uk91y6blei1qpa5lnw7bsu2fidv" of relation "persons" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2752) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2450) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyUniqueKeys(AbstractSchemaMigrator.java:401) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:98) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at java.util.HashMap.forEach(HashMap.java:1429) [?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:334) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:458) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:144) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.persistence.PersistenceManager.<clinit>(PersistenceManager.java:22) [classes/:?]
	at org.example.dao.RoomDaoImpl.getAvailableRooms(RoomDaoImpl.java:45) [classes/:?]
	at org.example.service.RoomServiceImpl.getAvailableRooms(RoomServiceImpl.java:57) [classes/:?]
	at org.example.controller.RoomController.getAvailableRooms(RoomController.java:33) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.viewAvailableRooms(UserMenuUI.java:186) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:46) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 18:44:53 WARN  SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-04-21 18:44:53 WARN  SqlExceptionHelper - constraint "uk91y6blei1qpa5lnw7bsu2fidv" of relation "persons" does not exist, skipping
2025-04-21 18:44:53 DEBUG SQL - alter table if exists Persons add constraint UK91y6blei1qpa5lnw7bsu2fidv unique (passport_id)
2025-04-21 18:44:53 DEBUG SQL - alter table if exists rooms drop constraint if exists UK7ljglxlj90ln3lbas4kl983m2
2025-04-21 18:44:53 DEBUG SqlExceptionHelper - SQL Warning
org.postgresql.util.PSQLWarning: constraint "uk7ljglxlj90ln3lbas4kl983m2" of relation "rooms" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2752) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2450) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyUniqueKeys(AbstractSchemaMigrator.java:401) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:98) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at java.util.HashMap.forEach(HashMap.java:1429) [?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:334) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:458) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:144) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.persistence.PersistenceManager.<clinit>(PersistenceManager.java:22) [classes/:?]
	at org.example.dao.RoomDaoImpl.getAvailableRooms(RoomDaoImpl.java:45) [classes/:?]
	at org.example.service.RoomServiceImpl.getAvailableRooms(RoomServiceImpl.java:57) [classes/:?]
	at org.example.controller.RoomController.getAvailableRooms(RoomController.java:33) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.viewAvailableRooms(UserMenuUI.java:186) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:46) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 18:44:53 WARN  SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-04-21 18:44:53 WARN  SqlExceptionHelper - constraint "uk7ljglxlj90ln3lbas4kl983m2" of relation "rooms" does not exist, skipping
2025-04-21 18:44:53 DEBUG SQL - alter table if exists rooms add constraint UK7ljglxlj90ln3lbas4kl983m2 unique (room_number)
2025-04-21 18:44:53 DEBUG SQL - alter table if exists users drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-04-21 18:44:53 DEBUG SqlExceptionHelper - SQL Warning
org.postgresql.util.PSQLWarning: constraint "uk6dotkott2kjsp8vw4d0m25fb7" of relation "users" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2752) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2450) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317) ~[postgresql-42.7.4.jar:42.7.4]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312) ~[postgresql-42.7.4.jar:42.7.4]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyUniqueKeys(AbstractSchemaMigrator.java:401) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:98) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at java.util.HashMap.forEach(HashMap.java:1429) [?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:334) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:458) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:144) [hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.persistence.PersistenceManager.<clinit>(PersistenceManager.java:22) [classes/:?]
	at org.example.dao.RoomDaoImpl.getAvailableRooms(RoomDaoImpl.java:45) [classes/:?]
	at org.example.service.RoomServiceImpl.getAvailableRooms(RoomServiceImpl.java:57) [classes/:?]
	at org.example.controller.RoomController.getAvailableRooms(RoomController.java:33) [classes/:?]
	at org.example.consoleinterface.UserMenuUI.viewAvailableRooms(UserMenuUI.java:186) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:46) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 18:44:53 WARN  SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-04-21 18:44:53 WARN  SqlExceptionHelper - constraint "uk6dotkott2kjsp8vw4d0m25fb7" of relation "users" does not exist, skipping
2025-04-21 18:44:53 DEBUG SQL - alter table if exists users add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-04-21 18:44:53 DEBUG SQL - alter table if exists bookings add constraint FKrgoycol97o21kpjodw1qox4nc foreign key (room_id) references rooms
2025-04-21 18:44:53 DEBUG SQL - alter table if exists bookings add constraint FKeyog2oic85xg7hsu2je2lx3s6 foreign key (user_id) references users
2025-04-21 18:44:53 DEBUG SQL - alter table if exists guests add constraint FKfek4t9wt70eakloorogaopg97 foreign key (user_id) references users
2025-04-21 18:44:53 DEBUG SQL - alter table if exists invoices add constraint FKb9bhb7xre5v64qvjeholh3qj0 foreign key (booking_id) references bookings
2025-04-21 18:44:53 DEBUG SQL - alter table if exists invoices add constraint FKbwr4d4vyqf2bkoetxtt8j9dx7 foreign key (user_id) references users
2025-04-21 18:44:53 DEBUG SQL - alter table if exists Persons add constraint FK8okndfn30gwbdyxbi4g2qmuic foreign key (passport_id) references Passport
2025-04-21 18:44:53 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6d0114c0
2025-04-21 18:44:53 DEBUG SessionFactoryRegistry - Registering SessionFactory: 68f4cdd4-f1da-438e-816a-a4f146e87ae2 (my-persistence-unit)
2025-04-21 18:44:53 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 18:44:53 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 18:44:53 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 18:44:53 DEBUG hql - HQL : SELECT r FROM Room r WHERE r.isAvailable = true ORDER BY r.roomID ASC
2025-04-21 18:44:54 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.Room(r)`
            <- [root] - `org.example.entity.Room(r)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.Room(r)`
          <- [root] - `org.example.entity.Room(r)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.Room(r).isAvailable`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 18:44:54 DEBUG create - Created new SQL alias : r1_0
2025-04-21 18:44:54 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room(r))] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 18:44:54 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.Room(r).isAvailable) 
2025-04-21 18:44:54 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room(r)]
 |  +-BasicFetch [org.example.entity.Room(r).isAvailable]
 |  +-BasicFetch [org.example.entity.Room(r).price]
 |  +-BasicFetch [org.example.entity.Room(r).roomNumber]
 |  \-BasicFetch [org.example.entity.Room(r).roomType]

2025-04-21 18:44:54 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room(r)) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 18:44:54 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:44:54 DEBUG results - Initializer list:
	  org.example.entity.Room(r) -> EntityResultInitializer(org.example.entity.Room(r))@284957218 (SingleTableEntityPersister(org.example.entity.Room))

2025-04-21 18:44:54 DEBUG SQL - select r1_0.room_id,r1_0.is_available,r1_0.price,r1_0.room_number,r1_0.room_type from rooms r1_0 where r1_0.is_available=true order by r1_0.room_id
2025-04-21 18:44:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:44:54 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:45:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:45:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:45:39 DEBUG hql - HQL : SELECT u FROM User u WHERE u.email = :email
2025-04-21 18:45:39 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 18:45:39 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `org.example.entity.User(u)`
            <- [root] - `org.example.entity.User(u)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 18:45:39 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:45:39 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 18:45:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 18:45:39 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 18:45:39 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User(u)]
 |  +-BasicFetch [org.example.entity.User(u).email]
 |  +-BasicFetch [org.example.entity.User(u).isActive]
 |  +-BasicFetch [org.example.entity.User(u).name]
 |  +-BasicFetch [org.example.entity.User(u).password]
 |  \-BasicFetch [org.example.entity.User(u).userRole]

2025-04-21 18:45:39 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 18:45:39 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:45:39 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1231445906 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:45:39 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 18:45:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:45:39 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:45:39 ERROR UserDaoImpl - Error fetching user by email superadmin@dss.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.authenticateUser(UserServiceImpl.java:59) [classes/:?]
	at org.example.controller.UserController.authenticateUser(UserController.java:41) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:77) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 18:45:39 WARN  HomeMenuUI - Invalid login attempt for email: superadmin@dss.com
2025-04-21 18:45:44 WARN  HomeMenuUI - Invalid email format entered: 2
2025-04-21 18:45:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:45:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:45:53 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:45:53 DEBUG results - Initializer list:
	  org.example.entity.User(u) -> EntityResultInitializer(org.example.entity.User(u))@1813608092 (SingleTableEntityPersister(org.example.entity.User))

2025-04-21 18:45:53 DEBUG SQL - select u1_0.user_id,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.user_role from users u1_0 where u1_0.email=?
2025-04-21 18:45:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:45:53 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:45:53 ERROR UserDaoImpl - Error fetching user by email saurav@gmail.com: No result found for query [SELECT u FROM User u WHERE u.email = :email]
jakarta.persistence.NoResultException: No result found for query [SELECT u FROM User u WHERE u.email = :email]
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:558) ~[hibernate-core-7.0.0.Alpha2.jar:7.0.0.Alpha2]
	at org.example.dao.UserDaoImpl.getUserByEmailId(UserDaoImpl.java:87) [classes/:?]
	at org.example.service.UserServiceImpl.authenticateUser(UserServiceImpl.java:59) [classes/:?]
	at org.example.controller.UserController.authenticateUser(UserController.java:41) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.loginUser(HomeMenuUI.java:77) [classes/:?]
	at org.example.consoleinterface.HomeMenuUI.displayMainMenu(HomeMenuUI.java:48) [classes/:?]
	at org.example.Main.main(Main.java:24) [classes/:?]
2025-04-21 18:45:53 WARN  HomeMenuUI - Invalid login attempt for email: saurav@gmail.com
2025-04-21 18:46:08 WARN  UserMenuUI - Invalid name format entered: saurav@gmail.com
2025-04-21 18:46:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:46:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:46:28 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54353f4 is alive
2025-04-21 18:46:39 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f03e6c8 is alive
2025-04-21 18:46:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@343d25f3 is alive
2025-04-21 18:46:40 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7bc7cec0 is alive
2025-04-21 18:46:41 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@713fa5b0 is alive
2025-04-21 18:46:47 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@5412dabc is alive
2025-04-21 18:46:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@7040c42f is alive
2025-04-21 18:46:48 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@4f1bfe23 is alive
2025-04-21 18:46:49 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@71495c7a is alive
2025-04-21 18:46:51 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@9dd74c9 is alive
2025-04-21 18:46:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:46:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:47:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:47:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:47:51 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:47:51 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:48:05 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@54353f4 is alive
2025-04-21 18:48:21 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:48:21 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:48:25 DEBUG HikariPool - HikariPool-1 - keepalive: connection org.postgresql.jdbc.PgConnection@6f03e6c8 is alive
2025-04-21 18:52:41 DEBUG HikariConfig - Class org.postgresql.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
2025-04-21 18:52:41 DEBUG HikariConfig - HikariPool-1 - configuration:
2025-04-21 18:52:41 DEBUG HikariConfig - allowPoolSuspension.............false
2025-04-21 18:52:41 DEBUG HikariConfig - autoCommit......................true
2025-04-21 18:52:41 DEBUG HikariConfig - catalog.........................none
2025-04-21 18:52:41 DEBUG HikariConfig - connectionInitSql...............none
2025-04-21 18:52:41 DEBUG HikariConfig - connectionTestQuery.............none
2025-04-21 18:52:41 DEBUG HikariConfig - connectionTimeout...............30000
2025-04-21 18:52:41 DEBUG HikariConfig - credentials.....................com.zaxxer.hikari.util.Credentials@6e2aa843
2025-04-21 18:52:41 DEBUG HikariConfig - dataSource......................none
2025-04-21 18:52:41 DEBUG HikariConfig - dataSourceClassName.............none
2025-04-21 18:52:41 DEBUG HikariConfig - dataSourceJNDI..................none
2025-04-21 18:52:41 DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2025-04-21 18:52:41 DEBUG HikariConfig - driverClassName................."org.postgresql.Driver"
2025-04-21 18:52:41 DEBUG HikariConfig - exceptionOverride...............none
2025-04-21 18:52:41 DEBUG HikariConfig - exceptionOverrideClassName......none
2025-04-21 18:52:41 DEBUG HikariConfig - healthCheckProperties...........{}
2025-04-21 18:52:41 DEBUG HikariConfig - healthCheckRegistry.............none
2025-04-21 18:52:41 DEBUG HikariConfig - idleTimeout.....................600000
2025-04-21 18:52:41 DEBUG HikariConfig - initializationFailTimeout.......1
2025-04-21 18:52:41 DEBUG HikariConfig - isolateInternalQueries..........false
2025-04-21 18:52:41 DEBUG HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/postgres
2025-04-21 18:52:41 DEBUG HikariConfig - keepaliveTime...................120000
2025-04-21 18:52:41 DEBUG HikariConfig - leakDetectionThreshold..........0
2025-04-21 18:52:41 DEBUG HikariConfig - maxLifetime.....................1800000
2025-04-21 18:52:41 DEBUG HikariConfig - maximumPoolSize.................10
2025-04-21 18:52:41 DEBUG HikariConfig - metricRegistry..................none
2025-04-21 18:52:41 DEBUG HikariConfig - metricsTrackerFactory...........none
2025-04-21 18:52:41 DEBUG HikariConfig - minimumIdle.....................10
2025-04-21 18:52:41 DEBUG HikariConfig - password........................<masked>
2025-04-21 18:52:41 DEBUG HikariConfig - poolName........................"HikariPool-1"
2025-04-21 18:52:41 DEBUG HikariConfig - readOnly........................false
2025-04-21 18:52:41 DEBUG HikariConfig - registerMbeans..................false
2025-04-21 18:52:41 DEBUG HikariConfig - scheduledExecutor...............none
2025-04-21 18:52:41 DEBUG HikariConfig - schema..........................none
2025-04-21 18:52:41 DEBUG HikariConfig - threadFactory...................internal
2025-04-21 18:52:41 DEBUG HikariConfig - transactionIsolation............default
2025-04-21 18:52:41 DEBUG HikariConfig - username........................"postgres"
2025-04-21 18:52:41 DEBUG HikariConfig - validationTimeout...............5000
2025-04-21 18:52:41 INFO  HikariDataSource - HikariPool-1 - Starting...
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b13202d3-d6ab-4e08-bdfe-fdc9d5624dd1)
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Established new connection (b13202d3-d6ab-4e08-bdfe-fdc9d5624dd1)
2025-04-21 18:52:42 INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77258e59
2025-04-21 18:52:42 INFO  HikariDataSource - HikariPool-1 - Start completed.
2025-04-21 18:52:42 DEBUG logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2025-04-21 18:52:42 DEBUG LogHelper - PersistenceUnitInfo [
	name: my-persistence-unit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528
	excludeUnlistedClasses: false
	JTA datasource: HikariDataSource (HikariPool-1)
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: null
	Shared Cache Mode: ALL
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.example.Passport
		org.example.Persons
		org.example.entity.User
		org.example.entity.Guest
		org.example.entity.Booking
		org.example.entity.Room
		org.example.entity.Invoice]
	Mapping files names []
	Properties []
2025-04-21 18:52:42 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-21 18:52:42 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-21 18:52:42 DEBUG HikariPool - HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (862b7e2c-7265-4af4-9803-f3316b6a02de)
2025-04-21 18:52:42 INFO  Version - HHH000412: Hibernate ORM core version 7.0.0.Alpha2
2025-04-21 18:52:42 DEBUG Environment - HHH000206: 'hibernate.properties' not found
2025-04-21 18:52:42 DEBUG factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-21 18:52:42 DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-21 18:52:42 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-21 18:52:42 INFO  RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Established new connection (862b7e2c-7265-4af4-9803-f3316b6a02de)
2025-04-21 18:52:42 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@472fb604
2025-04-21 18:52:42 DEBUG HikariPool - HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (276b5fbf-487a-4c70-a893-b4bb9a76702f)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3aee3976
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5ef8df1e
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@27cf3151
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@127e70c5
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5910de75
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4108fa66
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1f130eaf
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7e0aadd0
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@21362712
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@27eb3298
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@200a26bc
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@bc57b40
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1b5bc39d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@655a5d9c
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1494b84d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@34abdee4
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@71a9b4c7
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4628b1d3
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@77cf3f8b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1df98368
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@21ca139c
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@226f885f
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2cd2c8fe
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7d61eccf
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@cc6460c
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@52350abb
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@681aad3b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a6f2363
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2427e004
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5ebd56e9
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@63f34b70
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@641856
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1b58ff9e
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f66e802
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@56b78e55
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@76318a7d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2a492f2a
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3277e499
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@585811a4
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@22c01ab0
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@411341bd
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4c4d362a
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5400db36
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76b74e9c
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d72f75e
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@8ab78bc
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5aa0dbf4
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16afbd92
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2c5d601e
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7fe083b1
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@23c388c2
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@486be205
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@f713686
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74f7d1d2
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4b4dd216
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5ca17ab0
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5a62b2a4
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1051817b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@35293c05
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@620aa4ea
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2db2dd9d
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3174cb09
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4d411036
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7adbd080
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@41beb473
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@560513ce
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@13006998
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@173b9122
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@173b9122
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@37d80fe7
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@384fc774
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@e3cee7b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@71e9a896
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6b9267b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@408b35bf
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@29ad44e3
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@15bcf458
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5af9926a
2025-04-21 18:52:42 DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@f8908f6] into BootstrapContext; was [null]
2025-04-21 18:52:42 DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e587920] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2ef8a8c3]
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Established new connection (276b5fbf-487a-4c70-a893-b4bb9a76702f)
2025-04-21 18:52:42 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4dd7dd74
2025-04-21 18:52:42 DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2025-04-21 18:52:42 DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2025-04-21 18:52:42 DEBUG classes - Starting StandardClassDetailsBuilder without Jandex support
2025-04-21 18:52:42 DEBUG HikariPool - HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (df60e28b-b2f4-41b6-ae7d-c1ee2eb01f27)
2025-04-21 18:52:42 DEBUG JdbcEnvironmentInitiator - Database ->
	   name : PostgreSQL
	version : 17.4
	  major : 17
	  minor : 4
2025-04-21 18:52:42 DEBUG JdbcEnvironmentInitiator - Driver ->
	   name : PostgreSQL JDBC Driver
	version : 42.7.4
	  major : 42
	  minor : 7
2025-04-21 18:52:42 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-04-21 18:52:42 DEBUG dialect - HHH035001: Using dialect: org.hibernate.dialect.PostgreSQLDialect, version: 17.4
2025-04-21 18:52:42 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Established new connection (df60e28b-b2f4-41b6-ae7d-c1ee2eb01f27)
2025-04-21 18:52:42 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8d54aaa
2025-04-21 18:52:42 DEBUG lob - HHH10010004: Disabling contextual LOB creation as Dialect reported it is not supported
2025-04-21 18:52:42 DEBUG DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@4a68135e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@46678e49)
2025-04-21 18:52:42 DEBUG DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@748e9b20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2063c53e)
2025-04-21 18:52:42 DEBUG JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2025-04-21 18:52:42 DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7144655b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7144655b
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@173b9122`
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 18:52:42 DEBUG HikariPool - HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (fb9c2ef6-c19b-4103-9c2d-f18a3a21d3b9)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 18:52:42 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-21 18:52:42 DEBUG classes - Created immutable ClassDetailsRegistry
2025-04-21 18:52:42 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f1ea80d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37191ef0]
2025-04-21 18:52:42 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-21 18:52:42 DEBUG PoolBase - HikariPool-1 - Established new connection (fb9c2ef6-c19b-4103-9c2d-f18a3a21d3b9)
2025-04-21 18:52:42 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32705222
2025-04-21 18:52:42 DEBUG EntityBinder - Binding entity from annotated class: org.example.Passport
2025-04-21 18:52:42 DEBUG EntityBinder - Import with entity name Passport
2025-04-21 18:52:42 DEBUG EntityBinder - Bind entity org.example.Passport on table Passport
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (7e80bc51-592b-419b-8dac-9f447f44faca)
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:id]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: Passport.id
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property id
2025-04-21 18:52:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property number with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Passport:number]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for number
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: Passport.number
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property number
2025-04-21 18:52:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.Persons
2025-04-21 18:52:43 DEBUG EntityBinder - Import with entity name Persons
2025-04-21 18:52:43 DEBUG EntityBinder - Bind entity org.example.Persons on table Persons
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:id]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for id
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: Persons.id
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property id
2025-04-21 18:52:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), JdkFieldDetails(id), identity, , ...)
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.Persons:name]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: Persons.name
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property name
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Established new connection (7e80bc51-592b-419b-8dac-9f447f44faca)
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39176035
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property passport
2025-04-21 18:52:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.User
2025-04-21 18:52:43 DEBUG EntityBinder - Import with entity name User
2025-04-21 18:52:43 DEBUG EntityBinder - Bind entity org.example.entity.User on table users
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_id')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property userID with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userID]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for userID
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: users.user_id
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property userID
2025-04-21 18:52:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), JdkFieldDetails(userID), identity, , ...)
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:email]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for email
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: users.email
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property email
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_active')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property isActive with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:isActive]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for isActive
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: users.is_active
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property isActive
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:name]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: users.name
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property name
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:password]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for password
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: users.password
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property password
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='user_role')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property userRole with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.User:userRole]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for userRole
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: users.user_role
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property userRole
2025-04-21 18:52:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Guest
2025-04-21 18:52:43 DEBUG EntityBinder - Import with entity name Guest
2025-04-21 18:52:43 DEBUG EntityBinder - Bind entity org.example.entity.Guest on table guests
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='guest_id')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property guestId with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:guestId]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for guestId
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: guests.guest_id
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property guestId
2025-04-21 18:52:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(guest_id)]), JdkFieldDetails(guestId), identity, , ...)
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property age with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:age]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for age
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: guests.age
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property age
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Guest:name]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for name
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: guests.name
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property name
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property user
2025-04-21 18:52:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Booking
2025-04-21 18:52:43 DEBUG EntityBinder - Import with entity name Booking
2025-04-21 18:52:43 DEBUG EntityBinder - Bind entity org.example.entity.Booking on table bookings
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='booking_id')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property bookingId with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:bookingId]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for bookingId
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: bookings.booking_id
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property bookingId
2025-04-21 18:52:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(booking_id)]), JdkFieldDetails(bookingId), identity, , ...)
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_in')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property checkIn with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkIn]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for checkIn
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: bookings.check_in
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property checkIn
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='check_out')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property checkOut with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:checkOut]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for checkOut
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: bookings.check_out
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property checkOut
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='room_id')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property room
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Booking:status]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for status
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: bookings.status
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property status
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property user
2025-04-21 18:52:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Room
2025-04-21 18:52:43 DEBUG EntityBinder - Import with entity name Room
2025-04-21 18:52:43 DEBUG EntityBinder - Bind entity org.example.entity.Room on table rooms
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_id')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property roomID with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomID]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for roomID
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: rooms.room_id
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property roomID
2025-04-21 18:52:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(room_id)]), JdkFieldDetails(roomID), identity, , ...)
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='is_available')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property isAvailable with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:isAvailable]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for isAvailable
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: rooms.is_available
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property isAvailable
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:price]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for price
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: rooms.price
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property price
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_number')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property roomNumber with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomNumber]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for roomNumber
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: rooms.room_number
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property roomNumber
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='room_type')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property roomType with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Room:roomType]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for roomType
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: rooms.room_type
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property roomType
2025-04-21 18:52:43 DEBUG EntityBinder - Binding entity from annotated class: org.example.entity.Invoice
2025-04-21 18:52:43 DEBUG EntityBinder - Import with entity name Invoice
2025-04-21 18:52:43 DEBUG EntityBinder - Bind entity org.example.entity.Invoice on table invoices
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='invoice_id')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property invoiceId with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:invoiceId]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for invoiceId
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: invoices.invoice_id
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property invoiceId
2025-04-21 18:52:43 DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(invoice_id)]), JdkFieldDetails(invoiceId), identity, , ...)
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:amount]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for amount
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: invoices.amount
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property amount
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='booking_id')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property booking
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='issue_date')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property issueDate with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:issueDate]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for issueDate
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: invoices.issue_date
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property issueDate
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn(column='payment_status')
2025-04-21 18:52:43 DEBUG PropertyBinder - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-21 18:52:43 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for attributeMember [org.example.entity.Invoice:paymentStatus]
2025-04-21 18:52:43 DEBUG BasicValueBinder - building BasicValue for paymentStatus
2025-04-21 18:52:43 DEBUG BasicValue - Skipping column re-registration: invoices.payment_status
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property paymentStatus
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-21 18:52:43 DEBUG AnnotatedColumn - Binding column: AnnotatedColumn()
2025-04-21 18:52:43 DEBUG PropertyBinder - Building property user
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (156a6df8-1b43-4d61-8393-fd77fb11fc20)
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for number
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userID
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isActive
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userRole
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for guestId
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for age
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bookingId
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkIn
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for checkOut
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomID
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomNumber
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for roomType
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for invoiceId
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for issueDate
2025-04-21 18:52:43 DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-21 18:52:43 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [passport]
2025-04-21 18:52:43 DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [persons]
2025-04-21 18:52:43 DEBUG PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-04-21 18:52:43 DEBUG PrimaryKey - Forcing column [guest_id] to be non-null as it is part of the primary key for table [guests]
2025-04-21 18:52:43 DEBUG PrimaryKey - Forcing column [booking_id] to be non-null as it is part of the primary key for table [bookings]
2025-04-21 18:52:43 DEBUG PrimaryKey - Forcing column [room_id] to be non-null as it is part of the primary key for table [rooms]
2025-04-21 18:52:43 DEBUG PrimaryKey - Forcing column [invoice_id] to be non-null as it is part of the primary key for table [invoices]
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Established new connection (156a6df8-1b43-4d61-8393-fd77fb11fc20)
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a58261e
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (b8f6301c-eeb3-4246-86c8-1f14ee607072)
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Established new connection (b8f6301c-eeb3-4246-86c8-1f14ee607072)
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68fab5e5
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (05cd7868-355b-40f5-a2fb-cb3979f61423)
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Established new connection (05cd7868-355b-40f5-a2fb-cb3979f61423)
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@582b1b9a
2025-04-21 18:52:43 DEBUG SessionFactoryImpl - Building session factory
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Attempting to create/setup new connection (bd4854c6-8d21-410a-a25d-f7fdc5d5e767)
2025-04-21 18:52:43 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 18:52:43 DEBUG SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate\target\classes;C:\Users\s.lanke\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.20.0\log4j-slf4j-impl-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\apache\logging\log4j\log4j-core\2.20.0\log4j-core-2.20.0.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\orm\hibernate-core\7.0.0.Alpha2\hibernate-core-7.0.0.Alpha2.jar;C:\Users\s.lanke\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.2.0-M2\jakarta.persistence-api-3.2.0-M2.jar;C:\Users\s.lanke\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\s.lanke\.m2\repository\org\hibernate\models\hibernate-models\0.8.3\hibernate-models-0.8.3.jar;C:\Users\s.lanke\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\s.lanke\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\s.lanke\.m2\repository\net\bytebuddy\byte-buddy\1.14.12\byte-buddy-1.14.12.jar;C:\Users\s.lanke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\s.lanke\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\s.lanke\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\s.lanke\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\s.lanke\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\s.lanke\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\s.lanke\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\s.lanke\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\s.lanke\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\s.lanke\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=ALL, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=org.example.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\s.lanke, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Program Files\Java\jdk-21, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=my-persistence-unit, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+8-LTS-188, user.name=s.lanke, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, javax.persistence.jtaDataSource=HikariDataSource (HikariPool-1), java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\S516C~1.LAN\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, java.version=21.0.6, user.dir=D:\shubhamlanke\Projects\Hotel-Management-System\StayEase-Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, jakarta.persistence.jtaDataSource=HikariDataSource (HikariPool-1), hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@ebe067d, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\s.lanke\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin;;C:\Users\s.lanke\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\s.lanke\apache-maven-3.9.9\bin;C:\Program Files\PostgreSQL\17\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+8-LTS-188, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=65.0}
2025-04-21 18:52:43 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-04-21 18:52:43 DEBUG PoolBase - HikariPool-1 - Established new connection (bd4854c6-8d21-410a-a25d-f7fdc5d5e767)
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5abfce62
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@70025b99] under count; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3ba3d4b6] under every; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@51b77cdf] under any; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c] under sinh; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4] under cosh; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@726934e2] under tanh; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1319bc2a] under pi; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403] under log; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@12a470dd] under position; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78422efb] under overlay; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@d48e998] under trim; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7885776b] under cast; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@497d4c96] under collate; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1984212d] under extract; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3af58f76] under ifnull; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@27a09971] under pad; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@152c4495] under str; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@f9cab00] under format; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7c5d1d25] under timestampadd; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6a1d526c] under timestampdiff; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6870c3c2] under current_date; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fb0a08c] under current_time; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1faf386c] under current_timestamp; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4debbf0] under local_date; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a5e167a] under local_time; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e06f7d] under local_datetime; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66a5755] under offset_datetime; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@771a7d53] under instant; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7e4579c7] under sql; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e280403
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796f632b] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tanh)] under tanh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@726934e2
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sinh)] under sinh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a1ef65c
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cosh)] under cosh; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72976b4
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acosh)] under acosh; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asinh)] under asinh; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atanh)] under atanh; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1319bc2a
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@5b47731f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6a5e167a
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@60e06f7d
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@60a7e509] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2e13f304] under bit_length; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@787508ca] under octet_length; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : char -> chr
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d24420b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@12a470dd
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6274670b] under bitand; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ce2392] under bitor; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32d5279] under bitxor; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c067c0d] under bitnot; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d0b0cb9] under median; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16ac5d35] under insert; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6cd15072] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78422efb
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@78cfa264] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@7980cf2c] under listagg; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@682abca7] under array; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConstructorFunction@1d858300] under array_list; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@610d28b8] under array_agg; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionFunction@9c73fff] under array_position; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@23da79eb] under array_positions; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayPositionsFunction@2703d91] under array_positions_list; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5be052ca] under array_length; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatFunction@75023c53] under array_concat; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@6723610b] under array_prepend; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayConcatElementFunction@5ba03c82] under array_append; prior registration was null
2025-04-21 18:52:43 DEBUG HikariPool - HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@991cbde] under array_contains; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayContainsOperatorFunction@78d71df1] under array_contains_nullable; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2e7bf7b7] under array_overlaps; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayOverlapsOperatorFunction@2fb25f4c] under array_overlaps_nullable; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78ec89a6] under array_get; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArraySetUnnestFunction@642ee49c] under array_set; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_remove)] under array_remove; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayRemoveIndexUnnestFunction@4e224df5] under array_remove_index; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32456db0] under array_slice; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(array_replace)] under array_replace; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f5827d0] under array_trim; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@4ed5a1b0] under array_fill; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.PostgreSQLArrayFillFunction@18d003cd] under array_fill_list; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayToStringFunction@59c04bee] under array_to_string; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@388623ad] under mode; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@91f565d] under percentile_cont; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@46e3559f] under percentile_disc; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1ddc6db2] under rank; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cd26422] under dense_rank; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2eda072] under percent_rank; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fa21d49] under cume_dist; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2ed71727] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@5261ec9] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65bb6275] under bitxor; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32d5279
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncRoundFunction@7951c3a2] under round; prior registration was NamedSqmFunctionTemplate(round)
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLTruncFunction@55fdf7f9] under trunc; prior registration was null
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-04-21 18:52:43 DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4091b9c3] under date_trunc; prior registration was null
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double acosh(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_agg(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_append( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_concat( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_list( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_prepend( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_remove( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_remove_index( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_replace(ARRAY array, OBJECT old, OBJECT new)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_set( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String array_to_string( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double asinh(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double atanh(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - avg(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - bit_and(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - bit_or(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - bitnot(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - cast(arg as Type)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double cbrt(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - (STRING string0[, STRING string1[, ...]])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double corr(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Date current date
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Time current time
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Date current_date
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Instant current_instant
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Time current_time
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - first_valueANY value
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String initcap(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Instant instant
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - last_valueANY value
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - LocalDate local date
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - LocalTime local time
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - LocalDate local_date
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - LocalTime local_time
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Time localtime
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String lower(STRING string)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String md5(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - mode()
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String overlay(string placing replacement from start[ for length])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double pi
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double regr_count(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Long row_number()
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String soundex(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Object sql
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String str(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - sum(arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String to_char(ANY arg0[, STRING arg1, STRING arg2])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - trunc( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - truncate( ... )
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - String upper(STRING string)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-04-21 18:52:43 DEBUG HQL_FUNCTIONS - Double variance(NUMERIC arg)
2025-04-21 18:52:43 DEBUG cache - Starting QueryInterpretationCache(2048)
2025-04-21 18:52:43 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-21 18:52:43 DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-04-21 18:52:43 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:43 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Guest] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Guest
2025-04-21 18:52:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Guest]: private accessor [age]
2025-04-21 18:52:43 DEBUG interceptor - To-one property `org.example.entity.Guest#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Passport] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Passport
2025-04-21 18:52:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Passport]: private accessor [number]
2025-04-21 18:52:43 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:43 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:43 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:43 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Booking] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Booking
2025-04-21 18:52:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Booking]: private accessor [checkIn]
2025-04-21 18:52:43 DEBUG interceptor - To-one property `org.example.entity.Booking#room` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:43 DEBUG interceptor - To-one property `org.example.entity.Booking#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Room] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Room
2025-04-21 18:52:43 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Room]: private accessor [isAvailable]
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.User] is safe
2025-04-21 18:52:43 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.User
2025-04-21 18:52:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.User]: private accessor [email]
2025-04-21 18:52:44 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:44 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.Persons] is safe
2025-04-21 18:52:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.Persons
2025-04-21 18:52:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.Persons]: private accessor [name]
2025-04-21 18:52:44 DEBUG interceptor - To-one property `org.example.Persons#passport` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-21 18:52:44 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [org.example.entity.Invoice] is safe
2025-04-21 18:52:44 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.example.entity.Invoice
2025-04-21 18:52:44 DEBUG BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.example.entity.Invoice]: private accessor [amount]
2025-04-21 18:52:44 DEBUG creation - Starting post-init callbacks
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Guest.user]
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Guest) `staticFetchableList` generator
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Passport) `staticFetchableList` generator
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.room]
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Booking.user]
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Booking) `staticFetchableList` generator
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Room) `staticFetchableList` generator
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.User) `staticFetchableList` generator
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.Persons.passport]
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.Persons) `staticFetchableList` generator
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.booking]
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.example.entity.Invoice.user]
2025-04-21 18:52:44 DEBUG creation - Starting PostInitCallbackEntry : Entity(org.example.entity.Invoice) `staticFetchableList` generator
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : g1_0
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Guest)] with identifierForTableGroup [org.example.entity.Guest] for NavigablePath [org.example.entity.Guest] 
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b409a79] with identifierForTableGroup [org.example.entity.Guest.user] for NavigablePath [org.example.entity.Guest.user] 
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:52:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Guest]
 |  +-BasicFetch [org.example.entity.Guest.age]
 |  +-BasicFetch [org.example.entity.Guest.name]
 |  \-EntityFetchJoinedImpl [org.example.entity.Guest.user]

2025-04-21 18:52:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : org.example.entity.Guest) {
          primaryTableReference : guests as g1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : org.example.entity.Guest.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 18:52:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Guest
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Version select: select guest_id from guests where guest_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Insert (0): insert into guests (age,name,user_id) values (?,?,?) returning guest_id
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Update (0): update guests set age=?,name=?,user_id=? where guest_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Delete (0): delete from guests where guest_id=?
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : p1_0
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Passport)] with identifierForTableGroup [org.example.Passport] for NavigablePath [org.example.Passport] 
2025-04-21 18:52:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Passport]
 |  \-BasicFetch [org.example.Passport.number]

2025-04-21 18:52:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Passport) {
          primaryTableReference : Passport as p1_0
        }
      }
    }

2025-04-21 18:52:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Passport
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Version select: select id from Passport where id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Insert (0): insert into Passport (number) values (?) returning id
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Update (0): update Passport set number=? where id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Delete (0): delete from Passport where id=?
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : b1_0
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Booking)] with identifierForTableGroup [org.example.entity.Booking] for NavigablePath [org.example.entity.Booking] 
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@28cb86b2] with identifierForTableGroup [org.example.entity.Booking.room] for NavigablePath [org.example.entity.Booking.room] 
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : r1_0
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b476233] with identifierForTableGroup [org.example.entity.Booking.user] for NavigablePath [org.example.entity.Booking.user] 
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:52:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Booking]
 |  +-BasicFetch [org.example.entity.Booking.checkIn]
 |  +-BasicFetch [org.example.entity.Booking.checkOut]
 |  +-EntityFetchJoinedImpl [org.example.entity.Booking.room]
 |  +-BasicFetch [org.example.entity.Booking.status]
 |  \-EntityFetchJoinedImpl [org.example.entity.Booking.user]

2025-04-21 18:52:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : org.example.entity.Booking) {
          primaryTableReference : bookings as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.example.entity.Booking.room) {
              primaryTableReference : rooms as r1_0
            }
             join LazyTableGroup (u1 : org.example.entity.Booking.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-21 18:52:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Booking
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Version select: select booking_id from bookings where booking_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Insert (0): insert into bookings (check_in,check_out,room_id,status,user_id) values (?,?,?,?,?) returning booking_id
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Update (0): update bookings set check_in=?,check_out=?,room_id=?,status=?,user_id=? where booking_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Delete (0): delete from bookings where booking_id=?
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : r1_0
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Room)] with identifierForTableGroup [org.example.entity.Room] for NavigablePath [org.example.entity.Room] 
2025-04-21 18:52:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Room]
 |  +-BasicFetch [org.example.entity.Room.isAvailable]
 |  +-BasicFetch [org.example.entity.Room.price]
 |  +-BasicFetch [org.example.entity.Room.roomNumber]
 |  \-BasicFetch [org.example.entity.Room.roomType]

2025-04-21 18:52:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.example.entity.Room) {
          primaryTableReference : rooms as r1_0
        }
      }
    }

2025-04-21 18:52:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Room
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Version select: select room_id from rooms where room_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Insert (0): insert into rooms (is_available,price,room_number,room_type) values (?,?,?,?) returning room_id
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Update (0): update rooms set is_available=?,price=?,room_number=?,room_type=? where room_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Delete (0): delete from rooms where room_id=?
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User)] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 18:52:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.User]
 |  +-BasicFetch [org.example.entity.User.email]
 |  +-BasicFetch [org.example.entity.User.isActive]
 |  +-BasicFetch [org.example.entity.User.name]
 |  +-BasicFetch [org.example.entity.User.password]
 |  \-BasicFetch [org.example.entity.User.userRole]

2025-04-21 18:52:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 18:52:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.User
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Insert (0): insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Update (0): update users set email=?,is_active=?,name=?,password=?,user_role=? where user_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : p1_0
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.Persons)] with identifierForTableGroup [org.example.Persons] for NavigablePath [org.example.Persons] 
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@29dcdd1c] with identifierForTableGroup [org.example.Persons.passport] for NavigablePath [org.example.Persons.passport] 
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : p2_0
2025-04-21 18:52:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.Persons]
 |  +-BasicFetch [org.example.Persons.name]
 |  \-EntityFetchJoinedImpl [org.example.Persons.passport]

2025-04-21 18:52:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.example.Persons) {
          primaryTableReference : Persons as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (p2 : org.example.Persons.passport) {
              primaryTableReference : Passport as p2_0
            }
          }
        }
      }
    }

2025-04-21 18:52:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.Persons
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Version select: select id from Persons where id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Insert (0): insert into Persons (name,passport_id) values (?,?) returning id
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Update (0): update Persons set name=?,passport_id=? where id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Delete (0): delete from Persons where id=?
2025-04-21 18:52:44 DEBUG create - Created new SQL alias : i1_0
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.Invoice)] with identifierForTableGroup [org.example.entity.Invoice] for NavigablePath [org.example.entity.Invoice] 
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@17134190] with identifierForTableGroup [org.example.entity.Invoice.booking] for NavigablePath [org.example.entity.Invoice.booking] 
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7cd3e0da] with identifierForTableGroup [org.example.entity.Invoice.user] for NavigablePath [org.example.entity.Invoice.user] 
2025-04-21 18:52:44 DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [org.example.entity.Invoice]
 |  +-BasicFetch [org.example.entity.Invoice.amount]
 |  +-EntityDelayedFetchImpl [org.example.entity.Invoice.booking]
 |  +-BasicFetch [org.example.entity.Invoice.issueDate]
 |  +-BasicFetch [org.example.entity.Invoice.paymentStatus]
 |  \-EntityDelayedFetchImpl [org.example.entity.Invoice.user]

2025-04-21 18:52:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.example.entity.Invoice) {
          primaryTableReference : invoices as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : org.example.entity.Invoice.booking) {
            }
            left  join LazyTableGroup (u1 : org.example.entity.Invoice.user) {
            }
          }
        }
      }
    }

2025-04-21 18:52:44 DEBUG AbstractEntityPersister - Static SQL for entity: org.example.entity.Invoice
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Version select: select invoice_id from invoices where invoice_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Insert (0): insert into invoices (amount,booking_id,issue_date,payment_status,user_id) values (?,?,?,?,?) returning invoice_id
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Update (0): update invoices set amount=?,booking_id=?,issue_date=?,payment_status=?,user_id=? where invoice_id=?
2025-04-21 18:52:44 DEBUG AbstractEntityPersister -  Delete (0): delete from invoices where invoice_id=?
2025-04-21 18:52:44 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-04-21 18:52:44 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-04-21 18:52:44 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-21 18:52:44 INFO  JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-21 18:52:44 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f1ea80d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6987a133]
2025-04-21 18:52:44 DEBUG NamedObjectRepository - Checking 0 named HQL queries
2025-04-21 18:52:44 DEBUG NamedObjectRepository - Checking 0 named SQL queries
2025-04-21 18:52:44 DEBUG Table - No alter strings for table : bookings
2025-04-21 18:52:44 DEBUG Table - No alter strings for table : guests
2025-04-21 18:52:44 DEBUG Table - No alter strings for table : invoices
2025-04-21 18:52:44 DEBUG Table - No alter strings for table : Passport
2025-04-21 18:52:44 DEBUG Table - No alter strings for table : Persons
2025-04-21 18:52:44 DEBUG Table - No alter strings for table : rooms
2025-04-21 18:52:44 DEBUG Table - No alter strings for table : users
2025-04-21 18:52:44 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a17dd6f
2025-04-21 18:52:44 DEBUG SessionFactoryRegistry - Registering SessionFactory: fb529d17-e40b-4eeb-9b33-57a73c465e63 (my-persistence-unit)
2025-04-21 18:52:44 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-21 18:52:44 DEBUG SessionFactoryImpl - Instantiated SessionFactory
2025-04-21 18:52:44 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-04-21 18:52:44 DEBUG hql - HQL : SELECT COUNT(u) FROM User u WHERE u.email = :email
2025-04-21 18:52:44 DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2025-04-21 18:52:44 DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(org.example.entity.User(u).email)
2025-04-21 18:52:44 DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `org.example.entity.User(u)`
          <- [root] - `org.example.entity.User(u)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `org.example.entity.User(u).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-21 18:52:44 DEBUG create - Created new SQL alias : u1_0
2025-04-21 18:52:44 DEBUG create - Registration of TableGroup [StandardTableGroup(org.example.entity.User(u))] with identifierForTableGroup [org.example.entity.User] for NavigablePath [org.example.entity.User] 
2025-04-21 18:52:44 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-04-21 18:52:44 DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.example.entity.User(u).email) 
2025-04-21 18:52:44 DEBUG AST - DomainResult Graph:
 \-BasicResult

2025-04-21 18:52:44 DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : org.example.entity.User(u)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-21 18:52:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:52:44 DEBUG results - Initializer list is empty
2025-04-21 18:52:44 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-21 18:52:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@30ed4034
2025-04-21 18:52:44 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-21 18:52:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:52:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:52:44 DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-04-21 18:52:44 DEBUG results - Initializer list is empty
2025-04-21 18:52:44 DEBUG SQL - select count(u1_0.user_id) from users u1_0 where u1_0.email=?
2025-04-21 18:52:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@30ed4034
2025-04-21 18:52:44 DEBUG results - Extracted JDBC value [0] - [0]
2025-04-21 18:52:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:52:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:52:44 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-21 18:52:44 DEBUG TransactionImpl - begin
2025-04-21 18:52:44 DEBUG ActionQueue - Executing identity-insert immediately
2025-04-21 18:52:44 DEBUG SQL - insert into users (email,is_active,name,password,user_role) values (?,?,?,?,?) returning user_id
2025-04-21 18:52:44 DEBUG results - Initializer list is empty
2025-04-21 18:52:44 DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3211cc84
2025-04-21 18:52:44 DEBUG results - Extracted JDBC value [0] - [1]
2025-04-21 18:52:44 DEBUG IdentifierGeneratorHelper - Extracted generated values [org.example.entity.User]: [Ljava.lang.Object;@62ee1c89
2025-04-21 18:52:44 DEBUG TransactionImpl - committing
2025-04-21 18:52:44 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-04-21 18:52:44 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-04-21 18:52:44 DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-21 18:52:44 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-21 18:52:44 DEBUG EntityPrinter - Listing entities:
2025-04-21 18:52:44 DEBUG EntityPrinter - org.example.entity.User{password=!Q1q, name=SAURAV SHARMA, isActive=true, userRole=GUEST, userID=1, email=saurav@gmail.com}
2025-04-21 18:52:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:52:44 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-04-21 18:52:44 INFO  UserDaoImpl - User registered successfully: User{userID=1, name='SAURAV SHARMA', email='saurav@gmail.com', password='!Q1q', userRole=GUEST, isActive=true}
2025-04-21 18:53:12 DEBUG HikariPool - HikariPool-1 - Pool stats (total=10/10, idle=10/10, active=0, waiting=0)
2025-04-21 18:53:12 DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-21 18:53:22 WARN  UserMenuUI - Invalid name format entered: 1
